{"version":3,"sources":["utils/timeHelper.js","components/common/table/Table.js","components/pageSpecific/agriculturalPractices/linked/rawMaterial/view/View.js","components/pageSpecific/agriculturalPractices/view/View.js","pages/agriculturalPractices/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["utcToLocalTime","dateTimeString","format","moment","Table","header","data","className","length","map","element","i","colSpan","Object","keys","subElement","subI","RawMaterialView","formData","useState","fdDefVal","setFdDefVal","_checkFolialDrenche","indexOf","parseInt","method","_checkManual","_calculateQtyTree","rawMaterialData","quantity","useEffect","rawMaterials","remainingTotal","parseFloat","rawMaterial","index","name","unit","unitMetric","qtyTree","qtyLts","total","AgriculturalPracticeView","htmlFor","id","formulationName","scheduledDate","daysToDo","methods","rows","observations","statuses","status","params","useParams","store","useSelector","selectAgriculturalPractice","dispatch","useDispatch","pageName","document","title","process","initFormData","defaultFolialDrencheId","actionType","readData","Breadcrumb","breadCrumbs","link","value","activeLink","to","defaultProps"],"mappings":"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","file":"static/js/43.f201070b.chunk.js","sourcesContent":["import moment from \"moment\";\n\nexport const utcToLocalTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\n};\n\nexport const localToUtcTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Table.scss\";\n\nfunction Table({ header, data }) {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table m-0\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            {header.length > 0\n              ? header.map((element, i) => <th className=\"text-center\" key={i}>{element}</th>)\n              : \"\"}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length === 0 ? (\n            <tr>\n              <td colSpan={1 + header.length} className=\"text-center\">\n                No Record found\n              </td>\n            </tr>\n          ) : (\n            data.map((element, i) => (\n              <tr key={i}>\n                <td className=\"text-center\">{i + 1}</td>\n                {Object.keys(element).map((subElement, subI) => (\n                  <td className=\"text-center\" key={subI}>{element[subElement]}</td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTable.propTypes = {\n  header: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport { unitMetric } from \"../../../../../../utils/appConstants\";\nimport Table from \"../../../../../common/table/Table\";\n\nfunction RawMaterialView({ formData }) {\n  const [fdDefVal, setFdDefVal] = useState(1000);\n\n  const _checkFolialDrenche = () =>\n    [0, 2].indexOf(parseInt(formData.method)) > -1;\n\n  const _checkManual = () => parseInt(formData.method) === 1;\n\n  const _calculateQtyTree = (rawMaterialData) => {\n    return rawMaterialData.quantity || 0;\n  };\n\n  const _getRemaining = () => {\n    let remainingTotal = 0;\n    if (formData.rawMaterials && formData.rawMaterials.length > 0) {\n      for (let i = 1; i < formData.rawMaterials.length; i++) {\n        remainingTotal += parseFloat(formData.rawMaterials[i].quantity) || 0;\n      }\n    }\n    return remainingTotal;\n  };\n\n  useEffect(() => {\n    if (\n      _checkFolialDrenche() &&\n      formData.rawMaterials &&\n      formData.rawMaterials.length > 0\n    ) {\n      let remainingTotal = 0;\n      for (let i = 0; i < formData.rawMaterials.length; i++) {\n        remainingTotal += parseFloat(formData.rawMaterials[i].quantity) || 0;\n      }\n      setFdDefVal(remainingTotal);\n    }\n  });\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"row\">\n        <div className=\"col-12 border border-2 rounded\">\n          <h6 className={`text-center text-bold`}>Amount to Dose</h6>\n          <Table\n            data={\n              formData.rawMaterials &&\n              formData.rawMaterials.map((rawMaterial, index) => ({\n                name: rawMaterial.rawMaterial.name,\n                quantity:\n                  _checkFolialDrenche() && index === 0\n                    ? fdDefVal\n                    : rawMaterial.quantity,\n                unit: unitMetric[rawMaterial.unit],\n                ...(_checkManual()\n                  ? {\n                      qtyTree: `${_calculateQtyTree(rawMaterial)} ${\n                        unitMetric[rawMaterial.unit]\n                      }`,\n                    }\n                  : {}),\n                ...(_checkFolialDrenche()\n                  ? {\n                      qtyLts:\n                        index !== 0\n                          ? `${_calculateQtyTree(rawMaterial)} ${\n                              unitMetric[rawMaterial.unit]\n                            }`\n                          : \"\",\n                      total:\n                        index === 0 &&\n                        `${rawMaterial.quantity} ${\n                          unitMetric[rawMaterial.unit]\n                        }`,\n                    }\n                  : {}),\n              }))\n            }\n            header={[\n              \"Material\",\n              \"Quantity\",\n              \"Unit\",\n              ...(_checkManual() ? [\"Qty x Tree\"] : []),\n              ...(_checkFolialDrenche() ? [\"Qty x Lts.\", \"Total\"] : []),\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RawMaterialView;\n","import React from \"react\";\nimport { methods, statuses } from \"../../../../utils/appConstants\";\nimport RawMaterialView from \"../linked/rawMaterial/view/View\";\nimport { utcToLocalTime } from \"../../../../utils/timeHelper\";\n\nfunction AgriculturalPracticeView({ formData }) {\n  return (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-md-6\">\n          <label htmlFor=\"input1\" className=\"form-label\">\n            Formulation Name\n          </label>\n          <span id=\"input1\" className=\"form-control\">\n            {formData.formulationName}\n          </span>\n        </div>\n\n        <div className=\"col-md-3\">\n          <label htmlFor=\"input2\" className=\"form-label\">\n            Schedule Date\n          </label>\n          <span id=\"input2\" className=\"form-control\">\n            {utcToLocalTime(formData.scheduledDate, \"YYYY-MM-DD\")}\n          </span>\n        </div>\n\n        <div className=\"col-md-3\">\n          <label htmlFor=\"input3\" className=\"form-label\">\n            Days to do\n          </label>\n          <span id=\"input3\" className=\"form-control\">\n            {formData.daysToDo}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col-md-6\">\n          <label htmlFor=\"input8\" className=\"form-label\">\n            Method\n          </label>\n          <span id=\"input8\" className=\"form-control\">\n            {methods[parseInt(formData.method)]}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"input11\" className=\"form-label\">\n          Observations\n        </label>\n        <span id=\"input11\" className=\"form-control\" rows=\"4\">\n          {formData.observations}\n        </span>\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"input4\" className=\"form-label\">\n          Status\n        </label>\n        <span id=\"input4\" className=\"form-control\">\n          {statuses[parseInt(formData.status)]}\n        </span>\n      </div>\n\n      <div className=\"mb-3\">\n        <div className=\"card\">\n          <div className=\"card-header border-transparent\">\n            <h4 className=\"m-0\">Raw Material</h4>\n          </div>\n          <div className=\"card-body\">\n            <RawMaterialView formData={formData} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AgriculturalPracticeView;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./View.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport {\n  initFormData,\n  readData,\n  selectAgriculturalPractice,\n} from \"../../../store/redux/Page/AgriculturalPractice\";\nimport AgriculturalPracticeViewComponent from \"../../../components/pageSpecific/agriculturalPractices/view/View\";\nimport { useParams } from \"react-router-dom\";\nimport { defaultFolialDrencheId } from \"../../../utils/appConstants\";\n\nfunction AgriculturalPracticeView() {\n  const params = useParams();\n  const store = useSelector(selectAgriculturalPractice);\n  const dispatch = useDispatch();\n  const pageName = \"View agricultural practice\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Agricultural Practices\",\n      link: \"/agricultural-practices\",\n    },\n    {\n      name: \"View\",\n      link: \"\",\n    },\n  ];\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(\n      initFormData({\n        id: defaultFolialDrencheId,\n        actionType: \"loadDefaultFolialDrenche\",\n      })\n    );\n    dispatch(readData({ id: params.id }));\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>&nbsp;</div>\n                  </div>\n                  <div className=\"card-body\">\n                    <AgriculturalPracticeViewComponent\n                      formData={store.formData}\n                    />\n                  </div>\n\n                  <div className=\"card-footer clearfix\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default AgriculturalPracticeView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}