{"version":3,"sources":["components/common/inputLabel/InputLabel.js","utils/validationHelper.js","components/common/textInput/TextInput.js","components/common/filePreview/FilePreview.js","components/common/fileInput/FileInput.js","components/pageSpecific/illnesses/form/Form.js","pages/illnesses/create/Create.js","components/common/breadcrumb/Breadcrumb.js"],"names":["InputLabel","props","htmlFor","inputId","className","labelText","isRequired","defaultProps","validatorRule","value","validationKeyword","validation","status","message","test","validator","isEmpty","ignore_whitespace","isFloat","isEmail","isAlpha","ignore","isAlphanumeric","isNumeric","valData","split","equals","validate","inputvalue","validationRules","validationResult","forEach","validationRule","runningValidation","trim","TextInput","_validate","validationData","validations","_handleFormValidation","name","useEffect","id","labelClassName","placeholder","type","inputClassName","formValidationData","rows","onChange","onBlur","e","currentTarget","indexOf","FilePreview","useState","fileUrl","setFileUrl","opacity","paginationOpacity","setPaginationOpacity","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","_selectIconBasedOnFileType","fileName","selectIcon","match","faFileImage","faFilePdf","faFileExcel","faFile","size","icon","onClick","files","length","map","file","index","forForm","preventDefault","allFiles","splice","_onChange","OnDelete","faTimesCircle","tabIndex","selectPreviewer","src","alt","onMouseEnter","onMouseLeave","onLoadSuccess","style","disabled","href","target","rel","download","_selectPreviewerBasedOnFileType","pdfjs","GlobalWorkerOptions","workerSrc","version","FileInput","existingFiles","label","accept","multiple","isMultiple","required","IllnessForm","formData","_handleOnChange","observation","filePathUrl","illnesses","parseInt","Object","keys","statuses","IllnessCreate","store","useSelector","selectIllness","dispatch","useDispatch","pageName","document","title","process","initFormData","breadCrumbs","link","encType","onSubmit","storeData","FormData","handleFormDataChange","key","formValidation","handleFormValidation","loading","role","Breadcrumb","activeLink","to"],"mappings":"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","file":"static/js/14.3c7b3a33.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./InputLabel.scss\";\n\nfunction InputLabel(props) {\n  return (\n    <label htmlFor={props.inputId} className={props.className}>\n      {props.labelText}{\" \"}\n      {props.isRequired && <span className=\"text-danger\">*</span>}\n    </label>\n  );\n}\n\nInputLabel.propTypes = {\n  inputId: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool.isRequired\n};\n\nInputLabel.defaultProps = {\n  className: \"form-label\",\n  isRequired: false,\n  labelText: \"\",\n};\n\nexport default InputLabel;\n","import validator from \"validator\";\r\n\r\nconst validatorRule = (value, validationKeyword) => {\r\n  let validation = { status: true, message: \"\" };\r\n  switch (true) {\r\n    case /required/i.test(validationKeyword):\r\n      validation.status = !validator.isEmpty(value, {\r\n        ignore_whitespace: true,\r\n      });\r\n      validation.message =\r\n        validation.status === false ? \"The value is required!\" : \"\";\r\n      break;\r\n    case /float/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isFloat(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be a float!\" : \"\";\r\n      }\r\n      break;\r\n    case /email/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isEmail(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be an Email!\" : \"\";\r\n      }\r\n      break;\r\n    case /alpha/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlpha(value, \"en-US\", { ignore: \" \" });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Alphabetic!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /alphanumeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlphanumeric(value, \"en-US\", {\r\n          ignore: \" \",\r\n        });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be AlphaNumeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /numeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isNumeric(value);\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Numeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /equals:*/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        const valData = validationKeyword.split(\":\");\r\n        validation.status = validator.equals(value, valData[2]);\r\n        validation.message =\r\n          validation.status === false\r\n            ? `The value needs to be same as ${valData[1]}!`\r\n            : \"\";\r\n      }\r\n      break;\r\n    default:\r\n      validation.status = true;\r\n      validation.message = \"\";\r\n      break;\r\n  }\r\n  return validation;\r\n};\r\n\r\nexport const validate = (inputvalue, validationRules = []) => {\r\n  const validationResult = {\r\n    status: true,\r\n    message: \"\",\r\n  };\r\n  validationRules.forEach((validationRule) => {\r\n    const runningValidation = validatorRule(inputvalue, validationRule);\r\n    validationResult.status =\r\n      validationResult.status && runningValidation.status;\r\n    validationResult.message += \" \" + runningValidation.message;\r\n    validationResult.message = validationResult.message.trim();\r\n  });\r\n  return validationResult;\r\n};\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TextInput.scss\";\nimport InputLabel from \"../inputLabel/InputLabel\";\nimport { validate } from \"../../../utils/validationHelper\";\n\nfunction TextInput(props) {\n  const _validate = (value) => {\n    const validationData = validate(value || \"\", props.validations);\n    if (validationData.status === false) {\n      props._handleFormValidation(props.name, validationData);\n    } else {\n      props._handleFormValidation(props.name, null);\n    }\n  };\n\n  // Remove if Validation causes issue\n  useEffect(() => {\n    _validate();\n  }, []);\n\n  return (\n    <div className=\"m-2\">\n      <InputLabel\n        inputId={props.id}\n        className={props.labelClassName}\n        labelText={props.placeholder}\n        isRequired={props.isRequired}\n      />\n      {props.type === \"textarea\" && (\n        <textarea\n          id={props.id}\n          className={`${props.inputClassName} ${\n            props.formValidationData[props.name] &&\n            props.formValidationData[props.name].status === false &&\n            \"is-invalid\"\n          }`}\n          rows=\"3\"\n          placeholder={props.placeholder}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          onBlur={(e) => _validate(e.currentTarget.value)}\n        />\n      )}\n\n      {[\"textarea\"].indexOf(props.type) === -1 && (\n        <input\n          id={props.id}\n          className={`${props.inputClassName} ${\n            props.formValidationData[props.name] &&\n            props.formValidationData[props.name].status === false &&\n            \"is-invalid\"\n          }`}\n          type={props.type}\n          placeholder={props.placeholder}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          onBlur={(e) => _validate(e.currentTarget.value)}\n        />\n      )}\n\n      {props.formValidationData[props.name] &&\n        props.formValidationData[props.name].status === false && (\n          <div className=\"invalid-feedback\">\n            {props.formValidationData[props.name].message}\n          </div>\n        )}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  labelClassName: PropTypes.string.isRequired,\n  inputClassName: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  validations: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n};\n\nTextInput.defaultProps = {\n  labelClassName: \"form-label\",\n  inputClassName: \"form-control\",\n  isRequired: false,\n  validations: [],\n  value: \"\",\n  onChange: () => {},\n};\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  faFileExcel,\n  faFilePdf,\n  faFileImage,\n  faFile,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"./FilePreview.scss\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nfunction FilePreview(props) {\n  const [fileUrl, setFileUrl] = useState(\"\");\n\n  const [paginationOpacity, setPaginationOpacity] = useState({ opacity: \"0\" });\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const OnDelete = (e, index) => {\n    e.preventDefault();\n    const allFiles = [...props.files];\n    allFiles.splice(index, 1);\n    props._onChange({\n      currentTarget: { name: \"files\", value: allFiles },\n    });\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  const changePage = (offset) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const _selectIconBasedOnFileType = (fileName) => {\n    let selectIcon;\n    switch (true) {\n      case fileName.match(/\\.(jpeg|jpg|gif|png)$/) != null:\n        selectIcon = faFileImage;\n        break;\n\n      case fileName.match(/\\.(pdf)$/) != null:\n        selectIcon = faFilePdf;\n        break;\n\n      case fileName.match(/\\.(xlsx|xls|csv)$/) != null:\n        selectIcon = faFileExcel;\n        break;\n\n      default:\n        selectIcon = faFile;\n        break;\n    }\n\n    return (\n      <FontAwesomeIcon\n        className=\"img-fluid\"\n        size=\"5x\"\n        icon={selectIcon}\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#filePreviewModal\"\n        onClick={() => setFileUrl(`${props.fileUrl}/${fileName}`)}\n      />\n    );\n  };\n\n  const _selectPreviewerBasedOnFileType = () => {\n    let selectPreviewer;\n    switch (true) {\n      case fileUrl.match(/\\.(jpeg|jpg|gif|png)$/) != null:\n        selectPreviewer = <img src={`${fileUrl}`} alt=\"Uploaded Data\" />;\n        break;\n\n      case fileUrl.match(/\\.(pdf)$/) != null:\n        selectPreviewer = (\n          <div\n            onMouseEnter={() => setPaginationOpacity({ opacity: \"100\" })}\n            onMouseLeave={() => setPaginationOpacity({ opacity: \"0\" })}\n          >\n            <Document file={`${fileUrl}`} onLoadSuccess={onDocumentLoadSuccess}>\n              <Page pageNumber={pageNumber} />\n            </Document>\n            <nav\n              className=\"shadow pdf-pagination-nav\"\n              aria-label=\"Pdf page navigation\"\n              style={paginationOpacity}\n            >\n              <ul className=\"pagination m-0\">\n                <li\n                  className={`page-item ${pageNumber <= 1 ? \"disabled\" : \"\"}`}\n                >\n                  <button\n                    className=\"page-link\"\n                    type=\"button\"\n                    disabled={pageNumber <= 1}\n                    onClick={previousPage}\n                  >\n                    Previous\n                  </button>\n                </li>\n                <li className=\"page-item\">\n                  <p className=\"page-link m-0\">\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of{\" \"}\n                    {numPages || \"--\"}\n                  </p>\n                </li>\n                <li\n                  className={`page-item ${\n                    pageNumber >= numPages ? \"disabled\" : \"\"\n                  }`}\n                >\n                  <button\n                    className=\"page-link\"\n                    type=\"button\"\n                    disabled={pageNumber >= numPages}\n                    onClick={nextPage}\n                  >\n                    Next\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        );\n        break;\n\n      case fileUrl.match(/\\.(xlsx|xls|csv)$/) != null:\n        selectPreviewer = (\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\n            Download\n          </a>\n        );\n        break;\n\n      default:\n        selectPreviewer = (\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\n            Download\n          </a>\n        );\n        break;\n    }\n\n    return selectPreviewer;\n  };\n\n  return (\n    <>\n      {props.files && props.files.length > 0 && (\n        <div className=\"row mb-3\">\n          <div className=\"col-12\">\n            <div className=\"file-preview\">\n              <div className=\"row pt-2\">\n                {props.files.map((file, index) => (\n                  <div className=\"col-1 position-relative\" key={index}>\n                    {props.forForm && (\n                      <>\n                        <button\n                          className=\"btn btn-danger position-absolute top-0 start-100 translate-middle badge rounded-circle p-0 border border-danger\"\n                          type=\"button\"\n                          onClick={(e) => OnDelete(e, index)}\n                        >\n                          <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                        <input\n                          key={index}\n                          type=\"hidden\"\n                          name=\"existingFiles\"\n                          value={file}\n                        />\n                      </>\n                    )}\n                    {_selectIconBasedOnFileType(file)}\n                  </div>\n                ))}\n\n                {/*Modal*/}\n                <div\n                  className=\"modal fade\"\n                  id=\"filePreviewModal\"\n                  data-bs-backdrop=\"static\"\n                  data-bs-keyboard=\"false\"\n                  tabIndex=\"-1\"\n                  aria-labelledby=\"filePreviewModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"modal-dialog modal-dialog-centered modal-xl\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"filePreviewModalLabel\">\n                          File Preview\n                        </h5>\n                        <button\n                          type=\"button\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                          onClick={() => setFileUrl(\"\")}\n                        ></button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <div className=\"container-fluid\">\n                          <div className=\"row d-flex\">\n                            <div className=\"col-12 d-flex justify-content-center\">\n                              {_selectPreviewerBasedOnFileType(fileUrl)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          onClick={() => setFileUrl(\"\")}\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nFilePreview.propTypes = {\n  fileUrl: PropTypes.string.isRequired,\n  files: PropTypes.array.isRequired,\n  forForm: PropTypes.bool.isRequired,\n  _onChange: PropTypes.func,\n};\n\nFilePreview.defaultProps = {\n  fileUrl: \"\",\n  files: [],\n  forForm: false,\n};\n\nexport default FilePreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FilePreview from \"../filePreview/FilePreview\";\nimport \"./FileInput.scss\";\nimport InputLabel from \"../inputLabel/InputLabel\";\n\nfunction FileInput(props) {\n  return (\n    <>\n      <FilePreview\n        files={props.existingFiles}\n        fileUrl={props.fileUrl}\n        forForm={true}\n        _onChange={props._onChange}\n      />\n\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <InputLabel\n            inputId={props.id}\n            labelText={props.label}\n            isRequired={props.isRequired}\n          />\n          <input\n            id={props.id}\n            className=\"form-control form-control-lg\"\n            type=\"file\"\n            name={props.name}\n            accept={props.accept}\n            multiple={props.isMultiple}\n            required={props.isRequired}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nFileInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  isRequired: PropTypes.bool,\n  isMultiple: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  existingFiles: PropTypes.array,\n  fileUrl: PropTypes.string.isRequired,\n  _onChange: PropTypes.func.isRequired,\n};\n\nFileInput.defaultProps = {\n  name: \"files\",\n  isMultiple: false,\n  isRequired: false,\n  label: \"Files\",\n  existingFiles: [],\n  fileUrl: \"\",\n};\n\nexport default FileInput;\n","import React from \"react\";\nimport { statuses, filePathUrl } from \"../../../../utils/appConstants\";\nimport TextInput from \"../../../common/textInput/TextInput\";\nimport FileInput from \"../../../common/fileInput/FileInput\";\n\nfunction IllnessForm({\n  formData,\n  _handleOnChange,\n  formValidationData,\n  _handleFormValidation,\n}) {\n  return (\n    <>\n      {formData.id ? <input type=\"hidden\" value={formData.id} /> : \"\"}\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <TextInput\n            id=\"input1\"\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            isRequired={true}\n            value={formData.name}\n            onChange={_handleOnChange}\n            validations={[\"required\"]}\n            formValidationData={formValidationData}\n            _handleFormValidation={_handleFormValidation}\n          />\n        </div>\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <label htmlFor=\"input2\" className=\"form-label\">\n            Observation\n          </label>\n          <textarea\n            id=\"input2\"\n            className=\"form-control\"\n            placeholder=\"Observation\"\n            name=\"observation\"\n            onChange={_handleOnChange}\n            value={formData.observation}\n          />\n        </div>\n      </div>\n\n      <FileInput\n        id=\"input3\"\n        name=\"files\"\n        isMultiple\n        label=\"Files\"\n        existingFiles={formData.files}\n        _onChange={_handleOnChange}\n        fileUrl={filePathUrl.illnesses}\n      />\n\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <label htmlFor=\"input4\" className=\"form-label\">\n            Status <span className=\"text-danger\">*</span>\n          </label>\n          <select\n            id=\"input4\"\n            className=\"form-select\"\n            name=\"status\"\n            onChange={_handleOnChange}\n            value={parseInt(formData.status)}\n          >\n            {Object.keys(statuses).map((status, index) => (\n              <option key={index} value={status}>\n                {statuses[status]}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default IllnessForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Create.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport {\n  handleFormDataChange,\n  handleFormValidation,\n  initFormData,\n  selectIllness,\n  storeData,\n} from \"../../../store/redux/Page/Illness\";\nimport IllnessForm from \"../../../components/pageSpecific/illnesses/form/Form\";\n\nfunction IllnessCreate() {\n  const store = useSelector(selectIllness);\n  const dispatch = useDispatch();\n  const pageName = \"Add illness\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Illnesses\",\n      link: \"/illnesses\",\n    },\n    {\n      name: \"Add\",\n      link: \"\",\n    },\n  ];\n\n  const _handleOnChange = (e) => {\n    dispatch(\n      handleFormDataChange({\n        key: e.currentTarget.name,\n        value: e.currentTarget.value,\n      })\n    );\n  };\n\n  const _handleFormValidation = (key, value) => {\n    dispatch(\n      handleFormValidation({\n        key,\n        value,\n      })\n    );\n  };\n\n  const _handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(storeData(new FormData(e.currentTarget)));\n  };\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(initFormData());\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>&nbsp;</div>\n                  </div>\n\n                  <form\n                    name={`${pageName}Create`}\n                    encType={`multipart/form-data`}\n                    onSubmit={_handleFormSubmit}\n                  >\n                    <div className=\"card-body\">\n                      <IllnessForm\n                        formData={store.formData}\n                        _handleOnChange={_handleOnChange}\n                        formValidationData={store.formValidation}\n                        _handleFormValidation={_handleFormValidation}\n                      />\n                    </div>\n\n                    <div className=\"card-footer clearfix\">\n                      <button\n                        className=\"btn btn-sm btn-app float-end\"\n                        disabled={\n                          Object.keys(store.formValidation).length > 0 ||\n                          store.loading === true\n                        }\n                      >\n                        {store.loading === true && (\n                          <span\n                         className=   \"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                        )}{\" \"}\n                        Save\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default IllnessCreate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}