{"version":3,"sources":["pages/managepersons/create/Create.js","components/common/breadcrumb/Breadcrumb.js"],"names":["PersonCreate","useState","fname","setFName","fnameError","setFNameError","lname","setLName","lnameError","setLNameError","phone","setPhone","phoneError","setPhoneError","email","setEmail","emailError","setEmilError","address","setAddress","adressError","setAddressError","password","setPassword","passwordError","setPasswordError","conpassword","setConPassword","conpasswordError","setConPasswordError","allrole","setAllrole","allFarm","setAllFarm","farm","setFarm","role","setRole","roleError","setRoleError","status","setStatus","history","useHistory","createUser","a","axios","post","process","headers","localStorage","getItem","then","response","alert","data","message","push","catch","error","console","log","getFarmList","get","farmData","dbData","id","getuserRoles","personData","useEffect","document","title","className","breadCrumbs","name","link","method","onSubmit","e","preventDefault","encType","htmlFor","type","placeholder","value","onChange","target","style","color","length","map","roles","index","farms","Breadcrumb","activeLink","to","defaultProps"],"mappings":"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","file":"static/js/50.94b2317f.chunk.js","sourcesContent":["import Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nfunction PersonCreate() {\r\n    const [fname, setFName] = useState(\"\");\r\n    const [fnameError, setFNameError] = useState(\"\");\r\n\r\n    const [lname, setLName] = useState(\"\");\r\n    const [lnameError, setLNameError] = useState(\"\");\r\n\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmilError] = useState(\"\");\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n    const [adressError, setAddressError] = useState(\"\");\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const [conpassword, setConPassword] = useState(\"\");\r\n    const [conpasswordError, setConPasswordError] = useState(\"\");\r\n\r\n    const [allrole, setAllrole] = useState(\"\");\r\n\r\n    const [allFarm, setAllFarm] = useState(\"\");\r\n\r\n    const [farm, setFarm] = useState(\"\");\r\n\r\n    const [role, setRole] = useState(\"\");\r\n    const [roleError, setRoleError] = useState(\"\");\r\n\r\n    const [status, setStatus] = useState(1);\r\n\r\n    const history = useHistory();\r\n\r\n    const pageName = \"Add Person\";\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Persons\",\r\n            link: \"/persons\",\r\n        },\r\n        {\r\n            name: \"Add\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n\r\n    // api calling for create user\r\n    const createUser = async () => {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/person/store`, {\r\n            \"firstName\": fname,\r\n            \"lastName\": lname,\r\n            \"email\": email,\r\n            \"phone\": phone,\r\n            \"password\": password,\r\n            \"confirmPassword\": conpassword,\r\n            \"address\": address,\r\n            \"role_type\": role,\r\n            \"farm_id\": farm,\r\n            \"status\": status\r\n        },\r\n            {\r\n                headers: {\r\n                    'authorization': localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME),\r\n                }\r\n            }).then((response) => {\r\n                alert(response.data.message)\r\n                history.push(\"/persons\")\r\n\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n            })\r\n    };\r\n    const functionrole = (e) => {\r\n        console.log(\"AAAAA\", e);\r\n        setRole(e)\r\n    }\r\n\r\n    const getFarmList = async () => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/farms`,\r\n            { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n                const farmData = response.data.data.dbData;\r\n                setAllFarm(farmData)\r\n                setFarm(farmData[0].id)\r\n                console.log(farmData);\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n    }\r\n\r\n    const getuserRoles = async () => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/userroles`,\r\n            { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n                const personData = response.data.data.dbData;\r\n                setAllrole(personData)\r\n                setRole(personData[0].id)\r\n                console.log(role);\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = `${process.env.REACT_APP_NAME}`;\r\n        getFarmList();\r\n        getuserRoles();\r\n    }, []);\r\n    // for submit\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let error = false;\r\n\r\n        if (!fname) {\r\n            setFNameError(\" First Name Required\");\r\n            error = true;\r\n        } else {\r\n            setFNameError(\"\");\r\n        }\r\n        if (!lname) {\r\n            setLNameError(\" Last Name Required\");\r\n            error = true;\r\n        } else {\r\n            setLNameError(\"\");\r\n        }\r\n        if (!phone) {\r\n            setPhoneError(\"Phone number Required\");\r\n            error = true;\r\n        } else {\r\n            setPhoneError(\"\");\r\n        }\r\n        if (!email) {\r\n            setEmilError(\" Email Required\");\r\n            error = true;\r\n        } else {\r\n            setEmilError(\"\");\r\n        }\r\n        if (!address) {\r\n            setAddressError(\" Address Required\");\r\n            error = true;\r\n        } else {\r\n            setAddressError(\"\");\r\n        }\r\n        if (!password) {\r\n            setPasswordError(\"Password Required\");\r\n            error = true;\r\n        } else {\r\n            setPasswordError(\"\");\r\n        }\r\n        if (!conpassword) {\r\n            setConPasswordError(\" Confirm Password Required\");\r\n            error = true;\r\n        } else {\r\n            setConPasswordError(\"\");\r\n        }\r\n        if (!role) {\r\n            setRoleError(\"Role Required\");\r\n            error = true;\r\n        } else {\r\n            setRoleError(\"\");\r\n        }\r\n\r\n        if (error == false) {\r\n            createUser();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">{pageName}</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-transparent\">\r\n                                        <div className={\"row\"}>&nbsp;</div>\r\n                                    </div>\r\n\r\n                                    <form\r\n                                        method=\"POST\" onSubmit={handleSubmit}\r\n                                        encType={`multipart/form-data`}>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">First Name <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"firstname\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"firstname\"\r\n                                                        placeholder=\"Enter first name\"\r\n                                                        value={fname}\r\n                                                        onChange={(e) => setFName(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{fnameError}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Last Name <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"lastname\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"lastname\"\r\n                                                        placeholder=\"Enter last name\"\r\n                                                        value={lname}\r\n                                                        onChange={(e) => setLName(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{lnameError}</p>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label htmlFor=\"floatingInput\">Phone Number <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"phone\"\r\n                                                        type=\"number\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"phone\"\r\n                                                        placeholder=\"Enter phone number\"\r\n                                                        value={phone}\r\n                                                        onChange={(e) => setPhone(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{phoneError}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label htmlFor=\"floatingInput\">Email <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"email\"\r\n                                                        type=\"email\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"email\"\r\n                                                        placeholder=\"Enter email\"\r\n                                                        value={email}\r\n                                                        onChange={(e) => setEmail(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{emailError}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label htmlFor=\"floatingInput\">Password <span className=\"text-danger\">*</span></label>\r\n\r\n                                                    <input\r\n                                                        name=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"password\"\r\n                                                        placeholder=\"Enter password\"\r\n                                                        value={password}\r\n                                                        onChange={(e) => setPassword(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{passwordError}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label htmlFor=\"floatingInput\"> Confirm Password <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"con-password\"\r\n                                                        type=\"password\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"con-password\"\r\n                                                        placeholder=\"Enter confirm password\"\r\n                                                        value={conpassword}\r\n                                                        onChange={(e) => setConPassword(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{conpasswordError}</p>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"mb-3\">\r\n                                                    <br />\r\n                                                    <label htmlFor=\"floatingInput\">Address<span className=\"text-danger\">*</span></label>\r\n\r\n                                                    <textarea\r\n                                                        name=\"address\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"address\"\r\n                                                        placeholder=\"Enter address\"\r\n                                                        value={address}\r\n                                                        onChange={(e) => setAddress(e.target.value)}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{adressError}</p>\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label>Role<span className=\"text-danger\">*</span></label>\r\n                                                    {(() => {\r\n                                                        if (role.length > 0) {\r\n                                                            return (\r\n                                                                <div>\r\n                                                                    < select\r\n                                                                        id=\"role\"\r\n                                                                        className=\"form-select\"\r\n                                                                        name=\"role\"\r\n                                                                        onChange={(e) => setRole(e.target.value)}>\r\n                                                                        {allrole.map((roles, index) => (\r\n                                                                            <option key={index} value={roles.id}>{roles.name}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n                                                                </div>\r\n\r\n                                                            )\r\n                                                        } else {\r\n                                                            return (\r\n                                                                <option>No Role</option>\r\n                                                            )\r\n                                                        }\r\n                                                    })()}\r\n\r\n\r\n                                                    <p style={{ color: 'red' }}>{roleError}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label>Status<span className=\"text-danger\">*</span></label>\r\n\r\n                                                    <select\r\n                                                        id=\"status\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                        value={status}\r\n                                                        onChange={(e) => setStatus(e.target.value)}>\r\n                                                        <option value={1}>Active</option>\r\n                                                        <option value={0}>Inactive</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <label>Farm List</label>\r\n                                                    {(() => {\r\n                                                        if (allFarm.length > 0) {\r\n                                                            return (\r\n                                                                <div>\r\n                                                                    < select\r\n                                                                        id=\"farm\"\r\n                                                                        className=\"form-select\"\r\n                                                                        name=\"farm\"\r\n                                                                        onChange={(e) => setFarm(e.target.value)}>\r\n                                                                        {allFarm.map((farms, index) => (\r\n                                                                            <option key={index} value={farms.id}>{farms.name}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n                                                                </div>\r\n\r\n                                                            )\r\n                                                        } else {\r\n                                                            return (\r\n                                                                <option>No Farm</option>\r\n                                                            )\r\n                                                        }\r\n                                                    })()}\r\n\r\n\r\n                                                    <p style={{ color: 'red' }}>{roleError}</p>\r\n                                                </div>\r\n\r\n                                                {/* <div className=\"col-md-6\">\r\n                                                    <label>Status<span className=\"text-danger\">*</span></label>\r\n\r\n                                                    <select\r\n                                                        id=\"input4\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                    >\r\n                                                        <option value={1}>Active</option>\r\n                                                        <option value={0}>Inactive</option>\r\n                                                    </select>\r\n\r\n                                                </div> */}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-footer clearfix\">\r\n                                            <button type=\"submit\" className=\"btn btn-sm btn-app float-end\">\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PersonCreate;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}