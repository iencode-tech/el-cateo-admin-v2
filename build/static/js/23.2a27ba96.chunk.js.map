{"version":3,"sources":["components/common/inputLabel/InputLabel.js","utils/timeHelper.js","utils/validationHelper.js","components/common/select/Select.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","components/pageSpecific/purchases/form/Form.js","pages/purchases/edit/Edit.js","components/common/breadcrumb/Breadcrumb.js"],"names":["InputLabel","props","htmlFor","inputId","className","labelText","isRequired","defaultProps","utcToLocalTime","dateTimeString","format","moment","validatorRule","value","validationKeyword","validation","status","message","test","validator","isEmpty","ignore_whitespace","isFloat","isEmail","isAlpha","ignore","isAlphanumeric","isNumeric","valData","split","equals","validate","inputvalue","validationRules","validationResult","forEach","validationRule","runningValidation","trim","SelectDynamic","useState","selectValue","setSelectValue","_validate","validationData","validations","_handleFormValidation","name","useEffect","hideLabel","id","placeholder","classNamePrefix","styles","control","WebkitAlignItems","WebkitBoxAlign","msFlexAlign","alignItems","backgroundColor","borderColor","formValidationData","borderRadius","borderStyle","borderWidth","cursor","display","WebkitBoxFlexWrap","WebkitFlexWrap","msFlexWrap","flexWrap","WebkitBoxPack","WebkitJustifyContent","justifyContent","minHeight","outline","position","WebkitTransition","transition","boxiSizing","defaultValue","isLoading","isDisabled","disabled","isSearchable","isMulti","isMultiple","options","onInputChange","inputValue","onChange","option","element","Array","isArray","length","_","chain","map","o","currentTarget","onBlur","e","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_typeof","obj","Symbol","iterator","constructor","PurchaseForm","formData","rawMaterials","_fetchAllRawMaterials","_handleOnChange","type","purchaseDate","rawMaterial","label","unitValue","measurementUnit","unitsPurchased","purchasePrice","dueDate","lot","readOnly","supplier","presentation","quantityAvailable","PurchaseEdit","params","useParams","store","useSelector","selectPurchase","dispatch","useDispatch","pageName","keyword","fetchAllRawMaterials","rawMaterialsFormData","document","title","process","initFormData","readData","breadCrumbs","link","onSubmit","preventDefault","updateData","customPath","keyName","handleFormDataChange","formValidation","handleFormValidation","keys","loading","role","Breadcrumb","index","activeLink","to"],"mappings":"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","file":"static/js/23.2a27ba96.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./InputLabel.scss\";\n\nfunction InputLabel(props) {\n  return (\n    <label htmlFor={props.inputId} className={props.className}>\n      {props.labelText}{\" \"}\n      {props.isRequired && <span className=\"text-danger\">*</span>}\n    </label>\n  );\n}\n\nInputLabel.propTypes = {\n  inputId: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool.isRequired\n};\n\nInputLabel.defaultProps = {\n  className: \"form-label\",\n  isRequired: false,\n  labelText: \"\",\n};\n\nexport default InputLabel;\n","import moment from \"moment\";\n\nexport const utcToLocalTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\n};\n\nexport const localToUtcTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\n};\n","import validator from \"validator\";\r\n\r\nconst validatorRule = (value, validationKeyword) => {\r\n  let validation = { status: true, message: \"\" };\r\n  switch (true) {\r\n    case /required/i.test(validationKeyword):\r\n      validation.status = !validator.isEmpty(value, {\r\n        ignore_whitespace: true,\r\n      });\r\n      validation.message =\r\n        validation.status === false ? \"The value is required!\" : \"\";\r\n      break;\r\n    case /float/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isFloat(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be a float!\" : \"\";\r\n      }\r\n      break;\r\n    case /email/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isEmail(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be an Email!\" : \"\";\r\n      }\r\n      break;\r\n    case /alpha/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlpha(value, \"en-US\", { ignore: \" \" });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Alphabetic!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /alphanumeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlphanumeric(value, \"en-US\", {\r\n          ignore: \" \",\r\n        });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be AlphaNumeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /numeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isNumeric(value);\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Numeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /equals:*/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        const valData = validationKeyword.split(\":\");\r\n        validation.status = validator.equals(value, valData[2]);\r\n        validation.message =\r\n          validation.status === false\r\n            ? `The value needs to be same as ${valData[1]}!`\r\n            : \"\";\r\n      }\r\n      break;\r\n    default:\r\n      validation.status = true;\r\n      validation.message = \"\";\r\n      break;\r\n  }\r\n  return validation;\r\n};\r\n\r\nexport const validate = (inputvalue, validationRules = []) => {\r\n  const validationResult = {\r\n    status: true,\r\n    message: \"\",\r\n  };\r\n  validationRules.forEach((validationRule) => {\r\n    const runningValidation = validatorRule(inputvalue, validationRule);\r\n    validationResult.status =\r\n      validationResult.status && runningValidation.status;\r\n    validationResult.message += \" \" + runningValidation.message;\r\n    validationResult.message = validationResult.message.trim();\r\n  });\r\n  return validationResult;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport \"./Select.scss\";\n\nimport InputLabel from \"../inputLabel/InputLabel\";\nimport { validate } from \"../../../utils/validationHelper\";\n\nfunction SelectDynamic(props) {\n  const [selectValue, setSelectValue] = useState(null);\n\n  const _validate = (value) => {\n    const validationData = validate(value || \"\", props.validations);\n    if (validationData.status === false) {\n      props._handleFormValidation(props.name, validationData);\n    } else {\n      props._handleFormValidation(props.name, null);\n    }\n  };\n\n  // Remove if Validation causes issue\n  useEffect(() => {\n    _validate();\n  }, []);\n\n  useEffect(() => {\n    if (selectValue === null) {\n      setSelectValue(props.value);\n    }\n  }, [props.value]);\n\n  return (\n    <>\n      {!props.hideLabel && (\n        <InputLabel\n          inputId={props.id}\n          labelText={props.placeholder}\n          isRequired={props.isRequired}\n        />\n      )}\n      <Select\n        id={props.id}\n        className={`${props.className || \"\"} basic-single`}\n        classNamePrefix=\"select\"\n        styles={{\n          control: () => ({\n            WebkitAlignItems: \"center\",\n            WebkitBoxAlign: \"center\",\n            msFlexAlign: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"hsl(0, 0%, 100%)\",\n            borderColor:\n              props.formValidationData[props.name] &&\n              props.formValidationData[props.name].status === false\n                ? \"#dc3545\"\n                : \"hsl(0, 0%, 80%)\",\n            borderRadius: \"4px\",\n            borderStyle: \"solid\",\n            borderWidth: \"1px\",\n            cursor: \"default\",\n            display: [\"-webkit-box\", \"-webkit-flex\", \"-ms-flexbox\", \"flex\"],\n            WebkitBoxFlexWrap: \"wrap\",\n            WebkitFlexWrap: \"wrap\",\n            msFlexWrap: \"wrap\",\n            flexWrap: \"wrap\",\n            WebkitBoxPack: \"justify\",\n            WebkitJustifyContent: \"space-between\",\n            justifyContent: \"space-between\",\n            minHeight: \"38px\",\n            outline: \"0 !important\",\n            position: \"relative\",\n            WebkitTransition: \"all 100ms\",\n            transition: \"all 100ms\",\n            boxiSizing: \"border-box\",\n          }),\n        }}\n        defaultValue={props.defaultValue}\n        value={selectValue}\n        isLoading={false}\n        isDisabled={props.disabled ?? false}\n        isSearchable={true}\n        isMulti={props.isMultiple}\n        name={props.name}\n        options={props.options}\n        onInputChange={(inputValue) => {\n          props.onInputChange(inputValue);\n        }}\n        onChange={(option, element) => {\n          let value = \"\";\n          if (Array.isArray(option) && option.length > 0) {\n            value = _.chain(option)\n              .map((o) => o.value)\n              .value();\n          } else {\n            value = option.value;\n          }\n          setSelectValue(option);\n          return props.onChange({\n            currentTarget: { name: element.name, value },\n          });\n        }}\n        onBlur={(e) => _validate(e.currentTarget.value)}\n      />\n      {props.formValidationData[props.name] &&\n        props.formValidationData[props.name].status === false && (\n          <div className=\"invalid-feedback d-block\">\n            {props.formValidationData[props.name].message}\n          </div>\n        )}\n    </>\n  );\n}\n\nSelectDynamic.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  isMultiple: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hideLabel: PropTypes.bool,\n  defaultValue: PropTypes.object,\n  onInputChange: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  validations: PropTypes.array,\n  formValidationData: PropTypes.object,\n  _handleFormValidation: PropTypes.func,\n};\n\nSelectDynamic.defaultProps = {\n  isMultiple: false,\n  isRequired: false,\n  hideLabel: false,\n  validations: [],\n  formValidationData: {},\n  _handleFormValidation: () => {},\n};\n\nexport default SelectDynamic;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import React from \"react\";\nimport SelectDynamic from \"../../../common/select/Select\";\nimport { utcToLocalTime } from \"../../../../utils/timeHelper\";\n\nfunction PurchaseForm({\n  formData,\n  rawMaterials,\n  _fetchAllRawMaterials,\n  _handleOnChange,\n  formValidationData,\n  _handleFormValidation,\n}) {\n  return (\n    <>\n      {formData.id ? <input type=\"hidden\" value={formData.id} /> : \"\"}\n      <div className=\"row\">\n        <div className=\"col-md-6 border-end\">\n          <div className=\"mb-3 offset-md-6\">\n            <label htmlFor=\"input1\" className=\"form-label\">\n              Date of purchase <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input1\"\n              className=\"form-control\"\n              type=\"date\"\n              placeholder=\"Date of purchase\"\n              name=\"purchaseDate\"\n              value={utcToLocalTime(formData.purchaseDate, \"YYYY-MM-DD\")}\n              onChange={_handleOnChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input2\" className=\"form-label\">\n              Raw Material <span className=\"text-danger\">*</span>\n            </label>\n            <SelectDynamic\n              id=\"input2\"\n              value={\n                formData.rawMaterial && formData.rawMaterial.id\n                  ? {\n                      value: formData.rawMaterial.id,\n                      label: formData.rawMaterial.name,\n                    }\n                  : null\n              }\n              name=\"rawMaterialId\"\n              options={rawMaterials.map((rawMaterial) => ({\n                value: rawMaterial.id,\n                label: rawMaterial.name,\n              }))}\n              onInputChange={_fetchAllRawMaterials}\n              onChange={(e) => {\n                _handleOnChange(e);\n                _handleOnChange({\n                  currentTarget: {\n                    name: \"rawMaterial\",\n                    value:\n                      rawMaterials[\n                        rawMaterials\n                          .map(function (e) {\n                            return e.id;\n                          })\n                          .indexOf(e.currentTarget.value)\n                      ],\n                  },\n                });\n              }}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"input3\" className=\"form-label\">\n                  Unit Value <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  id=\"input3\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Unit Value\"\n                  name=\"unitValue\"\n                  value={formData.unitValue}\n                  onChange={_handleOnChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"input4\" className=\"form-label\">\n                  Unit of measurement <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  id=\"input4\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Unit of measurement\"\n                  name=\"measurementUnit\"\n                  value={formData.measurementUnit}\n                  onChange={_handleOnChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"input5\" className=\"form-label\">\n                  Units Purchased <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  id=\"input5\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Units Purchased\"\n                  name=\"unitsPurchased\"\n                  value={formData.unitsPurchased}\n                  onChange={_handleOnChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"input6\" className=\"form-label\">\n                  Purchase price <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  id=\"input6\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Purchase price\"\n                  name=\"purchasePrice\"\n                  value={formData.purchasePrice}\n                  onChange={_handleOnChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input7\" className=\"form-label\">\n              Due date <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input7\"\n              className=\"form-control\"\n              type=\"date\"\n              placeholder=\"Due date\"\n              name=\"dueDate\"\n              value={utcToLocalTime(formData.dueDate, \"YYYY-MM-DD\")}\n              onChange={_handleOnChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input8\" className=\"form-label\">\n              Lot <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input8\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Lot\"\n              name=\"lot\"\n              value={formData.lot}\n              onChange={_handleOnChange}\n            />\n          </div>\n        </div>\n        <div className=\"col-md-6 border-start\">\n          <h5>Standardization</h5>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input9\" className=\"form-label\">\n              Projected Value <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input9\"\n              className=\"form-control\"\n              type=\"text\"\n              value={formData.rawMaterial.unitValue ?? \"\"}\n              readOnly={true}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input10\" className=\"form-label\">\n              Supplier <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input10\"\n              className=\"form-control\"\n              type=\"text\"\n              value={formData.rawMaterial.supplier ?? \"\"}\n              readOnly={true}\n            />\n          </div>\n          <div className=\"pt-3 pb-3 offset-md-2 col-md-8\">\n            <hr />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input11\" className=\"form-label\">\n              Presentation <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input11\"\n              className=\"form-control\"\n              type=\"text\"\n              value={formData.rawMaterial.presentation ?? \"\"}\n              readOnly={true}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input12\" className=\"form-label\">\n              Quantity Available <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              id=\"input12\"\n              className=\"form-control\"\n              type=\"text\"\n              value={formData.rawMaterial.quantityAvailable ?? \"\"}\n              readOnly={true}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PurchaseForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Edit.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport {\n  handleFormDataChange,\n  handleFormValidation,\n  initFormData,\n  readData,\n  selectPurchase,\n  updateData,\n  fetchAllRawMaterials,\n} from \"../../../store/redux/Page/Purchase\";\nimport PurchaseForm from \"../../../components/pageSpecific/purchases/form/Form\";\nimport { useParams } from \"react-router-dom\";\n\nfunction PurchaseEdit() {\n  const params = useParams();\n  const store = useSelector(selectPurchase);\n  const dispatch = useDispatch();\n  const pageName = \"Edit purchase\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Purchases\",\n      link: \"/purchases\",\n    },\n    {\n      name: \"Edit\",\n      link: \"\",\n    },\n  ];\n\n  const _handleOnChange = (e, customPath) => {\n    let keyName = e.currentTarget.name;\n    if (Array.isArray(customPath) && customPath.length > 0)\n      keyName = [...customPath, e.currentTarget.name];\n\n    dispatch(\n      handleFormDataChange({ key: keyName, value: e.currentTarget.value })\n    );\n  };\n\n  const _handleFormValidation = (key, value) => {\n    dispatch(\n      handleFormValidation({\n        key,\n        value,\n      })\n    );\n  };\n\n  const _fetchAllRawMaterials = (keyword = \"\") => {\n    dispatch(fetchAllRawMaterials({ ...store.rawMaterialsFormData, keyword }));\n  };\n\n  const _handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateData({ id: params.id, ...store.formData }));\n  };\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(initFormData());\n    _fetchAllRawMaterials();\n    dispatch(readData({ id: params.id }));\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>&nbsp;</div>\n                  </div>\n\n                  <form name={`${pageName}Create`} onSubmit={_handleFormSubmit}>\n                    <div className=\"card-body\">\n                      <PurchaseForm\n                        formData={store.formData}\n                        rawMaterials={store.rawMaterials}\n                        _fetchAllRawMaterials={_fetchAllRawMaterials}\n                        _handleOnChange={_handleOnChange}\n                        formValidationData={store.formValidation}\n                        _handleFormValidation={_handleFormValidation}\n                      />\n                    </div>\n\n                    <div className=\"card-footer clearfix\">\n                      <button\n                        className=\"btn btn-sm btn-app float-end\"\n                        disabled={\n                          Object.keys(store.formValidation).length > 0 ||\n                          store.loading === true\n                        }\n                      >\n                        {store.loading === true && (\n                          <span\n                            className=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                        )}{\" \"}\n                        Save\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseEdit;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}