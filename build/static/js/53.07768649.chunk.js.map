{"version":3,"sources":["components/pageSpecific/zones/view/View.js","pages/managezonas/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["ZoneView","formData","_handleOnChange","_addNewSoil","_removeSoil","className","htmlFor","id","name","latitude","longitude","statuses","parseInt","status","ZonaView","params","useParams","useState","soils","zona","setInfo","getZonas","a","axios","get","process","headers","localStorage","getItem","then","response","zonasData","data","console","log","catch","error","useEffect","document","title","Breadcrumb","breadCrumbs","link","map","value","index","activeLink","to","defaultProps"],"mappings":"iLA2DeA,MAvDf,YAA4E,IAAxDC,EAAuD,EAAvDA,SAClB,OADyE,EAA7CC,gBAA6C,EAA5BC,YAA4B,EAAfC,YAExD,qCACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,kBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGJ,EAASO,UAId,sBAAKH,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,sBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGJ,EAASQ,cAId,sBAAKJ,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,uBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGJ,EAASS,eAId,sBAAKL,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,oBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGM,IAASC,SAASX,EAASY,cAIhC,qBAAKR,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,MAAd,4B,0BC2CGS,UAnFf,WACI,IAAMC,EAASC,cAEf,EAAwBC,mBAAS,CAC7BR,SAAS,GACTC,UAAU,GACVF,KAAK,GACLU,MAAM,GACNL,OAAO,KALX,mBAAOM,EAAP,KAAaC,EAAb,KAwBIC,EAAQ,uCAAG,sBAAAC,EAAA,sEACLC,IAAMC,IAAN,UAAaC,0BAAb,iBAAmDV,EAAOR,GAA1D,SACF,CAAEmB,QAAS,CAAE,cAAiBC,aAAaC,QAAQH,gBAA0CI,MAAK,SAACC,GAC/F,IAAMC,EAAYD,EAASE,KAAKA,KAChCC,QAAQC,IAAIH,GACZX,EAAQW,MAETI,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EAAMN,aARf,2CAAH,qDAeZ,OAJAO,qBAAU,WACNC,SAASC,MAAT,UAAoBd,kBACpBJ,MACD,IAEC,qBAAKhB,UAAU,0GAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,SA/CX,gBAiDO,qBAAKA,UAAU,WAAf,SACI,cAACmC,EAAA,EAAD,CAAYC,YAxCpB,CAChB,CACIjC,KAAM,YACNkC,KAAM,cAEV,CACIlC,KAAM,QACNkC,KAAM,UAEV,CACIlC,KAAM,OACNkC,KAAM,gBAmCF,yBAASrC,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,qBAAKA,UAAW,MAAhB,oBAGJ,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CAAmBJ,SAAUkB,MAGjC,qBAAKd,UAAU,2C,gCC7EnD,8BAKA,SAASmC,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,YACpB,OACE,qBAAKpC,UAAU,eAAe,aAAW,aAAzC,SACE,oBAAIA,UAAU,aAAd,SACGoC,EAAYE,KAAI,SAACC,EAAOC,GACvB,IAAMC,EAAaF,EAAMF,MAAuB,KAAfE,EAAMF,KACvC,OACE,oBACErC,UAAS,0BAAqByC,EAAa,SAAW,IADxD,SAIGA,EACC,cAAC,IAAD,CAAMC,GAAIH,EAAMF,KAAhB,SAAuBE,EAAMpC,OAE7BoC,EAAMpC,MALHqC,UAwBnBL,EAAWQ,aAAe,CACxBP,YAAa,CACX,CACEjC,KAAM,YACNkC,KAAM,gBAKGF,O","file":"static/js/53.07768649.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { statuses } from \"../../../../utils/appConstants\";\r\n// import SoilView from \"../linked/soils/view/View\";\r\n\r\nfunction ZoneView({ formData, _handleOnChange, _addNewSoil, _removeSoil }) {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input1\" className=\"form-label\">\r\n          Name\r\n        </label>\r\n        <span id=\"input1\" className=\"form-control\">\r\n          {formData.name}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input2\" className=\"form-label\">\r\n          Latitude\r\n        </label>\r\n        <span id=\"input2\" className=\"form-control\">\r\n          {formData.latitude}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input3\" className=\"form-label\">\r\n          Longitude\r\n        </label>\r\n        <span id=\"input3\" className=\"form-control\">\r\n          {formData.longitude}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input4\" className=\"form-label\">\r\n          Status\r\n        </label>\r\n        <span id=\"input4\" className=\"form-control\">\r\n          {statuses[parseInt(formData.status)]}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-transparent\">\r\n            <h4 className=\"m-0\">Soil</h4>\r\n          </div>\r\n          {/* <div className=\"card-body\">\r\n            {formData.soils.map((value, index) => (\r\n              <SoilView key={index} formData={value} />\r\n            ))}\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ZoneView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport ZoneViewComponent from \"../../../components/pageSpecific/zones/view/View\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction ZonaView() {\r\n    const params = useParams();\r\n    const pageName = \"View zona\";\r\n    const [zona, setInfo] = useState({\r\n        latitude:\"\",\r\n        longitude:\"\",\r\n        name:\"\",\r\n        soils:{},\r\n        status:\"\"\r\n    });\r\n\r\n    //Breadcrumbs declared\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Zonas\",\r\n            link: \"/zonas\",\r\n        },\r\n        {\r\n            name: \"View\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n\r\n    let getZonas = async () => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/zone/${params.id}/read`,\r\n            { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n                const zonasData = response.data.data;\r\n                console.log(zonasData)\r\n                setInfo(zonasData);\r\n\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        document.title = `${process.env.REACT_APP_NAME}`;\r\n        getZonas();\r\n    }, []);\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">{pageName}</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-transparent\">\r\n                                        <div className={\"row\"}>&nbsp;</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <ZoneViewComponent formData={zona} />\r\n                                    </div>\r\n\r\n                                    <div className=\"card-footer clearfix\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ZonaView;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}