{"version":3,"sources":["components/common/filePreview/FilePreview.js","components/pageSpecific/rawMaterials/view/View.js","pages/rawMaterials/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["FilePreview","props","useState","fileUrl","setFileUrl","opacity","paginationOpacity","setPaginationOpacity","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","_selectIconBasedOnFileType","fileName","selectIcon","match","faFileImage","faFilePdf","faFileExcel","faFile","className","size","icon","onClick","files","length","map","file","index","forForm","type","e","preventDefault","allFiles","splice","_onChange","currentTarget","name","value","OnDelete","faTimesCircle","id","tabIndex","selectPreviewer","src","alt","onMouseEnter","onMouseLeave","onLoadSuccess","style","disabled","href","target","rel","download","_selectPreviewerBasedOnFileType","pdfjs","GlobalWorkerOptions","workerSrc","version","defaultProps","RawMaterialView","formData","htmlFor","barCode","unitValue","unitMetric","presentation","quantity","quantityAvailable","price","supplier","refPresentation","filePathUrl","rawMaterials","retirementTime","quarantine","minHeight","incompatibleRawMaterialData","listElement","statuses","parseInt","status","params","useParams","store","useSelector","selectRawMaterial","dispatch","useDispatch","pageName","useEffect","document","title","process","initFormData","readData","Breadcrumb","breadCrumbs","link","activeLink","to"],"mappings":"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","file":"static/js/28.a7d4af1b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  faFileExcel,\n  faFilePdf,\n  faFileImage,\n  faFile,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"./FilePreview.scss\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nfunction FilePreview(props) {\n  const [fileUrl, setFileUrl] = useState(\"\");\n\n  const [paginationOpacity, setPaginationOpacity] = useState({ opacity: \"0\" });\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const OnDelete = (e, index) => {\n    e.preventDefault();\n    const allFiles = [...props.files];\n    allFiles.splice(index, 1);\n    props._onChange({\n      currentTarget: { name: \"files\", value: allFiles },\n    });\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  const changePage = (offset) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const _selectIconBasedOnFileType = (fileName) => {\n    let selectIcon;\n    switch (true) {\n      case fileName.match(/\\.(jpeg|jpg|gif|png)$/) != null:\n        selectIcon = faFileImage;\n        break;\n\n      case fileName.match(/\\.(pdf)$/) != null:\n        selectIcon = faFilePdf;\n        break;\n\n      case fileName.match(/\\.(xlsx|xls|csv)$/) != null:\n        selectIcon = faFileExcel;\n        break;\n\n      default:\n        selectIcon = faFile;\n        break;\n    }\n\n    return (\n      <FontAwesomeIcon\n        className=\"img-fluid\"\n        size=\"5x\"\n        icon={selectIcon}\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#filePreviewModal\"\n        onClick={() => setFileUrl(`${props.fileUrl}/${fileName}`)}\n      />\n    );\n  };\n\n  const _selectPreviewerBasedOnFileType = () => {\n    let selectPreviewer;\n    switch (true) {\n      case fileUrl.match(/\\.(jpeg|jpg|gif|png)$/) != null:\n        selectPreviewer = <img src={`${fileUrl}`} alt=\"Uploaded Data\" />;\n        break;\n\n      case fileUrl.match(/\\.(pdf)$/) != null:\n        selectPreviewer = (\n          <div\n            onMouseEnter={() => setPaginationOpacity({ opacity: \"100\" })}\n            onMouseLeave={() => setPaginationOpacity({ opacity: \"0\" })}\n          >\n            <Document file={`${fileUrl}`} onLoadSuccess={onDocumentLoadSuccess}>\n              <Page pageNumber={pageNumber} />\n            </Document>\n            <nav\n              className=\"shadow pdf-pagination-nav\"\n              aria-label=\"Pdf page navigation\"\n              style={paginationOpacity}\n            >\n              <ul className=\"pagination m-0\">\n                <li\n                  className={`page-item ${pageNumber <= 1 ? \"disabled\" : \"\"}`}\n                >\n                  <button\n                    className=\"page-link\"\n                    type=\"button\"\n                    disabled={pageNumber <= 1}\n                    onClick={previousPage}\n                  >\n                    Previous\n                  </button>\n                </li>\n                <li className=\"page-item\">\n                  <p className=\"page-link m-0\">\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of{\" \"}\n                    {numPages || \"--\"}\n                  </p>\n                </li>\n                <li\n                  className={`page-item ${\n                    pageNumber >= numPages ? \"disabled\" : \"\"\n                  }`}\n                >\n                  <button\n                    className=\"page-link\"\n                    type=\"button\"\n                    disabled={pageNumber >= numPages}\n                    onClick={nextPage}\n                  >\n                    Next\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        );\n        break;\n\n      case fileUrl.match(/\\.(xlsx|xls|csv)$/) != null:\n        selectPreviewer = (\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\n            Download\n          </a>\n        );\n        break;\n\n      default:\n        selectPreviewer = (\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\n            Download\n          </a>\n        );\n        break;\n    }\n\n    return selectPreviewer;\n  };\n\n  return (\n    <>\n      {props.files && props.files.length > 0 && (\n        <div className=\"row mb-3\">\n          <div className=\"col-12\">\n            <div className=\"file-preview\">\n              <div className=\"row pt-2\">\n                {props.files.map((file, index) => (\n                  <div className=\"col-1 position-relative\" key={index}>\n                    {props.forForm && (\n                      <>\n                        <button\n                          className=\"btn btn-danger position-absolute top-0 start-100 translate-middle badge rounded-circle p-0 border border-danger\"\n                          type=\"button\"\n                          onClick={(e) => OnDelete(e, index)}\n                        >\n                          <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                        <input\n                          key={index}\n                          type=\"hidden\"\n                          name=\"existingFiles\"\n                          value={file}\n                        />\n                      </>\n                    )}\n                    {_selectIconBasedOnFileType(file)}\n                  </div>\n                ))}\n\n                {/*Modal*/}\n                <div\n                  className=\"modal fade\"\n                  id=\"filePreviewModal\"\n                  data-bs-backdrop=\"static\"\n                  data-bs-keyboard=\"false\"\n                  tabIndex=\"-1\"\n                  aria-labelledby=\"filePreviewModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"modal-dialog modal-dialog-centered modal-xl\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"filePreviewModalLabel\">\n                          File Preview\n                        </h5>\n                        <button\n                          type=\"button\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                          onClick={() => setFileUrl(\"\")}\n                        ></button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <div className=\"container-fluid\">\n                          <div className=\"row d-flex\">\n                            <div className=\"col-12 d-flex justify-content-center\">\n                              {_selectPreviewerBasedOnFileType(fileUrl)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          onClick={() => setFileUrl(\"\")}\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nFilePreview.propTypes = {\n  fileUrl: PropTypes.string.isRequired,\n  files: PropTypes.array.isRequired,\n  forForm: PropTypes.bool.isRequired,\n  _onChange: PropTypes.func,\n};\n\nFilePreview.defaultProps = {\n  fileUrl: \"\",\n  files: [],\n  forForm: false,\n};\n\nexport default FilePreview;\n","import React from \"react\";\nimport {\n  statuses,\n  unitMetric,\n  filePathUrl,\n} from \"../../../../utils/appConstants\";\nimport FilePreview from \"../../../common/filePreview/FilePreview\";\n\nfunction RawMaterialView({ formData }) {\n  return (\n    <>\n      <div className={`row`}>\n        <div className={`col-sm-12 col-md-6 border-end`}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input1\" className=\"form-label\">\n              Barcode\n            </label>\n            <span id=\"input1\" className=\"form-control\">\n              {formData.barCode}\n            </span>\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"input2\" className=\"form-label\">\n              Name\n            </label>\n            <span id=\"input2\" className=\"form-control\">\n              {formData.name}\n            </span>\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"input3\" className=\"form-label\">\n              Unit Value\n            </label>\n            <span id=\"input3\" className=\"form-control\">\n              {formData.unitValue}\n            </span>\n          </div>\n\n          <div className={`row`}>\n            <div className={`col-sm-12 col-md-6`}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"input4\" className=\"form-label\">\n                  Unit Metric\n                </label>\n                <span id=\"input4\" className=\"form-control\">\n                  {unitMetric[formData.unitMetric]}\n                </span>\n              </div>\n            </div>\n            <div className={`col-sm-12 col-md-6`}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"input5\" className=\"form-label\">\n                  Presentation\n                </label>\n                <span id=\"input5\" className=\"form-control\">\n                  {formData.presentation}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className={`row`}>\n            <div className={`col-sm-12 col-md-6`}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"input6\" className=\"form-label\">\n                  Quantity\n                </label>\n                <span id=\"input6\" className=\"form-control\">\n                  {formData.quantity}\n                </span>\n              </div>\n            </div>\n            <div className={`col-sm-12 col-md-6`}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"input7\" className=\"form-label\">\n                  Available Quantity\n                </label>\n                <span id=\"input7\" className=\"form-control\">\n                  {formData.quantityAvailable}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={`col-sm-12 col-md-6`}>\n          <h5 className={`text-center`}>Data Reference</h5>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input8\" className=\"form-label\">\n              Projected Price\n            </label>\n            <span id=\"input8\" className=\"form-control\">\n              {formData.price}\n            </span>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input9\" className=\"form-label\">\n              Supplier\n            </label>\n            <span id=\"input9\" className=\"form-control\">\n              {formData.supplier}\n            </span>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input10\" className=\"form-label\">\n              Presentation <span className=\"text-danger\">*</span>\n            </label>\n            <span id=\"input10\" className=\"form-control\">\n              {formData.refPresentation}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <FilePreview\n        id=\"input11\"\n        files={formData.files}\n        fileUrl={filePathUrl.rawMaterials}\n      />\n\n      <hr />\n\n      <h5 className={`text-center`}>Care</h5>\n      <div className={`row`}>\n        <div className={`col-sm-12 col-md-6`}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input12\" className=\"form-label\">\n              Retirement Time\n            </label>\n            <span id=\"input12\" className=\"form-control\">\n              {formData.retirementTime}\n            </span>\n          </div>\n        </div>\n        <div className={`col-sm-12 col-md-6`}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"input4\" className=\"form-label\">\n              Quarantine Before Harvest\n            </label>\n            <span id=\"input4\" className=\"form-control\">\n              {formData.quarantine}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div className={`card mb-3`}>\n        <div className={`card-header`}>\n          <h5 className={`text-center`}>Incompatible With Raw Material</h5>\n        </div>\n        <div className={`card-body`}>\n          <div className={`row`} style={{ minHeight: 300 }}>\n            <div className={`col-12`}>\n              <ul className={`list-group`}>\n                {formData.incompatibleRawMaterialData.map(\n                  (listElement, index) => (\n                    <li\n                      key={index}\n                      className={`list-group-item list-group-item-action`}\n                    >\n                      {listElement.name}\n                    </li>\n                  )\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"input6\" className=\"form-label\">\n          Status\n        </label>\n        <span id=\"input6\" className=\"form-control\">\n          {statuses[parseInt(formData.status)]}\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default RawMaterialView;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./View.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport {\n  initFormData,\n  readData,\n  selectRawMaterial,\n} from \"../../../store/redux/Page/RawMaterial\";\nimport RawMaterialViewComponent from \"../../../components/pageSpecific/rawMaterials/view/View\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RawMaterialView() {\n  const params = useParams();\n  const store = useSelector(selectRawMaterial);\n  const dispatch = useDispatch();\n  const pageName = \"View raw material\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Raw Materials\",\n      link: \"/raw-materials\",\n    },\n    {\n      name: \"View\",\n      link: \"\",\n    },\n  ];\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(initFormData());\n    dispatch(readData({ id: params.id }));\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>&nbsp;</div>\n                  </div>\n                  <div className=\"card-body\">\n                    <RawMaterialViewComponent formData={store.formData} />\n                  </div>\n\n                  <div className=\"card-footer clearfix\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default RawMaterialView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}