{"version":3,"sources":["components/common/inputLabel/InputLabel.js","utils/validationHelper.js","components/common/select/Select.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","components/pageSpecific/purchases/form/Form.js","pages/purchases/edit/Edit.js","components/common/breadcrumb/Breadcrumb.js","utils/timeHelper.js"],"names":["InputLabel","props","htmlFor","inputId","className","labelText","isRequired","defaultProps","validatorRule","value","validationKeyword","validation","status","message","test","validator","isEmpty","ignore_whitespace","isFloat","isEmail","isAlpha","ignore","isAlphanumeric","isNumeric","valData","split","equals","validate","inputvalue","validationRules","validationResult","forEach","validationRule","runningValidation","trim","SelectDynamic","useState","selectValue","setSelectValue","_validate","validationData","validations","_handleFormValidation","name","useEffect","hideLabel","id","placeholder","classNamePrefix","styles","control","WebkitAlignItems","WebkitBoxAlign","msFlexAlign","alignItems","backgroundColor","borderColor","formValidationData","borderRadius","borderStyle","borderWidth","cursor","display","WebkitBoxFlexWrap","WebkitFlexWrap","msFlexWrap","flexWrap","WebkitBoxPack","WebkitJustifyContent","justifyContent","minHeight","outline","position","WebkitTransition","transition","boxiSizing","defaultValue","isLoading","isDisabled","disabled","isSearchable","isMulti","isMultiple","options","onInputChange","inputValue","onChange","option","element","Array","isArray","length","_","chain","map","o","currentTarget","onBlur","e","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_typeof","obj","Symbol","iterator","constructor","PurchaseForm","formData","rawMaterials","_fetchAllRawMaterials","_handleOnChange","type","utcToLocalTime","purchaseDate","rawMaterial","label","unitValue","measurementUnit","unitsPurchased","purchasePrice","dueDate","lot","readOnly","supplier","presentation","quantityAvailable","PurchaseEdit","params","useParams","store","useSelector","selectPurchase","dispatch","useDispatch","pageName","keyword","fetchAllRawMaterials","rawMaterialsFormData","document","title","process","initFormData","readData","breadCrumbs","link","onSubmit","preventDefault","updateData","customPath","keyName","handleFormDataChange","formValidation","handleFormValidation","keys","loading","role","Breadcrumb","index","activeLink","to","dateTimeString","format","moment"],"mappings":"uGAAA,uBAIA,SAASA,EAAWC,GAClB,OACE,wBAAOC,QAASD,EAAME,QAASC,UAAWH,EAAMG,UAAhD,UACGH,EAAMI,UAAW,IACjBJ,EAAMK,YAAc,sBAAMF,UAAU,cAAhB,kBAY3BJ,EAAWO,aAAe,CACxBH,UAAW,aACXE,YAAY,EACZD,UAAW,IAGEL,O,iCC1Bf,wDAEMQ,EAAgB,SAACC,EAAOC,GAC5B,IAAIC,EAAa,CAAEC,QAAQ,EAAMC,QAAS,IAC1C,QAAQ,GACN,IAAK,YAAYC,KAAKJ,GACpBC,EAAWC,QAAUG,IAAUC,QAAQP,EAAO,CAC5CQ,mBAAmB,IAErBN,EAAWE,SACa,IAAtBF,EAAWC,OAAmB,yBAA2B,GAC3D,MACF,IAAK,SAASE,KAAKJ,GACH,KAAVD,IACFE,EAAWC,OAASG,IAAUG,QAAQT,GACtCE,EAAWE,SACa,IAAtBF,EAAWC,OAAmB,iCAAmC,IAErE,MACF,IAAK,SAASE,KAAKJ,GACH,KAAVD,IACFE,EAAWC,OAASG,IAAUI,QAAQV,GACtCE,EAAWE,SACa,IAAtBF,EAAWC,OAAmB,kCAAoC,IAEtE,MACF,IAAK,SAASE,KAAKJ,GACH,KAAVD,IACFE,EAAWC,OAASG,IAAUK,QAAQX,EAAO,QAAS,CAAEY,OAAQ,MAChEV,EAAWE,SACa,IAAtBF,EAAWC,OACP,yCACA,IAER,MACF,IAAK,gBAAgBE,KAAKJ,GACV,KAAVD,IACFE,EAAWC,OAASG,IAAUO,eAAeb,EAAO,QAAS,CAC3DY,OAAQ,MAEVV,EAAWE,SACa,IAAtBF,EAAWC,OACP,sCACA,IAER,MACF,IAAK,WAAWE,KAAKJ,GACL,KAAVD,IACFE,EAAWC,OAASG,IAAUQ,UAAUd,GACxCE,EAAWE,SACa,IAAtBF,EAAWC,OACP,sCACA,IAER,MACF,IAAK,YAAYE,KAAKJ,GACpB,GAAc,KAAVD,EAAc,CAChB,IAAMe,EAAUd,EAAkBe,MAAM,KACxCd,EAAWC,OAASG,IAAUW,OAAOjB,EAAOe,EAAQ,IACpDb,EAAWE,SACa,IAAtBF,EAAWC,OAAX,wCACqCY,EAAQ,GAD7C,KAEI,GAER,MACF,QACEb,EAAWC,QAAS,EACpBD,EAAWE,QAAU,GAGzB,OAAOF,GAGIgB,EAAW,SAACC,GAAsC,IAA1BC,EAAyB,uDAAP,GAC/CC,EAAmB,CACvBlB,QAAQ,EACRC,QAAS,IASX,OAPAgB,EAAgBE,SAAQ,SAACC,GACvB,IAAMC,EAAoBzB,EAAcoB,EAAYI,GACpDF,EAAiBlB,OACfkB,EAAiBlB,QAAUqB,EAAkBrB,OAC/CkB,EAAiBjB,SAAW,IAAMoB,EAAkBpB,QACpDiB,EAAiBjB,QAAUiB,EAAiBjB,QAAQqB,UAE/CJ,I,sIC5ET,SAASK,EAAclC,GAAQ,IAAD,EAC5B,EAAsCmC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,SAAC9B,GACjB,IAAM+B,EAAiBb,YAASlB,GAAS,GAAIR,EAAMwC,cACrB,IAA1BD,EAAe5B,OACjBX,EAAMyC,sBAAsBzC,EAAM0C,KAAMH,GAExCvC,EAAMyC,sBAAsBzC,EAAM0C,KAAM,OAe5C,OAVAC,qBAAU,WACRL,OAGFK,qBAAU,WACY,OAAhBP,GACFC,EAAerC,EAAMQ,SAEtB,CAACR,EAAMQ,MAAM4B,IAGd,sCACIpC,EAAM4C,WACN,cAAC,IAAD,CACE1C,QAASF,EAAM6C,GACfzC,UAAWJ,EAAM8C,YACjBzC,WAAYL,EAAMK,aAGtB,cAAC,IAAD,CACEwC,GAAI7C,EAAM6C,GACV1C,UAAS,UAAKH,EAAMG,WAAa,GAAxB,iBACT4C,gBAAgB,SAChBC,OAAQ,CACNC,QAAS,iBAAO,CACdC,iBAAkB,SAClBC,eAAgB,SAChBC,YAAa,SACbC,WAAY,SACZC,gBAAiB,mBACjBC,YACEvD,EAAMwD,mBAAmBxD,EAAM0C,QACiB,IAAhD1C,EAAMwD,mBAAmBxD,EAAM0C,MAAM/B,OACjC,UACA,kBACN8C,aAAc,MACdC,YAAa,QACbC,YAAa,MACbC,OAAQ,UACRC,QAAS,CAAC,cAAe,eAAgB,cAAe,QACxDC,kBAAmB,OACnBC,eAAgB,OAChBC,WAAY,OACZC,SAAU,OACVC,cAAe,UACfC,qBAAsB,gBACtBC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,eACTC,SAAU,WACVC,iBAAkB,YAClBC,WAAY,YACZC,WAAY,gBAGhBC,aAAc3E,EAAM2E,aACpBnE,MAAO4B,EACPwC,WAAW,EACXC,WAAU,UAAE7E,EAAM8E,gBAAR,SACVC,cAAc,EACdC,QAAShF,EAAMiF,WACfvC,KAAM1C,EAAM0C,KACZwC,QAASlF,EAAMkF,QACfC,cAAe,SAACC,GACdpF,EAAMmF,cAAcC,IAEtBC,SAAU,SAACC,EAAQC,GACjB,IAAI/E,EAAQ,GASZ,OAPEA,EADEgF,MAAMC,QAAQH,IAAWA,EAAOI,OAAS,EACnCC,IAAEC,MAAMN,GACbO,KAAI,SAACC,GAAD,OAAOA,EAAEtF,SACbA,QAEK8E,EAAO9E,MAEjB6B,EAAeiD,GACRtF,EAAMqF,SAAS,CACpBU,cAAe,CAAErD,KAAM6C,EAAQ7C,KAAMlC,YAGzCwF,OAAQ,SAACC,GAAD,OAAO3D,EAAU2D,EAAEF,cAAcvF,UAE1CR,EAAMwD,mBAAmBxD,EAAM0C,QACkB,IAAhD1C,EAAMwD,mBAAmBxD,EAAM0C,MAAM/B,QACnC,qBAAKR,UAAU,2BAAf,SACGH,EAAMwD,mBAAmBxD,EAAM0C,MAAM9B,aAyBlDsB,EAAc5B,aAAe,CAC3B2E,YAAY,EACZ5E,YAAY,EACZuC,WAAW,EACXJ,YAAa,GACbgB,mBAAoB,GACpBf,sBAAuB,cAGVP,O,uDC7If,8CACe,SAASgE,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,YAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBhB,OAAQY,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASO,QAAQN,IAAQ,GACxBG,OAAOI,UAAUC,qBAAqBC,KAAKX,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,I,iCCjBM,SAASQ,EAAQC,GAG9B,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOL,UAAY,gBAAkBI,GACvHD,EAAQC,GAPb,mC,iCCAA,iCAiOeI,IA7Nf,YAOI,IAAD,QANDC,EAMC,EANDA,SACAC,EAKC,EALDA,aACAC,EAIC,EAJDA,sBACAC,EAGC,EAHDA,gBAIA,OADC,EAFDhE,mBAEC,EADDf,sBAGE,qCACG4E,EAASxE,GAAK,uBAAO4E,KAAK,SAASjH,MAAO6G,EAASxE,KAAS,GAC7D,sBAAK1C,UAAU,MAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,8BACmB,sBAAMA,UAAU,cAAhB,kBAEnB,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,mBACZJ,KAAK,eACLlC,MAAOkH,YAAeL,EAASM,aAAc,cAC7CtC,SAAUmC,OAGd,sBAAKrH,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,0BACe,sBAAMA,UAAU,cAAhB,kBAEf,cAAC,IAAD,CACE0C,GAAG,SACHrC,MACE6G,EAASO,aAAeP,EAASO,YAAY/E,GACzC,CACErC,MAAO6G,EAASO,YAAY/E,GAC5BgF,MAAOR,EAASO,YAAYlF,MAE9B,KAENA,KAAK,gBACLwC,QAASoC,EAAazB,KAAI,SAAC+B,GAAD,MAAkB,CAC1CpH,MAAOoH,EAAY/E,GACnBgF,MAAOD,EAAYlF,SAErByC,cAAeoC,EACflC,SAAU,SAACY,GACTuB,EAAgBvB,GAChBuB,EAAgB,CACdzB,cAAe,CACbrD,KAAM,cACNlC,MACE8G,EACEA,EACGzB,KAAI,SAAUI,GACb,OAAOA,EAAEpD,MAEV8D,QAAQV,EAAEF,cAAcvF,iBAOzC,sBAAKL,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,wBACa,sBAAMA,UAAU,cAAhB,kBAEb,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,aACZJ,KAAK,YACLlC,MAAO6G,EAASS,UAChBzC,SAAUmC,SAIhB,qBAAKrH,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,iCACsB,sBAAMA,UAAU,cAAhB,kBAEtB,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,sBACZJ,KAAK,kBACLlC,MAAO6G,EAASU,gBAChB1C,SAAUmC,YAKlB,sBAAKrH,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,6BACkB,sBAAMA,UAAU,cAAhB,kBAElB,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,kBACZJ,KAAK,iBACLlC,MAAO6G,EAASW,eAChB3C,SAAUmC,SAIhB,qBAAKrH,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,4BACiB,sBAAMA,UAAU,cAAhB,kBAEjB,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,iBACZJ,KAAK,gBACLlC,MAAO6G,EAASY,cAChB5C,SAAUmC,YAKlB,sBAAKrH,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,sBACW,sBAAMA,UAAU,cAAhB,kBAEX,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,WACZJ,KAAK,UACLlC,MAAOkH,YAAeL,EAASa,QAAS,cACxC7C,SAAUmC,OAGd,sBAAKrH,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,iBACM,sBAAMA,UAAU,cAAhB,kBAEN,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACL3E,YAAY,MACZJ,KAAK,MACLlC,MAAO6G,EAASc,IAChB9C,SAAUmC,UAIhB,sBAAKrH,UAAU,wBAAf,UACE,iDACA,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,SAASE,UAAU,aAAlC,6BACkB,sBAAMA,UAAU,cAAhB,kBAElB,uBACE0C,GAAG,SACH1C,UAAU,eACVsH,KAAK,OACLjH,MAAK,UAAE6G,EAASO,YAAYE,iBAAvB,QAAoC,GACzCM,UAAU,OAGd,sBAAKjI,UAAU,OAAf,UACE,wBAAOF,QAAQ,UAAUE,UAAU,aAAnC,sBACW,sBAAMA,UAAU,cAAhB,kBAEX,uBACE0C,GAAG,UACH1C,UAAU,eACVsH,KAAK,OACLjH,MAAK,UAAE6G,EAASO,YAAYS,gBAAvB,QAAmC,GACxCD,UAAU,OAGd,qBAAKjI,UAAU,iCAAf,SACE,yBAEF,sBAAKA,UAAU,OAAf,UACE,wBAAOF,QAAQ,UAAUE,UAAU,aAAnC,0BACe,sBAAMA,UAAU,cAAhB,kBAEf,uBACE0C,GAAG,UACH1C,UAAU,eACVsH,KAAK,OACLjH,MAAK,UAAE6G,EAASO,YAAYU,oBAAvB,QAAuC,GAC5CF,UAAU,OAGd,sBAAKjI,UAAU,OAAf,UACE,wBAAOF,QAAQ,UAAUE,UAAU,aAAnC,gCACqB,sBAAMA,UAAU,cAAhB,kBAErB,uBACE0C,GAAG,UACH1C,UAAU,eACVsH,KAAK,OACLjH,MAAK,UAAE6G,EAASO,YAAYW,yBAAvB,QAA4C,GACjDH,UAAU,kB,iJC/ETI,UAzHf,WACE,IAAMC,EAASC,cACTC,EAAQC,YAAYC,KACpBC,EAAWC,cACXC,EAAW,gBAmCXzB,EAAwB,WAAmB,IAAlB0B,EAAiB,uDAAP,GACvCH,EAASI,YAAqB,2BAAKP,EAAMQ,sBAAZ,IAAkCF,eAejE,OAPAtG,qBAAU,WACRyG,SAASC,MAAT,UAAoBC,iBAApB,cAAoDN,GACpDF,EAASS,eACThC,IACAuB,EAASU,YAAS,CAAE3G,GAAI4F,EAAO5F,QAC9B,IAGD,qBAAK1C,UAAU,0GAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,MAAd,SAAqB6I,MAEvB,qBAAK7I,UAAU,WAAf,SACE,cAAC,IAAD,CAAYsJ,YA5DN,CAClB,CACE/G,KAAM,YACNgH,KAAM,cAER,CACEhH,KAAM,YACNgH,KAAM,cAER,CACEhH,KAAM,OACNgH,KAAM,gBAuDJ,yBAASvJ,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAW,MAAhB,oBAGF,uBAAMuC,KAAI,UAAKsG,EAAL,UAAuBW,SArCvB,SAAC1D,GACzBA,EAAE2D,iBACFd,EAASe,YAAW,aAAEhH,GAAI4F,EAAO5F,IAAO8F,EAAMtB,aAmChC,UACE,qBAAKlH,UAAU,YAAf,SACE,cAAC,IAAD,CACEkH,SAAUsB,EAAMtB,SAChBC,aAAcqB,EAAMrB,aACpBC,sBAAuBA,EACvBC,gBAlEE,SAACvB,EAAG6D,GAC1B,IAAIC,EAAU9D,EAAEF,cAAcrD,KAC1B8C,MAAMC,QAAQqE,IAAeA,EAAWpE,OAAS,IACnDqE,EAAO,sBAAOD,GAAP,CAAmB7D,EAAEF,cAAcrD,QAE5CoG,EACEkB,YAAqB,CAAE3D,IAAK0D,EAASvJ,MAAOyF,EAAEF,cAAcvF,UA6D1CgD,mBAAoBmF,EAAMsB,eAC1BxH,sBA1DQ,SAAC4D,EAAK7F,GAClCsI,EACEoB,YAAqB,CACnB7D,MACA7F,gBA0DY,qBAAKL,UAAU,uBAAf,SACE,yBACEA,UAAU,+BACV2E,SACE0B,OAAO2D,KAAKxB,EAAMsB,gBAAgBvE,OAAS,IACzB,IAAlBiD,EAAMyB,QAJV,WAOqB,IAAlBzB,EAAMyB,SACL,sBACEjK,UAAU,mCACVkK,KAAK,SACL,cAAY,SAEb,IAbL,iC,gCC7GtB,8BAKA,SAASC,EAAT,GAAsC,IAAhBb,EAAe,EAAfA,YACpB,OACE,qBAAKtJ,UAAU,eAAe,aAAW,aAAzC,SACE,oBAAIA,UAAU,aAAd,SACGsJ,EAAY5D,KAAI,SAACrF,EAAO+J,GACvB,IAAMC,EAAahK,EAAMkJ,MAAuB,KAAflJ,EAAMkJ,KACvC,OACE,oBACEvJ,UAAS,0BAAqBqK,EAAa,SAAW,IADxD,SAIGA,EACC,cAAC,IAAD,CAAMC,GAAIjK,EAAMkJ,KAAhB,SAAuBlJ,EAAMkC,OAE7BlC,EAAMkC,MALH6H,UAwBnBD,EAAWhK,aAAe,CACxBmJ,YAAa,CACX,CACE/G,KAAM,YACNgH,KAAM,gBAKGY,O,qDC/Cf,wDAEa5C,EAAiB,SAC5BgD,GAEI,IADJC,EACG,uDADM,oBAET,OAAQD,EAAiBE,IAAOF,GAAkBE,OAAUD,OAAOA","file":"static/js/22.9204faa8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./InputLabel.scss\";\r\n\r\nfunction InputLabel(props) {\r\n  return (\r\n    <label htmlFor={props.inputId} className={props.className}>\r\n      {props.labelText}{\" \"}\r\n      {props.isRequired && <span className=\"text-danger\">*</span>}\r\n    </label>\r\n  );\r\n}\r\n\r\nInputLabel.propTypes = {\r\n  inputId: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  labelText: PropTypes.string.isRequired,\r\n  isRequired: PropTypes.bool.isRequired\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n  className: \"form-label\",\r\n  isRequired: false,\r\n  labelText: \"\",\r\n};\r\n\r\nexport default InputLabel;\r\n","import validator from \"validator\";\r\n\r\nconst validatorRule = (value, validationKeyword) => {\r\n  let validation = { status: true, message: \"\" };\r\n  switch (true) {\r\n    case /required/i.test(validationKeyword):\r\n      validation.status = !validator.isEmpty(value, {\r\n        ignore_whitespace: true,\r\n      });\r\n      validation.message =\r\n        validation.status === false ? \"The value is required!\" : \"\";\r\n      break;\r\n    case /float/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isFloat(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be a float!\" : \"\";\r\n      }\r\n      break;\r\n    case /email/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isEmail(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be an Email!\" : \"\";\r\n      }\r\n      break;\r\n    case /alpha/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlpha(value, \"en-US\", { ignore: \" \" });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Alphabetic!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /alphanumeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlphanumeric(value, \"en-US\", {\r\n          ignore: \" \",\r\n        });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be AlphaNumeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /numeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isNumeric(value);\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Numeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /equals:*/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        const valData = validationKeyword.split(\":\");\r\n        validation.status = validator.equals(value, valData[2]);\r\n        validation.message =\r\n          validation.status === false\r\n            ? `The value needs to be same as ${valData[1]}!`\r\n            : \"\";\r\n      }\r\n      break;\r\n    default:\r\n      validation.status = true;\r\n      validation.message = \"\";\r\n      break;\r\n  }\r\n  return validation;\r\n};\r\n\r\nexport const validate = (inputvalue, validationRules = []) => {\r\n  const validationResult = {\r\n    status: true,\r\n    message: \"\",\r\n  };\r\n  validationRules.forEach((validationRule) => {\r\n    const runningValidation = validatorRule(inputvalue, validationRule);\r\n    validationResult.status =\r\n      validationResult.status && runningValidation.status;\r\n    validationResult.message += \" \" + runningValidation.message;\r\n    validationResult.message = validationResult.message.trim();\r\n  });\r\n  return validationResult;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Select.scss\";\r\n\r\nimport InputLabel from \"../inputLabel/InputLabel\";\r\nimport { validate } from \"../../../utils/validationHelper\";\r\n\r\nfunction SelectDynamic(props) {\r\n  const [selectValue, setSelectValue] = useState(null);\r\n\r\n  const _validate = (value) => {\r\n    const validationData = validate(value || \"\", props.validations);\r\n    if (validationData.status === false) {\r\n      props._handleFormValidation(props.name, validationData);\r\n    } else {\r\n      props._handleFormValidation(props.name, null);\r\n    }\r\n  };\r\n\r\n  // Remove if Validation causes issue\r\n  useEffect(() => {\r\n    _validate();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectValue === null) {\r\n      setSelectValue(props.value);\r\n    }\r\n  }, [props.value,selectValue]);\r\n\r\n  return (\r\n    <>\r\n      {!props.hideLabel && (\r\n        <InputLabel\r\n          inputId={props.id}\r\n          labelText={props.placeholder}\r\n          isRequired={props.isRequired}\r\n        />\r\n      )}\r\n      <Select\r\n        id={props.id}\r\n        className={`${props.className || \"\"} basic-single`}\r\n        classNamePrefix=\"select\"\r\n        styles={{\r\n          control: () => ({\r\n            WebkitAlignItems: \"center\",\r\n            WebkitBoxAlign: \"center\",\r\n            msFlexAlign: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"hsl(0, 0%, 100%)\",\r\n            borderColor:\r\n              props.formValidationData[props.name] &&\r\n              props.formValidationData[props.name].status === false\r\n                ? \"#dc3545\"\r\n                : \"hsl(0, 0%, 80%)\",\r\n            borderRadius: \"4px\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"1px\",\r\n            cursor: \"default\",\r\n            display: [\"-webkit-box\", \"-webkit-flex\", \"-ms-flexbox\", \"flex\"],\r\n            WebkitBoxFlexWrap: \"wrap\",\r\n            WebkitFlexWrap: \"wrap\",\r\n            msFlexWrap: \"wrap\",\r\n            flexWrap: \"wrap\",\r\n            WebkitBoxPack: \"justify\",\r\n            WebkitJustifyContent: \"space-between\",\r\n            justifyContent: \"space-between\",\r\n            minHeight: \"38px\",\r\n            outline: \"0 !important\",\r\n            position: \"relative\",\r\n            WebkitTransition: \"all 100ms\",\r\n            transition: \"all 100ms\",\r\n            boxiSizing: \"border-box\",\r\n          }),\r\n        }}\r\n        defaultValue={props.defaultValue}\r\n        value={selectValue}\r\n        isLoading={false}\r\n        isDisabled={props.disabled ?? false}\r\n        isSearchable={true}\r\n        isMulti={props.isMultiple}\r\n        name={props.name}\r\n        options={props.options}\r\n        onInputChange={(inputValue) => {\r\n          props.onInputChange(inputValue);\r\n        }}\r\n        onChange={(option, element) => {\r\n          let value = \"\";\r\n          if (Array.isArray(option) && option.length > 0) {\r\n            value = _.chain(option)\r\n              .map((o) => o.value)\r\n              .value();\r\n          } else {\r\n            value = option.value;\r\n          }\r\n          setSelectValue(option);\r\n          return props.onChange({\r\n            currentTarget: { name: element.name, value },\r\n          });\r\n        }}\r\n        onBlur={(e) => _validate(e.currentTarget.value)}\r\n      />\r\n      {props.formValidationData[props.name] &&\r\n        props.formValidationData[props.name].status === false && (\r\n          <div className=\"invalid-feedback d-block\">\r\n            {props.formValidationData[props.name].message}\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nSelectDynamic.propTypes = {\r\n  id: PropTypes.string,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n  isMultiple: PropTypes.bool,\r\n  isRequired: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  hideLabel: PropTypes.bool,\r\n  defaultValue: PropTypes.object,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  validations: PropTypes.array,\r\n  formValidationData: PropTypes.object,\r\n  _handleFormValidation: PropTypes.func,\r\n};\r\n\r\nSelectDynamic.defaultProps = {\r\n  isMultiple: false,\r\n  isRequired: false,\r\n  hideLabel: false,\r\n  validations: [],\r\n  formValidationData: {},\r\n  _handleFormValidation: () => {},\r\n};\r\n\r\nexport default SelectDynamic;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import React from \"react\";\r\nimport SelectDynamic from \"../../../common/select/Select\";\r\nimport { utcToLocalTime } from \"../../../../utils/timeHelper\";\r\n\r\nfunction PurchaseForm({\r\n  formData,\r\n  rawMaterials,\r\n  _fetchAllRawMaterials,\r\n  _handleOnChange,\r\n  formValidationData,\r\n  _handleFormValidation,\r\n}) {\r\n  return (\r\n    <>\r\n      {formData.id ? <input type=\"hidden\" value={formData.id} /> : \"\"}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 border-end\">\r\n          <div className=\"mb-3 offset-md-6\">\r\n            <label htmlFor=\"input1\" className=\"form-label\">\r\n              Date of purchase <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input1\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              placeholder=\"Date of purchase\"\r\n              name=\"purchaseDate\"\r\n              value={utcToLocalTime(formData.purchaseDate, \"YYYY-MM-DD\")}\r\n              onChange={_handleOnChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input2\" className=\"form-label\">\r\n              Raw Material <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <SelectDynamic\r\n              id=\"input2\"\r\n              value={\r\n                formData.rawMaterial && formData.rawMaterial.id\r\n                  ? {\r\n                      value: formData.rawMaterial.id,\r\n                      label: formData.rawMaterial.name,\r\n                    }\r\n                  : null\r\n              }\r\n              name=\"rawMaterialId\"\r\n              options={rawMaterials.map((rawMaterial) => ({\r\n                value: rawMaterial.id,\r\n                label: rawMaterial.name,\r\n              }))}\r\n              onInputChange={_fetchAllRawMaterials}\r\n              onChange={(e) => {\r\n                _handleOnChange(e);\r\n                _handleOnChange({\r\n                  currentTarget: {\r\n                    name: \"rawMaterial\",\r\n                    value:\r\n                      rawMaterials[\r\n                        rawMaterials\r\n                          .map(function (e) {\r\n                            return e.id;\r\n                          })\r\n                          .indexOf(e.currentTarget.value)\r\n                      ],\r\n                  },\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"input3\" className=\"form-label\">\r\n                  Unit Value <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"input3\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Unit Value\"\r\n                  name=\"unitValue\"\r\n                  value={formData.unitValue}\r\n                  onChange={_handleOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"input4\" className=\"form-label\">\r\n                  Unit of measurement <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"input4\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Unit of measurement\"\r\n                  name=\"measurementUnit\"\r\n                  value={formData.measurementUnit}\r\n                  onChange={_handleOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"input5\" className=\"form-label\">\r\n                  Units Purchased <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"input5\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Units Purchased\"\r\n                  name=\"unitsPurchased\"\r\n                  value={formData.unitsPurchased}\r\n                  onChange={_handleOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"input6\" className=\"form-label\">\r\n                  Purchase price <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"input6\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Purchase price\"\r\n                  name=\"purchasePrice\"\r\n                  value={formData.purchasePrice}\r\n                  onChange={_handleOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input7\" className=\"form-label\">\r\n              Due date <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input7\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              placeholder=\"Due date\"\r\n              name=\"dueDate\"\r\n              value={utcToLocalTime(formData.dueDate, \"YYYY-MM-DD\")}\r\n              onChange={_handleOnChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input8\" className=\"form-label\">\r\n              Lot <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input8\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Lot\"\r\n              name=\"lot\"\r\n              value={formData.lot}\r\n              onChange={_handleOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 border-start\">\r\n          <h5>Standardization</h5>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input9\" className=\"form-label\">\r\n              Projected Value <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input9\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={formData.rawMaterial.unitValue ?? \"\"}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input10\" className=\"form-label\">\r\n              Supplier <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input10\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={formData.rawMaterial.supplier ?? \"\"}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"pt-3 pb-3 offset-md-2 col-md-8\">\r\n            <hr />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input11\" className=\"form-label\">\r\n              Presentation <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input11\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={formData.rawMaterial.presentation ?? \"\"}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"input12\" className=\"form-label\">\r\n              Quantity Available <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"input12\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={formData.rawMaterial.quantityAvailable ?? \"\"}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PurchaseForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Edit.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport {\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  initFormData,\r\n  readData,\r\n  selectPurchase,\r\n  updateData,\r\n  fetchAllRawMaterials,\r\n} from \"../../../store/redux/Page/Purchase\";\r\nimport PurchaseForm from \"../../../components/pageSpecific/purchases/form/Form\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction PurchaseEdit() {\r\n  const params = useParams();\r\n  const store = useSelector(selectPurchase);\r\n  const dispatch = useDispatch();\r\n  const pageName = \"Edit purchase\";\r\n  const breadCrumbs = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n    {\r\n      name: \"Purchases\",\r\n      link: \"/purchases\",\r\n    },\r\n    {\r\n      name: \"Edit\",\r\n      link: \"\",\r\n    },\r\n  ];\r\n\r\n  const _handleOnChange = (e, customPath) => {\r\n    let keyName = e.currentTarget.name;\r\n    if (Array.isArray(customPath) && customPath.length > 0)\r\n      keyName = [...customPath, e.currentTarget.name];\r\n\r\n    dispatch(\r\n      handleFormDataChange({ key: keyName, value: e.currentTarget.value })\r\n    );\r\n  };\r\n\r\n  const _handleFormValidation = (key, value) => {\r\n    dispatch(\r\n      handleFormValidation({\r\n        key,\r\n        value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const _fetchAllRawMaterials = (keyword = \"\") => {\r\n    dispatch(fetchAllRawMaterials({ ...store.rawMaterialsFormData, keyword }));\r\n  };\r\n\r\n  const _handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateData({ id: params.id, ...store.formData }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\r\n    dispatch(initFormData());\r\n    _fetchAllRawMaterials();\r\n    dispatch(readData({ id: params.id }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">{pageName}</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>&nbsp;</div>\r\n                  </div>\r\n\r\n                  <form name={`${pageName}Create`} onSubmit={_handleFormSubmit}>\r\n                    <div className=\"card-body\">\r\n                      <PurchaseForm\r\n                        formData={store.formData}\r\n                        rawMaterials={store.rawMaterials}\r\n                        _fetchAllRawMaterials={_fetchAllRawMaterials}\r\n                        _handleOnChange={_handleOnChange}\r\n                        formValidationData={store.formValidation}\r\n                        _handleFormValidation={_handleFormValidation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"card-footer clearfix\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-app float-end\"\r\n                        disabled={\r\n                          Object.keys(store.formValidation).length > 0 ||\r\n                          store.loading === true\r\n                        }\r\n                      >\r\n                        {store.loading === true && (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        )}{\" \"}\r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PurchaseEdit;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nexport const utcToLocalTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\r\n};\r\n\r\nexport const localToUtcTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\r\n};\r\n"],"sourceRoot":""}