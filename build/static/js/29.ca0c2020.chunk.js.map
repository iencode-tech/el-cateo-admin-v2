{"version":3,"sources":["components/common/table/Table.js","components/common/pagination/Pagination.js","pages/illnesses/list/List.js","components/common/breadcrumb/Breadcrumb.js","utils/timeHelper.js"],"names":["Table","header","data","className","length","map","element","i","colSpan","Object","keys","subElement","subI","Pagination","totalCount","currentPage","onPageChange","type","onClick","tabIndex","icon","faArrowLeft","Math","ceil","perPage","faArrowRight","defaultProps","IllnessList","store","useSelector","selectIllness","dispatch","useDispatch","pageName","routeStart","_handleFormSubmit","e","preventDefault","fetchList","listFormData","useEffect","document","title","process","initFormData","to","breadCrumbs","name","link","onSubmit","value","keyword","placeholder","onChange","handleListFormDataChange","key","currentTarget","faSearch","inputs","closest","getElementsByTagName","faRedo","list","listData","index","createdAt","utcToLocalTime","status","statuses","actions","id","faEye","faEdit","href","deleteData","_deleteListData","faTrash","parseInt","listCount","page","Breadcrumb","activeLink","dateTimeString","format","moment"],"mappings":"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","file":"static/js/29.ca0c2020.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Table.scss\";\r\n\r\nfunction Table({ header, data }) {\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table m-0\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">#</th>\r\n            {header.length > 0\r\n              ? header.map((element, i) => <th className=\"text-center\" key={i}>{element}</th>)\r\n              : \"\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length === 0 ? (\r\n            <tr>\r\n              <td colSpan={1 + header.length} className=\"text-center\">\r\n                No Record found\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            data.map((element, i) => (\r\n              <tr key={i}>\r\n                <td className=\"text-center\">{i + 1}</td>\r\n                {Object.keys(element).map((subElement, subI) => (\r\n                  <td className=\"text-center\" key={subI}>{element[subElement]}</td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nTable.propTypes = {\r\n  header: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\nimport { perPage } from \"../../../utils/appConstants\";\r\nimport {\r\n  \r\n  faArrowLeft,\r\n  faArrowRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Pagination({ totalCount, currentPage, onPageChange }) {\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul className=\"pagination justify-content-end\">\r\n        <li className={`page-item ${currentPage === 1 && \"disabled\"}`}>\r\n          <button\r\n            type=\"button\"\r\n            className={`page-link`}\r\n            onClick={onPrevious}\r\n            tabIndex=\"-1\"\r\n            aria-disabled=\"true\"\r\n          >\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={`page-item ${\r\n            currentPage === Math.ceil(totalCount / perPage) && \"disabled\"\r\n          }`}\r\n        >\r\n          <button type=\"button\" className={`page-link`} onClick={onNext}>\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faEye,\r\n  faRedo,\r\n  faSearch,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./List.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport Table from \"../../../components/common/table/Table\";\r\nimport {\r\n  initFormData,\r\n  deleteData,\r\n  fetchList,\r\n  handleListFormDataChange,\r\n  selectIllness,\r\n} from \"../../../store/redux/Page/Illness\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { utcToLocalTime } from \"../../../utils/timeHelper\";\r\nimport { statuses } from \"../../../utils/appConstants\";\r\nimport Pagination from \"../../../components/common/pagination/Pagination\";\r\n\r\nfunction IllnessList() {\r\n  const store = useSelector(selectIllness);\r\n  const dispatch = useDispatch();\r\n  const pageName = \"Illnesses\";\r\n  const routeStart = \"/illness\";\r\n  const breadCrumbs = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n    {\r\n      name: \"Illnesses\",\r\n      link: \"\",\r\n    },\r\n  ];\r\n\r\n  const tableHeads = [\"Name\", \"Added Date\", \"Status\", \"\"];\r\n\r\n  const _handleOnChange = (e) => {\r\n    dispatch(\r\n      handleListFormDataChange({\r\n        key: e.currentTarget.name,\r\n        value: e.currentTarget.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const _handlePageChange = (page = 1) => {\r\n    dispatch(\r\n      handleListFormDataChange({\r\n        key: \"page\",\r\n        value: page,\r\n      })\r\n    );\r\n    dispatch(fetchList({ ...store.listFormData, page }));\r\n  };\r\n\r\n  const _handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fetchList(store.listFormData));\r\n  };\r\n\r\n  const _deleteListData = (e, id) => {\r\n    e.preventDefault();\r\n    dispatch(deleteData({ id }));\r\n    dispatch(fetchList(store.listFormData));\r\n  };\r\n\r\n  const _refreshListing = (e) => {\r\n    const form = e.currentTarget.closest(\"form\");\r\n    const inputs = form.getElementsByTagName(\"input\");\r\n    for (let i = 0; i < inputs.length; i++) {\r\n      dispatch(handleListFormDataChange({ key: inputs[i].name, value: \"\" }));\r\n    }\r\n    _handleFormSubmit(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\r\n    dispatch(initFormData());\r\n    dispatch(fetchList(store.listFormData));\r\n  });\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">\r\n                  {pageName}&nbsp;\r\n                  <Link\r\n                    type=\"button\"\r\n                    to={`${routeStart}/create`}\r\n                    className=\"btn btn-sm btn-app ms-3\"\r\n                  >\r\n                    Add New\r\n                  </Link>\r\n                </h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>\r\n                      <form\r\n                        name={`${pageName}ListFilter`}\r\n                        onSubmit={_handleFormSubmit}\r\n                      >\r\n                        <div className=\"input-group mt-3 mb-3\">\r\n                          <input\r\n                            name=\"keyword\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={store.listFormData.keyword}\r\n                            placeholder=\"Enter keyword to search\"\r\n                            onChange={_handleOnChange}\r\n                          />\r\n                          <button className=\"btn btn-outline-app\" type=\"submit\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-outline-app\"\r\n                            type=\"reset\"\r\n                            onClick={_refreshListing}\r\n                          >\r\n                            <FontAwesomeIcon icon={faRedo} />\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card-body p-0\">\r\n                    <Table\r\n                      data={store.list.map((listData, index) => ({\r\n                        name: listData.name,\r\n                        createdAt: utcToLocalTime(listData.createdAt),\r\n                        status: statuses[listData.status],\r\n                        actions: (\r\n                          <div className=\"dropdown\">\r\n                            <button\r\n                              className=\"btn btn-outline-app dropdown-toggle\"\r\n                              type=\"button\"\r\n                              id={`action-drop-${index}`}\r\n                              data-bs-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"\r\n                            >\r\n                              Actions\r\n                            </button>\r\n                            <ul\r\n                              className=\"dropdown-menu\"\r\n                              aria-labelledby={`action-drop-${index}`}\r\n                            >\r\n                              <li>\r\n                                <Link\r\n                                  className=\"dropdown-item\"\r\n                                  to={`${routeStart}/${listData.id}/view`}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faEye} /> View\r\n                                </Link>\r\n                              </li>\r\n                              <li>\r\n                                <Link\r\n                                  className=\"dropdown-item\"\r\n                                  to={`${routeStart}/${listData.id}/edit`}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faEdit} /> Edit\r\n                                </Link>\r\n                              </li>\r\n                              <li>\r\n                                <a\r\n                                  className=\"dropdown-item\"\r\n                                  href=\"#\"\r\n                                  onClick={(e) =>\r\n                                    _deleteListData(e, listData.id)\r\n                                  }\r\n                                >\r\n                                  <FontAwesomeIcon icon={faTrash} /> Delete\r\n                                </a>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        ),\r\n                      }))}\r\n                      header={tableHeads}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"card-footer clearfix\">\r\n                    <Pagination\r\n                      totalCount={parseInt(store.listCount)}\r\n                      currentPage={parseInt(store.listFormData.page)}\r\n                      onPageChange={_handlePageChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IllnessList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nexport const utcToLocalTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\r\n};\r\n\r\nexport const localToUtcTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\r\n};\r\n"],"sourceRoot":""}