{"version":3,"sources":["store/redux/Page/Tree.js","store/redux/Page/AgriculturalPractice.js","store/redux/Page/ExpertMonitor.js","store/redux/Page/Purchase.js","store/redux/Page/Illness.js","store/redux/Page/WorkCertificate.js","store/redux/Page/Profile.js","utils/authHelper.js","store/redux/Page/Login.js","store/redux/Page/Dashboard.js","utils/appConstants.js","store/redux/Page/WorkPlan.js","store/redux/Function/Toast.js","store/redux/Identity.js","store/redux/Page/Person.js","store/redux/Page/Zone.js","store/redux/Page/Sector.js","store/redux/Page/RawMaterial.js","store/redux/index.js","utils/requestHelper.js","store/sagas/Api/Login.js","utils/apiConstants.js","store/sagas/Api/Identity.js","store/sagas/Api/Profile/ChangePassword.js","store/sagas/Api/Profile/UpdateProfile.js","store/sagas/Api/DashboardData.js","store/sagas/Api/Person/List.js","store/sagas/Api/Person/Create.js","store/sagas/Api/Person/Read.js","store/sagas/Api/Person/Update.js","store/sagas/Api/Person/Delete.js","store/sagas/Api/Tree/List.js","store/sagas/Api/Tree/Create.js","store/sagas/Api/Tree/Read.js","store/sagas/Api/Tree/Update.js","store/sagas/Api/Tree/Delete.js","store/sagas/Api/Zone/List.js","store/sagas/Api/Zone/Create.js","store/sagas/Api/Zone/Read.js","store/sagas/Api/Zone/Update.js","store/sagas/Api/Zone/Delete.js","store/sagas/Api/Sector/List.js","store/sagas/Api/Sector/Create.js","store/sagas/Api/Sector/Read.js","store/sagas/Api/Sector/Update.js","store/sagas/Api/Sector/Delete.js","store/sagas/Api/Illness/List.js","store/sagas/Api/Illness/Create.js","store/sagas/Api/Illness/Read.js","store/sagas/Api/Illness/Update.js","store/sagas/Api/Illness/Delete.js","store/sagas/Api/RawMaterial/List.js","store/sagas/Api/RawMaterial/Create.js","store/sagas/Api/RawMaterial/Read.js","store/sagas/Api/RawMaterial/Update.js","store/sagas/Api/RawMaterial/Delete.js","store/sagas/Api/AgriculturalPractice/List.js","store/sagas/Api/AgriculturalPractice/Create.js","store/sagas/Api/AgriculturalPractice/Read.js","store/sagas/Api/AgriculturalPractice/Update.js","store/sagas/Api/AgriculturalPractice/Delete.js","store/sagas/Api/WorkPlan/List.js","store/sagas/Api/WorkPlan/Create.js","store/sagas/Api/WorkPlan/Read.js","store/sagas/Api/WorkPlan/Update.js","store/sagas/Api/WorkPlan/Delete.js","store/sagas/Api/Purchase/List.js","store/sagas/Api/Purchase/Create.js","store/sagas/Api/Purchase/Read.js","store/sagas/Api/Purchase/Update.js","store/sagas/Api/Purchase/Delete.js","store/sagas/Api/ExpertMonitor/List.js","store/sagas/Api/ExpertMonitor/Create.js","store/sagas/Api/ExpertMonitor/Read.js","store/sagas/Api/ExpertMonitor/Update.js","store/sagas/Api/ExpertMonitor/Delete.js","store/sagas/Function/Toast.js","store/sagas/index.js","store/index.js","serviceWorker.js","components/layout/leftsidebar/LeftSideBar.js","components/layout/header/Header.js","components/layout/footer/Footer.js","layout/AuthLayout/index.js","layout/ManageFarmLayout/index.js","routes/authRoutes.js","layout/NonAuthLayout/index.js","routes/nonAuthRoutes.js","layout/GeneralLayout/index.js","routes/generalRoutes.js","components/layout/preloader/PreLoader.js","index.js"],"names":["initialState","loading","isError","list","listCount","listFormData","keyword","page","formData","scanId","entry_date","Date","latitude","longitude","selectRegion","zoneId","sectorId","files","existingFiles","status","formValidation","zonesFormData","zones","sectorsFormData","sectors","formType","treeSlice","createSlice","name","reducers","handleListFormDataChange","state","action","payload","key","value","fetchList","successList","data","dbData","dbCount","failedList","initFormData","fetchAllZones","setAllZones","fetchAllSectors","setAllSectors","handleFormValidation","fVal","handleFormDataChange","storeData","readData","updateData","deleteData","success","failed","actions","selectTree","tree","defaultFolialDrenche","formulationName","scheduledDate","daysToDo","method","observations","rawMaterials","rawMaterialsFormData","unit","rawMaterialInitialState","rawMaterialId","quantity","agriculturalPracticeSlice","successDefaultFolialDrenche","failedDefaultFolialDrenche","fetchAllRawMaterials","setAllRawMaterials","addNewRawMaterial","initMaterial","material","id","unitMetric","rawMaterial","push","removeRawMaterial","splice","index","Array","isArray","_","set","join","selectAgriculturalPractice","agriculturalPractice","treeId","illnessId","healthStatus","observation","illnessesFormData","illnesses","treesFormData","trees","expertMonitorSlice","fetchAllIllnesses","setAllIllnesses","fetchAllTrees","setAllTrees","selectExpertMonitor","expertMonitor","purchaseDate","unitValue","measurementUnit","unitsPurchased","purchasePrice","dueDate","lot","supplier","presentation","quantityAvailable","purchaseSlice","selectPurchase","purchase","illnessSlice","selectIllness","illness","collaboratorId","agriculturalPracticeId","methodId","assignedOn","terminateOn","collaborator","zone","scannedTrees","totalTrees","sector","workCertificateSlice","setSelectedData","selectWorkCertificate","workCertificate","firstName","lastName","email","phone","address","password","confirmPassword","currentPassword","profileSlice","changePassword","selectProfile","profile","authCheck","fetchAuthToken","localStorage","getItem","process","loginForm","loginSlice","handleDataChange","attempt","selectLogin","login","head","admin","dashboardSlice","selectDashboard","dashboard","personRoles","A","H","C","statuses","methods","treeHealthStatuses","workPlanMethods","actualName","totalunit","g","cc","perPage","filePathUrl","farms","defaultFolialDrencheId","amountPerTree","collaboratorsFormData","collaborators","agriculturalPracticesFormData","agriculturalPractices","workPlanSlice","fetchAllCollaborators","setAllCollaborators","fetchAllAgriculturalPractices","setAllAgriculturalPractices","selectWorkPlan","workPlan","toastSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","message","toastSlice","setToastData","toastSetting","resetToastData","selectToast","toast","auth","userData","identitySlice","populate","sync","flush","removeItem","selectIdentity","identity","role","Object","keys","personSlice","soils","soilInitialState","soilType","date","ph","clay","sand","calcium","magnesium","potassium","sodium","aluminum","silt","zoneSlice","addNewSoil","removeSoil","createBy","treeIds","treeData","sectorSlice","barCode","price","refPresentation","retirementTime","quarantine","incompatibleRawMaterials","incompatibleRawMaterialData","rawMaterialSlice","allReducers","combineReducers","person","rootReducers","generateRequestHeader","customHeader","headerObj","Accept","header","Headers","append","makeRequest","requestUrl","requestType","requestBody","requestHeader","fetchOptions","headers","FormData","body","length","requestBodyKey","i","JSON","stringify","Promise","resolve","reject","fetch","then","response","json","responseData","code","useDispatch","errors","catch","err","triggerApi","actionWatcher","put","userStoreData","access_token","setItem","takeLatest","all","queryString","property","slice","replace","setAllTreesExpertMonitor","setAllTreesSector","fetchAllTreesExpertMonitor","fetchAllTreesSector","setAllZonesForTree","setAllZonesForWorkPlan","setAllZonesForWorkCertificate","fetchAllZonesForTree","fetchAllZonesForWorkPlan","fetchAllZonesForWorkCertificate","setAllSectorsForTree","setAllSectorsForWorkPlan","setAllSectorsForWorkCertificate","fetchAllSectorsForTree","fetchAllSectorsForWorkPlan","fetchAllSectorsForWorkCertificate","setAllIllnessesExpertMonitor","setAllIllnessesSector","fetchAllIllnessesExpertMonitor","fetchAllIllnessesSector","setAllRawMaterialsForAgriculturalPractice","setAllRawMaterialsForPurchase","fetchAllRawMaterialsForAgriculturalPractice","fetchAllRawMaterialsForPurchase","actionType","agriculturalPracticeSuccessDefaultFolialDrenche","agriculturalPracticeFailedDefaultFolialDrenche","agriculturalPracticeInitFormData","parse","successListWorkPlan","successListWorkCertificate","failedListWorkPlan","failedListWorkCertificate","fetchListWorkPlan","fetchListWorkCertificate","successWorkPlan","successWorkCertificate","failedWorkPlan","failedWorkCertificate","readDataWorkPlan","readDataWorkCertificate","triggerFunction","select","onClose","info","warn","error","rootSaga","loginActionWatcher","identityActionWatcher","changePasswordActionWatcher","updateProfileActionWatcher","dashboardActionWatcher","personListActionWatcher","personCreateActionWatcher","personReadActionWatcher","personUpdateActionWatcher","personDeleteActionWatcher","treeListActionWatcher","treeCreateActionWatcher","treeReadActionWatcher","treeUpdateActionWatcher","treeDeleteActionWatcher","zoneListActionWatcher","zoneCreateActionWatcher","zoneReadActionWatcher","zoneUpdateActionWatcher","zoneDeleteActionWatcher","sectorListActionWatcher","sectorCreateActionWatcher","sectorReadActionWatcher","sectorUpdateActionWatcher","sectorDeleteActionWatcher","illnessListActionWatcher","illnessCreateActionWatcher","illnessReadActionWatcher","illnessUpdateActionWatcher","illnessDeleteActionWatcher","rawMaterialListActionWatcher","rawMaterialCreateActionWatcher","rawMaterialReadActionWatcher","rawMaterialUpdateActionWatcher","rawMaterialDeleteActionWatcher","agriculturalPracticeListActionWatcher","agriculturalPracticeCreateActionWatcher","agriculturalPracticeReadActionWatcher","agriculturalPracticeUpdateActionWatcher","agriculturalPracticeDeleteActionWatcher","workPlanListActionWatcher","workPlanCreateActionWatcher","workPlanReadActionWatcher","workPlanUpdateActionWatcher","workPlanDeleteActionWatcher","purchaseListActionWatcher","purchaseCreateActionWatcher","purchaseReadActionWatcher","purchaseUpdateActionWatcher","purchaseDeleteActionWatcher","expertMonitorListActionWatcher","expertMonitorCreateActionWatcher","expertMonitorReadActionWatcher","expertMonitorUpdateActionWatcher","expertMonitorDeleteActionWatcher","toastActionWatcher","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","serializableCheck","run","Boolean","window","location","hostname","match","LeftSideBar","useLocation","history","useHistory","useState","icon","faArrowAltCircleUp","link","active","faUser","faTree","faFileAlt","children","faFileInvoice","faCrosshairs","faDesktop","sidebarLinks","setSideBarLinks","sidebarUpdate","newLocation","sidebarLinksCopy","forEach","parentMatched","RegExp","pluralize","singular","test","pathname","subData","subIndex","childMatched","useEffect","unListen","listen","className","map","activeClassName","isActive","to","Header","useSelector","dispatch","toggle","setToggle","myCollapse","document","getElementById","bsCollapse","Collapse","show","hide","href","src","height","width","alt","onClick","currentToggle","e","preventDefault","Footer","getFullYear","AuthLayout","checkIdentity","setInterval","clearInterval","ManageFarmLayout","Dashboard","lazy","Comingsoon","Farms","AddFarms","ViewFarm","EditFarm","Sectors","ViewSector","AddSector","Zonas","Viewzonas","RawMaterials","PersonList","PersonView","PersonCreate","PersonEdit","ChangePassword","EditProfile","ArcGis","TreeList","TreeCreate","TreeEdit","TreeView","IllnessList","IllnessCreate","IllnessEdit","IllnessView","AgriculturalPracticeList","AgriculturalPracticeCreate","AgriculturalPracticeEdit","AgriculturalPracticeView","WorkPlanList","WorkPlanCreate","WorkPlanEdit","WorkPlanView","PurchaseList","PurchaseCreate","PurchaseEdit","PurchaseView","ExpertMonitorList","ExpertMonitorCreate","ExpertMonitorEdit","ExpertMonitorView","routes","path","component","route","exact","render","NonAuthLayout","Login","ForgotPassword","ResetPassword","GeneralLayout","NotFound","PreLoader","defaultPreLoader","setAttribute","remove","ReactDOM","StrictMode","fallback","AuthRoutes","NonAuthRoutes","GeneralRoutes","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fa85019.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    scanId: \"\",\r\n    entry_date: new Date(),\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    selectRegion: \"Z\",\r\n    zoneId: \"\",\r\n    sectorId: [],\r\n    files: [],\r\n    existingFiles: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  zonesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  zones: [],\r\n  sectorsFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  sectors: [],\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const treeSlice = createSlice({\r\n  name: \"tree\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      state.zonesFormData = initialState.zonesFormData;\r\n      state.zones = initialState.zones;\r\n      state.sectorsFormData = initialState.sectorsFormData;\r\n      state.sectors = initialState.sectors;\r\n      return state;\r\n    },\r\n    fetchAllZones: (state, action) => {\r\n      state.zonesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllZones: (state, action) => {\r\n      state.zones = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllSectors: (state, action) => {\r\n      state.sectorsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllSectors: (state, action) => {\r\n      state.sectors = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  fetchAllZones,\r\n  setAllZones,\r\n  fetchAllSectors,\r\n  setAllSectors,\r\n  handleFormValidation,\r\n  handleFormDataChange,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = treeSlice.actions;\r\n\r\nexport const selectTree = (state) => state.tree;\r\n\r\nexport default treeSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  defaultFolialDrenche: {},\r\n  formData: {\r\n    formulationName: \"\",\r\n    scheduledDate: new Date(),\r\n    daysToDo: \"\",\r\n    method: 0,\r\n    observations: \"\",\r\n    rawMaterials: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n  rawMaterialsFormData: {\r\n    keyword: \"\",\r\n    unit: \"cc\",\r\n    page: 1,\r\n  },\r\n  rawMaterials: [],\r\n};\r\n\r\nconst rawMaterialInitialState = {\r\n  rawMaterialId: \"\",\r\n  quantity: \"\",\r\n  unit: \"\",\r\n};\r\n\r\nexport const agriculturalPracticeSlice = createSlice({\r\n  name: \"agriculturalPractice\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    successDefaultFolialDrenche: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.defaultFolialDrenche = {\r\n        ...initialState.defaultFolialDrenche,\r\n        ...action.payload.data,\r\n      };\r\n      return state;\r\n    },\r\n    failedDefaultFolialDrenche: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.defaultFolialDrenche = initialState.defaultFolialDrenche;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      state.rawMaterialsFormData = initialState.rawMaterialsFormData;\r\n      state.rawMaterials = initialState.rawMaterials;\r\n      return state;\r\n    },\r\n    fetchAllRawMaterials: (state, action) => {\r\n      state.rawMaterialsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllRawMaterials: (state, action) => {\r\n      state.rawMaterials = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    addNewRawMaterial: (state, action) => {\r\n      let initMaterial = { ...rawMaterialInitialState };\r\n      initMaterial.rawMaterialId = action.payload.material.id;\r\n      initMaterial.quantity =\r\n        action.payload.quantity || rawMaterialInitialState.quantity;\r\n      initMaterial.unit = action.payload.material.unitMetric;\r\n      initMaterial.rawMaterial = action.payload.material;\r\n      state.formData.rawMaterials.push(initMaterial);\r\n      return state;\r\n    },\r\n    removeRawMaterial: (state, action) => {\r\n      state.formData.rawMaterials.splice(action.payload.index, 1);\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      if (Array.isArray(action.payload.key)) {\r\n        _.set(\r\n          state.formData,\r\n          action.payload.key.join(\".\"),\r\n          action.payload.value\r\n        );\r\n      } else {\r\n        state.formData[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  successDefaultFolialDrenche,\r\n  failedDefaultFolialDrenche,\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  fetchAllRawMaterials,\r\n  setAllRawMaterials,\r\n  addNewRawMaterial,\r\n  removeRawMaterial,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = agriculturalPracticeSlice.actions;\r\n\r\nexport const selectAgriculturalPractice = (state) => state.agriculturalPractice;\r\n\r\nexport default agriculturalPracticeSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    treeId: \"\",\r\n    illnessId: \"\",\r\n    healthStatus: 0,\r\n    observation: \"\",\r\n    files: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n  illnessesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  illnesses: [],\r\n  treesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  trees: [],\r\n};\r\n\r\nexport const expertMonitorSlice = createSlice({\r\n  name: \"expertMonitor\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    fetchAllIllnesses: (state, action) => {\r\n      state.illnessesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllIllnesses: (state, action) => {\r\n      state.illnesses = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllTrees: (state, action) => {\r\n      state.treesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllTrees: (state, action) => {\r\n      state.trees = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  fetchAllIllnesses,\r\n  setAllIllnesses,\r\n  fetchAllTrees,\r\n  setAllTrees,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = expertMonitorSlice.actions;\r\n\r\nexport const selectExpertMonitor = (state) => state.expertMonitor;\r\n\r\nexport default expertMonitorSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    purchaseDate: new Date(),\r\n    rawMaterialId: \"\",\r\n    unitValue: \"\",\r\n    measurementUnit: \"\",\r\n    unitsPurchased: \"\",\r\n    purchasePrice: \"\",\r\n    dueDate: new Date(),\r\n    lot: \"\",\r\n    rawMaterial: {\r\n      id: \"\",\r\n      name: \"\",\r\n      supplier: \"\",\r\n      presentation: \"\",\r\n      quantityAvailable: \"\",\r\n    },\r\n  },\r\n  formValidation: {},\r\n  rawMaterialsFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  rawMaterials: [],\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const purchaseSlice = createSlice({\r\n  name: \"purchase\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    fetchAllRawMaterials: (state, action) => {\r\n      state.rawMaterialsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllRawMaterials: (state, action) => {\r\n      state.rawMaterials = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      if (Array.isArray(action.payload.key)) {\r\n        _.set(\r\n          state.formData,\r\n          action.payload.key.join(\".\"),\r\n          action.payload.value\r\n        );\r\n      } else {\r\n        state.formData[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = { ...state.formValidation };\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  fetchAllRawMaterials,\r\n  setAllRawMaterials,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = purchaseSlice.actions;\r\n\r\nexport const selectPurchase = (state) => state.purchase;\r\n\r\nexport default purchaseSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    name: \"\",\r\n    observation: \"\",\r\n    files: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const illnessSlice = createSlice({\r\n  name: \"illness\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = illnessSlice.actions;\r\n\r\nexport const selectIllness = (state) => state.illness;\r\n\r\nexport default illnessSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    zoneId: \"\",\r\n    sectorId: \"\",\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    collaboratorId: \"\",\r\n    zoneId: \"\",\r\n    sectorId: \"\",\r\n    agriculturalPracticeId: \"\",\r\n    rawMaterials: [],\r\n    methodId: 0,\r\n    assignedOn: \"\",\r\n    terminateOn: \"\",\r\n    trees: [],\r\n    status: 1,\r\n    collaborator: {},\r\n    zone: {},\r\n    agriculturalPractice: {},\r\n    id: \"\",\r\n    scannedTrees: 0,\r\n    totalTrees: 0,\r\n    selectRegion: \"Z\",\r\n  },\r\n  zonesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  zone: {},\r\n  zones: [],\r\n  sectorsFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  sector: {},\r\n  sectors: [],\r\n};\r\n\r\nexport const workCertificateSlice = createSlice({\r\n  name: \"workCertificate\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    setSelectedData: (state, action) => {\r\n      state[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchAllZones: (state, action) => {\r\n      state.zonesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllZones: (state, action) => {\r\n      state.zones = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllSectors: (state, action) => {\r\n      state.sectorsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllSectors: (state, action) => {\r\n      state.sectors = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  setSelectedData,\r\n  fetchAllZones,\r\n  setAllZones,\r\n  fetchAllSectors,\r\n  setAllSectors,\r\n  readData,\r\n  success,\r\n  failed,\r\n} = workCertificateSlice.actions;\r\n\r\nexport const selectWorkCertificate = (state) => state.workCertificate;\r\n\r\nexport default workCertificateSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  formData: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    currentPassword: \"\",\r\n  },\r\n  formValidation: {},\r\n};\r\n\r\nexport const profileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = { ...state.formValidation };\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    changePassword: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  readData,\r\n  updateData,\r\n  changePassword,\r\n  success,\r\n  failed,\r\n} = profileSlice.actions;\r\n\r\nexport const selectProfile = (state) => state.profile;\r\n\r\nexport default profileSlice.reducer;\r\n","export const authCheck = () => {\r\n  if (fetchAuthToken()) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const fetchAuthToken = () =>\r\n  localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loginForm: {\r\n    email: \"\",\r\n    password: \"\",\r\n  },\r\n  loading: false,\r\n  isError: false,\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    handleDataChange: (state, action) => {\r\n      state.loginForm[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    attempt: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state = initialState;\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.loginForm.password = \"\";\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { handleDataChange, attempt, success, failed } =\r\n  loginSlice.actions;\r\n\r\nexport const selectLogin = (state) => state.login;\r\n\r\nexport default loginSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  head: 0,\r\n  admin: 0,\r\n  collaborator: 0,\r\n  loading: false,\r\n  isError: false,\r\n};\r\n\r\nexport const dashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    attempt: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state = {\r\n        ...initialState,\r\n        ...{\r\n          head: action.payload.data[\"H\"],\r\n          admin: action.payload.data[\"A\"],\r\n          collaborator: action.payload.data[\"C\"],\r\n        },\r\n      };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.head = 0;\r\n      state.admin = 0;\r\n      state.collaborator = 0;\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { attempt, success, failed } = dashboardSlice.actions;\r\n\r\nexport const selectDashboard = (state) => state.dashboard;\r\n\r\nexport default dashboardSlice.reducer;\r\n","const personRoles = {\r\n  A: \"System Administrator\",\r\n  H: \"Head of Planning\",\r\n  C: \"Collaborator\",\r\n};\r\n\r\nconst statuses = {\r\n  0: \"Inactive\",\r\n  1: \"Active\",\r\n};\r\n\r\nconst methods = {\r\n  0: \"Foliar\",\r\n  1: \"Manual\",\r\n  2: \"Water Drain\",\r\n};\r\n\r\nconst stationaries = {\r\n  0: \"No\",\r\n  1: \"Yes\",\r\n};\r\n\r\nconst treeHealthStatuses = {\r\n  0: \"Sick\",\r\n  1: \"Healthy\",\r\n};\r\n\r\nconst workPlanMethods = {\r\n  0: {\r\n    name: \"Knapsack pump 18lt\",\r\n    actualName: \"Knapsack pump\",\r\n    value: 18000,\r\n    unit: \"CC\",\r\n    totalunit: \"Lts\"\r\n  },\r\n  1: { name: \"Caneca 200lt\", actualName: \"Caneca \", value: 200000, unit: \"CC\", totalunit: \"Lts\" },\r\n  2: { name: \"IBC 1000\", actualName: \"IBC\", value: 1000000, unit: \"CC\", totalunit: \"Lts\" },\r\n};\r\n\r\nconst unitMetric = {\r\n  g: \"Gram\",\r\n  cc: \"CC\",\r\n  totalunit: \"Lts\"\r\n};\r\n\r\nconst perPage = 15;\r\n\r\nconst filePathUrl = {\r\n  trees: `${process.env.REACT_APP_ASSET_URL}/assets/trees`,\r\n  illnesses: `${process.env.REACT_APP_ASSET_URL}/assets/illnesses`,\r\n  rawMaterials: `${process.env.REACT_APP_ASSET_URL}/assets/raw-materials`,\r\n  expertMonitor: `${process.env.REACT_APP_ASSET_URL}/assets/tree-illnesses`,\r\n  farms: `${process.env.REACT_APP_ASSET_URL}/assets/farms`,\r\n\r\n};\r\n\r\nconst defaultFolialDrencheId = \"61c1eee3a713b1e808b2a68f\";\r\n\r\nexport {\r\n  personRoles,\r\n  statuses,\r\n  methods,\r\n  stationaries,\r\n  treeHealthStatuses,\r\n  workPlanMethods,\r\n  unitMetric,\r\n  perPage,\r\n  filePathUrl,\r\n  defaultFolialDrencheId\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    collaboratorId: \"\",\r\n    selectRegion: \"Z\",\r\n    zoneId: \"\",\r\n    sectorId: \"\",\r\n    agriculturalPracticeId: \"\",\r\n    methodId: 0,\r\n    amountPerTree: 0,\r\n    collaborator: {},\r\n    zone: {},\r\n    sector: {},\r\n    agriculturalPractice: {},\r\n    rawMaterials: [],\r\n    trees: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n  collaboratorsFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  collaborators: [],\r\n  zonesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  zones: [],\r\n  sectorsFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  sectors: [],\r\n  agriculturalPracticesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  agriculturalPractices: [],\r\n};\r\n\r\nexport const workPlanSlice = createSlice({\r\n  name: \"workPlan\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    fetchAllCollaborators: (state, action) => {\r\n      state.collaboratorsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllCollaborators: (state, action) => {\r\n      state.collaborators = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllZones: (state, action) => {\r\n      state.zonesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllZones: (state, action) => {\r\n      state.zones = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllSectors: (state, action) => {\r\n      state.sectorsFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllSectors: (state, action) => {\r\n      state.sectors = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllAgriculturalPractices: (state, action) => {\r\n      state.agriculturalPracticesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllAgriculturalPractices: (state, action) => {\r\n      state.agriculturalPractices = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      if (Array.isArray(action.payload.key)) {\r\n        _.set(\r\n          state.formData,\r\n          action.payload.key.join(\".\"),\r\n          action.payload.value\r\n        );\r\n      } else {\r\n        state.formData[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  fetchAllCollaborators,\r\n  setAllCollaborators,\r\n  fetchAllZones,\r\n  setAllZones,\r\n  fetchAllSectors,\r\n  setAllSectors,\r\n  fetchAllAgriculturalPractices,\r\n  setAllAgriculturalPractices,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = workPlanSlice.actions;\r\n\r\nexport const selectWorkPlan = (state) => state.workPlan;\r\n\r\nexport default workPlanSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  toastSettings: {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  },\r\n  type: \"default\",\r\n  message: \"\",\r\n};\r\n\r\nexport const toastSlice = createSlice({\r\n  name: \"toast\",\r\n  initialState,\r\n  reducers: {\r\n    setToastData: (state, action) => {\r\n      state.type = action.payload.type || initialState.type;\r\n      state.message = action.payload.message || initialState.message;\r\n      state.toastSetting = action.payload.toastSettings || initialState.toastSettings;\r\n      return state;\r\n    },\r\n    resetToastData: (state, action) => {\r\n      return initialState;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setToastData, resetToastData } =\r\n  toastSlice.actions;\r\n\r\nexport const selectToast = (state) => state.toast;\r\n\r\nexport default toastSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  auth: false,\r\n  userData: {},\r\n};\r\n\r\nexport const identitySlice = createSlice({\r\n  name: \"identity\",\r\n  initialState,\r\n  reducers: {\r\n    populate: (state, action) => {\r\n      state = {\r\n        loading: false,\r\n        auth: true,\r\n        userData: action.payload.data,\r\n      };\r\n      return state;\r\n    },\r\n    sync: (state, action) => {\r\n      state.loading = true;\r\n      return state;\r\n    },\r\n    flush: (state, action) => {\r\n      localStorage.removeItem(process.env.REACT_APP_AUTH_KEY_NAME);\r\n\r\n      return { ...initialState, loading: false };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { populate, sync, flush } = identitySlice.actions;\r\n\r\nexport const selectIdentity = (state) => state.identity;\r\n\r\nexport default identitySlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { personRoles } from \"../../../utils/appConstants\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    role: Object.keys(personRoles)[0],\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const personSlice = createSlice({\r\n  name: \"person\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = { ...state.formValidation };\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = personSlice.actions;\r\n\r\nexport const selectPerson = (state) => state.person;\r\n\r\nexport default personSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    name: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    soils: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n};\r\n\r\nconst soilInitialState = {\r\n  soilType: \"\",\r\n  date: new Date(),\r\n  ph: \"\",\r\n  clay: \"\",\r\n  sand: \"\",\r\n  calcium: \"\",\r\n  magnesium: \"\",\r\n  potassium: \"\",\r\n  sodium: \"\",\r\n  aluminum: \"\",\r\n  silt: \"\",\r\n  observation: \"\",\r\n};\r\n\r\nexport const zoneSlice = createSlice({\r\n  name: \"zone\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    addNewSoil: (state, action) => {\r\n      state.formData.soils.push(soilInitialState);\r\n      return state;\r\n    },\r\n    removeSoil: (state, action) => {\r\n      state.formData.soils.splice(action.payload.index, 1);\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      if (Array.isArray(action.payload.key)) {\r\n        _.set(\r\n          state.formData,\r\n          action.payload.key.join(\".\"),\r\n          action.payload.value\r\n        );\r\n      } else {\r\n        state.formData[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = {...state.formValidation};\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  addNewSoil,\r\n  removeSoil,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = zoneSlice.actions;\r\n\r\nexport const selectZone = (state) => state.zone;\r\n\r\nexport default zoneSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    name: \"\",\r\n    createBy: \"id\",\r\n    treeIds: [],\r\n    treeData: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  treesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  tree: {},\r\n  trees: [],\r\n  illnessesFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  illness: {},\r\n  illnesses: [],\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const sectorSlice = createSlice({\r\n  name: \"sector\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    fetchAllTrees: (state, action) => {\r\n      state.treesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllTrees: (state, action) => {\r\n      state.trees = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    fetchAllIllnesses: (state, action) => {\r\n      state.illnessesFormData.keyword = action.payload.keyword;\r\n      return state;\r\n    },\r\n    setAllIllnesses: (state, action) => {\r\n      state.illnesses = action.payload.data.dbData;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      if (Array.isArray(action.payload.key)) {\r\n        _.set(\r\n          state.formData,\r\n          action.payload.key.join(\".\"),\r\n          action.payload.value\r\n        );\r\n      } else {\r\n        state.formData[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = { ...state.formValidation };\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  fetchAllTrees,\r\n  setAllTrees,\r\n  fetchAllIllnesses,\r\n  setAllIllnesses,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = sectorSlice.actions;\r\n\r\nexport const selectSector = (state) => state.sector;\r\n\r\nexport default sectorSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isError: false,\r\n  list: [],\r\n  listCount: 0,\r\n  listFormData: {\r\n    keyword: \"\",\r\n    page: 1,\r\n  },\r\n  formData: {\r\n    barCode: \"\",\r\n    name: \"\",\r\n    unitValue: \"\",\r\n    unitMetric: \"\",\r\n    presentation: \"\",\r\n    quantity: \"\",\r\n    quantityAvailable: \"\",\r\n    price: \"\",\r\n    supplier: \"\",\r\n    refPresentation: \"\",\r\n    retirementTime: \"\",\r\n    quarantine: \"\",\r\n    incompatibleRawMaterials: [],\r\n    incompatibleRawMaterialData: [],\r\n    files: [],\r\n    status: 1,\r\n  },\r\n  formValidation: {},\r\n  formType: \"Create\",\r\n};\r\n\r\nexport const rawMaterialSlice = createSlice({\r\n  name: \"rawMaterial\",\r\n  initialState,\r\n  reducers: {\r\n    handleListFormDataChange: (state, action) => {\r\n      state.listFormData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    fetchList: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.listFormData.page = action.payload.page || state.listFormData.page;\r\n      return state;\r\n    },\r\n    successList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.list = action.payload.data.dbData;\r\n      state.listCount = action.payload.data.dbCount;\r\n      return state;\r\n    },\r\n    failedList: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      state.list = [];\r\n      state.listCount = 0;\r\n      return state;\r\n    },\r\n    initFormData: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    handleFormDataChange: (state, action) => {\r\n      state.formData[action.payload.key] = action.payload.value;\r\n      return state;\r\n    },\r\n    handleFormValidation: (state, action) => {\r\n      if (!action.payload.value) {\r\n        let fVal = { ...state.formValidation };\r\n        delete fVal[action.payload.key];\r\n        state.formValidation = fVal;\r\n      } else {\r\n        state.formValidation[action.payload.key] = action.payload.value;\r\n      }\r\n      return state;\r\n    },\r\n    storeData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    readData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      state.formData = initialState.formData;\r\n      return state;\r\n    },\r\n    updateData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    deleteData: (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n      return state;\r\n    },\r\n    success: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = false;\r\n      state.formData = { ...initialState.formData, ...action.payload.data };\r\n      return state;\r\n    },\r\n    failed: (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleListFormDataChange,\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n  initFormData,\r\n  handleFormDataChange,\r\n  handleFormValidation,\r\n  storeData,\r\n  readData,\r\n  updateData,\r\n  deleteData,\r\n  success,\r\n  failed,\r\n} = rawMaterialSlice.actions;\r\n\r\nexport const selectRawMaterial = (state) => state.rawMaterial;\r\n\r\nexport default rawMaterialSlice.reducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport toast from \"./Function/Toast\";\r\nimport login from \"./Page/Login\";\r\nimport identity, { flush } from \"./Identity\";\r\nimport profile from \"./Page/Profile\";\r\nimport dashboard from \"./Page/Dashboard\";\r\nimport person from \"./Page/Person\";\r\nimport tree from \"./Page/Tree\";\r\nimport zone from \"./Page/Zone\";\r\nimport sector from \"./Page/Sector\";\r\nimport illness from \"./Page/Illness\";\r\nimport rawMaterial from \"./Page/RawMaterial\";\r\nimport agriculturalPractice from \"./Page/AgriculturalPractice\";\r\nimport workPlan from \"./Page/WorkPlan\";\r\nimport purchase from \"./Page/Purchase\";\r\nimport expertMonitor from \"./Page/ExpertMonitor\";\r\nimport workCertificate from \"./Page/WorkCertificate\";\r\n\r\nconst allReducers = combineReducers({\r\n  toast,\r\n  login,\r\n  identity,\r\n  profile,\r\n  dashboard,\r\n  person,\r\n  tree,\r\n  zone,\r\n  sector,\r\n  illness,\r\n  rawMaterial,\r\n  agriculturalPractice,\r\n  workPlan,\r\n  purchase,\r\n  expertMonitor,\r\n  workCertificate,\r\n});\r\n\r\nconst rootReducers = (state, action) => {\r\n  if (action.type === flush().type) {\r\n    state = undefined;\r\n  }\r\n  return allReducers(state, action);\r\n};\r\n\r\nexport default rootReducers;\r\n","import { authCheck, fetchAuthToken } from \"./authHelper\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { flush } from \"../store/redux/Identity\";\r\n\r\nexport const buildFormData = (formData, data, parentKey) => {\r\n  if (\r\n    data &&\r\n    typeof data === \"object\" &&\r\n    !(data instanceof Date) &&\r\n    !(data instanceof File)\r\n  ) {\r\n    Object.keys(data).forEach((key) => {\r\n      buildFormData(\r\n        formData,\r\n        data[key],\r\n        parentKey ? `${parentKey}[${key}]` : key\r\n      );\r\n    });\r\n  } else {\r\n    const value = data == null ? \"\" : data;\r\n\r\n    formData.append(parentKey, value);\r\n  }\r\n};\r\n\r\nexport const generateRequestHeader = (customHeader = {}) => {\r\n  let headerObj = {\r\n    Accept: \"application/json\",\r\n  };\r\n\r\n  if (customHeader) {\r\n    headerObj = { ...headerObj, ...customHeader };\r\n  }\r\n\r\n  const header = new Headers(headerObj);\r\n\r\n  if (authCheck()) {\r\n    header.append(\"Authorization\", fetchAuthToken());\r\n  }\r\n\r\n  return header;\r\n};\r\n\r\nexport const makeRequest = (\r\n  requestUrl,\r\n  requestType = \"GET\",\r\n  requestBody = null,\r\n  requestHeader = null\r\n) => {\r\n  const fetchOptions = {\r\n    method: requestType,\r\n    headers: generateRequestHeader(),\r\n  };\r\n\r\n  if (requestHeader) {\r\n    fetchOptions.headers = generateRequestHeader(requestHeader);\r\n  }\r\n\r\n  if (requestBody) {\r\n    if (requestBody instanceof FormData) {\r\n      fetchOptions.body = requestBody;\r\n    } else if (typeof requestBody === \"object\") {\r\n      if (Object.keys(requestBody).length > 0) {\r\n        const formData = new FormData();\r\n        // buildFormData(formData, requestBody);\r\n        for (const requestBodyKey in requestBody) {\r\n          if (Array.isArray(requestBody[requestBodyKey])) {\r\n            for (let i = 0; i < requestBody[requestBodyKey].length; i++) {\r\n              if (typeof requestBody[requestBodyKey][i] === \"object\") {\r\n                formData.append(\r\n                  requestBodyKey,\r\n                  JSON.stringify(requestBody[requestBodyKey][i])\r\n                );\r\n              } else {\r\n                formData.append(requestBodyKey, requestBody[requestBodyKey][i]);\r\n              }\r\n            }\r\n          } else {\r\n            formData.append(requestBodyKey, requestBody[requestBodyKey]);\r\n          }\r\n        }\r\n        fetchOptions.body = formData;\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Promise((resolve, reject) =>\r\n    fetch(requestUrl, fetchOptions)\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        switch (responseData.code) {\r\n          case \"AUF\":\r\n            useDispatch()(flush());\r\n            return resolve({\r\n              status: \"fail\",\r\n              code: \"AUF\",\r\n              message: \"You have been logged out!\",\r\n              errors: {},\r\n            });\r\n          default:\r\n            return resolve(responseData);\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        resolve({\r\n          status: \"fail\",\r\n          code: \"ERR\",\r\n          message: \"Something went wrong!\",\r\n          errors: {},\r\n        })\r\n      )\r\n  );\r\n};\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { attempt, failed, success } from \"../../redux/Page/Login\";\r\nimport { populate } from \"../../redux/Identity\";\r\nimport { makeRequest } from \"../../../utils/requestHelper\";\r\nimport { login } from \"../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${login}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: {} });\r\n\r\n    const userStoreData = { ...json.data };\r\n    delete userStoreData.access_token;\r\n    localStorage.setItem(\r\n      process.env.REACT_APP_AUTH_KEY_NAME,\r\n      json.data.access_token\r\n    );\r\n    yield put({ type: populate().type, payload: { data: userStoreData } });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(attempt().type, triggerApi);\r\n}\r\n","export const login = \"/login\";\r\n\r\nexport const identity = \"/identity\";\r\nexport const updateProfile = \"/update-profile\";\r\nexport const changePassword = \"/change-password\";\r\n\r\nexport const dashboardData = \"/dashboard/data\";\r\n\r\nexport const personCreate = \"/person/store\";\r\nexport const personRead = \"/person/_ID_/read\";\r\nexport const personUpdate = \"/person/_ID_/update\";\r\nexport const personDelete = \"/person/_ID_/delete\";\r\nexport const personList = \"/persons\";\r\n\r\nexport const treeCreate = \"/tree/store\";\r\nexport const treeRead = \"/tree/_ID_/read\";\r\nexport const treeUpdate = \"/tree/_ID_/update\";\r\nexport const treeDelete = \"/tree/_ID_/delete\";\r\nexport const treeList = \"/trees\";\r\n\r\nexport const zoneCreate = \"/zone/store\";\r\nexport const zoneRead = \"/zone/_ID_/read\";\r\nexport const zoneUpdate = \"/zone/_ID_/update\";\r\nexport const zoneDelete = \"/zone/_ID_/delete\";\r\nexport const zoneList = \"/zones\";\r\n\r\nexport const sectorCreate = \"/sector/store\";\r\nexport const sectorRead = \"/sector/_ID_/read\";\r\nexport const sectorUpdate = \"/sector/_ID_/update\";\r\nexport const sectorDelete = \"/sector/_ID_/delete\";\r\nexport const sectorList = \"/sectors\";\r\n\r\nexport const illnessCreate = \"/illness/store\";\r\nexport const illnessRead = \"/illness/_ID_/read\";\r\nexport const illnessUpdate = \"/illness/_ID_/update\";\r\nexport const illnessDelete = \"/illness/_ID_/delete\";\r\nexport const illnessList = \"/illnesses\";\r\n\r\nexport const rawMaterialCreate = \"/raw-material/store\";\r\nexport const rawMaterialRead = \"/raw-material/_ID_/read\";\r\nexport const rawMaterialUpdate = \"/raw-material/_ID_/update\";\r\nexport const rawMaterialDelete = \"/raw-material/_ID_/delete\";\r\nexport const rawMaterialList = \"/raw-materials\";\r\n\r\nexport const agriculturalPracticeCreate = \"/agricultural-practice/store\";\r\nexport const agriculturalPracticeRead = \"/agricultural-practice/_ID_/read\";\r\nexport const agriculturalPracticeUpdate = \"/agricultural-practice/_ID_/update\";\r\nexport const agriculturalPracticeDelete = \"/agricultural-practice/_ID_/delete\";\r\nexport const agriculturalPracticeList = \"/agricultural-practices\";\r\n\r\nexport const workPlanCreate = \"/work-plan/store\";\r\nexport const workPlanRead = \"/work-plan/_ID_/read\";\r\nexport const workPlanUpdate = \"/work-plan/_ID_/update\";\r\nexport const workPlanDelete = \"/work-plan/_ID_/delete\";\r\nexport const workPlanList = \"/work-plans\";\r\n\r\nexport const purchaseCreate = \"/purchase/store\";\r\nexport const purchaseRead = \"/purchase/_ID_/read\";\r\nexport const purchaseUpdate = \"/purchase/_ID_/update\";\r\nexport const purchaseDelete = \"/purchase/_ID_/delete\";\r\nexport const purchaseList = \"/purchases\";\r\n\r\nexport const expertMonitorCreate = \"/tree-illness/store\";\r\nexport const expertMonitorRead = \"/tree-illness/_ID_/read\";\r\nexport const expertMonitorUpdate = \"/tree-illness/_ID_/update\";\r\nexport const expertMonitorDelete = \"/tree-illness/_ID_/delete\";\r\nexport const expertMonitorList = \"/tree-illnesses\";\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport { flush, populate, sync } from \"../../redux/Identity\";\r\nimport { readData, success, failed } from \"../../redux/Page/Profile\";\r\nimport { makeRequest } from \"../../../utils/requestHelper\";\r\nimport { identity } from \"../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(`${process.env.REACT_APP_API_URL}${identity}`);\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: populate().type, payload: json }),\r\n      put({ type: success().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield all([\r\n      put({ type: flush().type, payload: json }),\r\n      put({ type: failed().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest([sync().type, readData().type], triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, changePassword, success } from \"../../../redux/Page/Profile\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { changePassword as changePasswordApi } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${changePasswordApi}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(changePassword().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, updateData, success } from \"../../../redux/Page/Profile\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { updateProfile } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${updateProfile}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({ type: readData().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { attempt, failed, success } from \"../../redux/Page/Dashboard\";\r\nimport { makeRequest } from \"../../../utils/requestHelper\";\r\nimport { dashboardData } from \"../../../utils/apiConstants\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${dashboardData}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(attempt().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport { fetchList, successList, failedList } from \"../../../redux/Page/Person\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { personList } from \"../../../../utils/apiConstants\";\r\nimport {\r\n  fetchAllCollaborators,\r\n  setAllCollaborators,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${personList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successList().type, payload: json }),\r\n      put({ type: setAllCollaborators().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({ type: failedList().type, payload: json }),\r\n      put({ type: setAllCollaborators().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [fetchList().type, fetchAllCollaborators().type],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { storeData, success, failed } from \"../../../redux/Page/Person\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { personCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${personCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Person\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { personRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${personRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, updateData } from \"../../../redux/Page/Person\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { personUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${personUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, deleteData } from \"../../../redux/Page/Person\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { personDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${personDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Tree\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { treeList } from \"../../../../utils/apiConstants\";\r\nimport {\r\n  fetchAllTrees as fetchAllTreesExpertMonitor,\r\n  setAllTrees as setAllTreesExpertMonitor,\r\n} from \"../../../redux/Page/ExpertMonitor\";\r\nimport {\r\n  fetchAllTrees as fetchAllTreesSector,\r\n  setAllTrees as setAllTreesSector,\r\n} from \"../../../redux/Page/Sector\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  // console.log(\"queryString: \", queryString)\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${treeList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successList().type, payload: json }),\r\n      put({ type: setAllTreesExpertMonitor().type, payload: json }),\r\n      put({ type: setAllTreesSector().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield all([\r\n      put({ type: failedList().type, payload: json }),\r\n      put({ type: setAllTreesExpertMonitor().type, payload: json }),\r\n      put({ type: setAllTreesSector().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [\r\n      fetchList().type,\r\n      fetchAllTreesExpertMonitor().type,\r\n      fetchAllTreesSector().type,\r\n    ],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/Tree\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { treeCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${treeCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Tree\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { treeRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${treeRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, updateData } from \"../../../redux/Page/Tree\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { treeUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${treeUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload.formData\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { deleteData, failed, success } from \"../../../redux/Page/Tree\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { treeDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${treeDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Zone\";\r\nimport {\r\n  fetchAllZones as fetchAllZonesForTree,\r\n  setAllZones as setAllZonesForTree,\r\n} from \"../../../redux/Page/Tree\";\r\nimport {\r\n  fetchAllZones as fetchAllZonesForWorkPlan,\r\n  setAllZones as setAllZonesForWorkPlan,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport {\r\n  fetchAllZones as fetchAllZonesForWorkCertificate,\r\n  setAllZones as setAllZonesForWorkCertificate,\r\n} from \"../../../redux/Page/WorkCertificate\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { zoneList } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${zoneList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successList().type, payload: json }),\r\n      put({ type: setAllZonesForTree().type, payload: json }),\r\n      put({ type: setAllZonesForWorkPlan().type, payload: json }),\r\n      put({ type: setAllZonesForWorkCertificate().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({ type: failedList().type, payload: json }),\r\n      put({ type: setAllZonesForTree().type, payload: { data: [] } }),\r\n      put({ type: setAllZonesForWorkPlan().type, payload: json }),\r\n      put({ type: setAllZonesForWorkCertificate().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [\r\n      fetchList().type,\r\n      fetchAllZonesForTree().type,\r\n      fetchAllZonesForWorkPlan().type,\r\n      fetchAllZonesForWorkCertificate().type,\r\n    ],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/Zone\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { zoneCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${zoneCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Zone\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { zoneRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${zoneRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, updateData, success } from \"../../../redux/Page/Zone\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { zoneUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${zoneUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, deleteData, success } from \"../../../redux/Page/Zone\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { zoneDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${zoneDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Sector\";\r\nimport {\r\n  setAllSectors as setAllSectorsForTree,\r\n  fetchAllSectors as fetchAllSectorsForTree,\r\n} from \"../../../redux/Page/Tree\";\r\nimport {\r\n  setAllSectors as setAllSectorsForWorkPlan,\r\n  fetchAllSectors as fetchAllSectorsForWorkPlan,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport {\r\n  setAllSectors as setAllSectorsForWorkCertificate,\r\n  fetchAllSectors as fetchAllSectorsForWorkCertificate,\r\n} from \"../../../redux/Page/WorkCertificate\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { sectorList } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${sectorList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successList().type, payload: json }),\r\n      put({ type: setAllSectorsForTree().type, payload: json }),\r\n      put({ type: setAllSectorsForWorkPlan().type, payload: json }),\r\n      put({ type: setAllSectorsForWorkCertificate().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({ type: failedList().type, payload: json }),\r\n      put({\r\n        type: setAllSectorsForTree().type,\r\n        payload: { data: { dbData: [] } },\r\n      }),\r\n      put({ type: setAllSectorsForWorkPlan().type, payload: { data: json } }),\r\n      put({\r\n        type: setAllSectorsForWorkCertificate().type,\r\n        payload: { data: json },\r\n      }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [\r\n      fetchList().type,\r\n      fetchAllSectorsForTree().type,\r\n      fetchAllSectorsForWorkPlan().type,\r\n      fetchAllSectorsForWorkCertificate().type,\r\n    ],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/Sector\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { sectorCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${sectorCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Sector\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { sectorRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${sectorRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, updateData, success } from \"../../../redux/Page/Sector\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { sectorUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${sectorUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, deleteData, success } from \"../../../redux/Page/Sector\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { sectorDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${sectorDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  fetchList,\r\n  successList,\r\n  failedList,\r\n} from \"../../../redux/Page/Illness\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { illnessList } from \"../../../../utils/apiConstants\";\r\nimport {\r\n  fetchAllIllnesses as fetchAllIllnessesExpertMonitor,\r\n  setAllIllnesses as setAllIllnessesExpertMonitor,\r\n} from \"../../../redux/Page/ExpertMonitor\";\r\nimport {\r\n  fetchAllIllnesses as fetchAllIllnessesSector,\r\n  setAllIllnesses as setAllIllnessesSector,\r\n} from \"../../../redux/Page/Sector\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${illnessList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: successList().type, payload: json });\r\n    yield put({ type: setAllIllnessesExpertMonitor().type, payload: json });\r\n    yield put({ type: setAllIllnessesSector().type, payload: json });\r\n  } else {\r\n    yield put({ type: failedList().type, payload: json });\r\n    yield put({ type: setAllIllnessesExpertMonitor().type, payload: json });\r\n    yield put({ type: setAllIllnessesSector().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [\r\n      fetchList().type,\r\n      fetchAllIllnessesExpertMonitor().type,\r\n      fetchAllIllnessesSector().type,\r\n    ],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { storeData, success, failed } from \"../../../redux/Page/Illness\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { illnessCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${illnessCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Illness\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { illnessRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${illnessRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, updateData } from \"../../../redux/Page/Illness\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { illnessUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${illnessUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload.formData\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, deleteData } from \"../../../redux/Page/Illness\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { illnessDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${illnessDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failedList,\r\n  fetchList,\r\n  successList,\r\n} from \"../../../redux/Page/RawMaterial\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { rawMaterialList } from \"../../../../utils/apiConstants\";\r\nimport {\r\n  fetchAllRawMaterials as fetchAllRawMaterialsForAgriculturalPractice,\r\n  setAllRawMaterials as setAllRawMaterialsForAgriculturalPractice,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport {\r\n  fetchAllRawMaterials as fetchAllRawMaterialsForPurchase,\r\n  setAllRawMaterials as setAllRawMaterialsForPurchase,\r\n} from \"../../../redux/Page/Purchase\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${rawMaterialList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: successList().type, payload: json });\r\n    yield put({\r\n      type: setAllRawMaterialsForAgriculturalPractice().type,\r\n      payload: json,\r\n    });\r\n    yield put({ type: setAllRawMaterialsForPurchase().type, payload: json });\r\n  } else {\r\n    yield put({ type: failedList().type, payload: json });\r\n    yield put({\r\n      type: setAllRawMaterialsForAgriculturalPractice().type,\r\n      payload: { data: { dbData: [] } },\r\n    });\r\n    yield put({\r\n      type: setAllRawMaterialsForPurchase().type,\r\n      payload: { data: { dbData: [] } },\r\n    });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [\r\n      fetchList().type,\r\n      fetchAllRawMaterialsForAgriculturalPractice().type,\r\n      fetchAllRawMaterialsForPurchase().type,\r\n    ],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { storeData, success, failed } from \"../../../redux/Page/RawMaterial\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { rawMaterialCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${rawMaterialCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/RawMaterial\";\r\nimport {\r\n  successDefaultFolialDrenche as agriculturalPracticeSuccessDefaultFolialDrenche,\r\n  failedDefaultFolialDrenche as agriculturalPracticeFailedDefaultFolialDrenche,\r\n  initFormData as agriculturalPracticeInitFormData,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { rawMaterialRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${rawMaterialRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    if (\r\n      action.payload.actionType &&\r\n      action.payload.actionType === \"loadDefaultFolialDrenche\"\r\n    ) {\r\n      yield put({\r\n        type: agriculturalPracticeSuccessDefaultFolialDrenche().type,\r\n        payload: json,\r\n      });\r\n    }\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    if (\r\n      action.payload.actionType &&\r\n      action.payload.actionType === \"loadDefaultFolialDrenche\"\r\n    ) {\r\n      yield put({\r\n        type: agriculturalPracticeFailedDefaultFolialDrenche().type,\r\n        payload: json,\r\n      });\r\n    }\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [readData().type, agriculturalPracticeInitFormData().type],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, updateData } from \"../../../redux/Page/RawMaterial\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { rawMaterialUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${rawMaterialUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload.formData\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, success, deleteData } from \"../../../redux/Page/RawMaterial\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { rawMaterialDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${rawMaterialDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failedList,\r\n  fetchList,\r\n  successList,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { agriculturalPracticeList } from \"../../../../utils/apiConstants\";\r\nimport {\r\n  fetchAllAgriculturalPractices,\r\n  setAllAgriculturalPractices,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successList().type, payload: json }),\r\n      put({ type: setAllAgriculturalPractices().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({\r\n        type: setToastData().type,\r\n        payload: { type: \"error\", message: json.message },\r\n      }),\r\n      put({ type: failedList().type, payload: json }),\r\n      put({ type: setAllAgriculturalPractices().type, payload: json }),\r\n    ]);\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [fetchList().type, fetchAllAgriculturalPractices().type],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failed,\r\n  storeData,\r\n  success,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { agriculturalPracticeCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failed,\r\n  readData,\r\n  success,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { agriculturalPracticeRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failed,\r\n  updateData,\r\n  success,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { agriculturalPracticeUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failed,\r\n  deleteData,\r\n  success,\r\n} from \"../../../redux/Page/AgriculturalPractice\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { agriculturalPracticeDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failedList as failedListWorkPlan,\r\n  fetchList as fetchListWorkPlan,\r\n  successList as successListWorkPlan,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport {\r\n  failedList as failedListWorkCertificate,\r\n  fetchList as fetchListWorkCertificate,\r\n  successList as successListWorkCertificate,\r\n} from \"../../../redux/Page/WorkCertificate\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { workPlanList } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in JSON.parse(JSON.stringify(action.payload))) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${workPlanList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successListWorkPlan().type, payload: json }),\r\n      put({ type: successListWorkCertificate().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({ type: failedListWorkPlan().type, payload: json }),\r\n      put({ type: failedListWorkCertificate().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [fetchListWorkPlan().type, fetchListWorkCertificate().type],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/WorkPlan\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { workPlanCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${workPlanCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failed as failedWorkPlan,\r\n  readData as readDataWorkPlan,\r\n  success as successWorkPlan,\r\n} from \"../../../redux/Page/WorkPlan\";\r\nimport {\r\n  failed as failedWorkCertificate,\r\n  readData as readDataWorkCertificate,\r\n  success as successWorkCertificate,\r\n} from \"../../../redux/Page/WorkCertificate\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { workPlanRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${workPlanRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([\r\n      put({ type: successWorkPlan().type, payload: json }),\r\n      put({ type: successWorkCertificate().type, payload: json }),\r\n    ]);\r\n  } else {\r\n    yield all([\r\n      put({ type: failedWorkPlan().type, payload: json }),\r\n      put({ type: failedWorkCertificate().type, payload: json }),\r\n    ]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(\r\n    [readDataWorkPlan().type, readDataWorkCertificate().type],\r\n    triggerApi\r\n  );\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, updateData, success } from \"../../../redux/Page/WorkPlan\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { workPlanUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${workPlanUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, deleteData, success } from \"../../../redux/Page/WorkPlan\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { workPlanDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${workPlanDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failedList,\r\n  fetchList,\r\n  successList,\r\n} from \"../../../redux/Page/Purchase\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { purchaseList } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${purchaseList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([put({ type: successList().type, payload: json })]);\r\n  } else {\r\n    yield all([put({ type: failedList().type, payload: json })]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest([fetchList().type], triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/Purchase\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { purchaseCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${purchaseCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/Purchase\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { purchaseRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${purchaseRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, updateData, success } from \"../../../redux/Page/Purchase\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { purchaseUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${purchaseUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, deleteData, success } from \"../../../redux/Page/Purchase\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { purchaseDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${purchaseDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { all, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  failedList,\r\n  fetchList,\r\n  successList,\r\n} from \"../../../redux/Page/ExpertMonitor\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { expertMonitorList } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  let queryString = \"\";\r\n  if (action.payload) {\r\n    queryString += \"?\";\r\n    for (const property in action.payload) {\r\n      queryString += `${property}=${action.payload[property]}&`;\r\n    }\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${expertMonitorList}${queryString}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield all([put({ type: successList().type, payload: json })]);\r\n  } else {\r\n    yield all([put({ type: failedList().type, payload: json })]);\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest([fetchList().type], triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, storeData, success } from \"../../../redux/Page/ExpertMonitor\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { expertMonitorCreate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${expertMonitorCreate}`,\r\n    \"POST\",\r\n    action.payload\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(storeData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, readData, success } from \"../../../redux/Page/ExpertMonitor\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { expertMonitorRead } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${expertMonitorRead.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(readData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, updateData, success } from \"../../../redux/Page/ExpertMonitor\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { expertMonitorUpdate } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${expertMonitorUpdate.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"PUT\",\r\n    action.payload.formData\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(updateData().type, triggerApi);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { failed, deleteData, success } from \"../../../redux/Page/ExpertMonitor\";\r\nimport { makeRequest } from \"../../../../utils/requestHelper\";\r\nimport { expertMonitorDelete } from \"../../../../utils/apiConstants\";\r\nimport { setToastData } from \"../../../redux/Function/Toast\";\r\n\r\nfunction* triggerApi(action) {\r\n  const json = yield makeRequest(\r\n    `${process.env.REACT_APP_API_URL}${expertMonitorDelete.replace(\r\n      \"_ID_\",\r\n      action.payload.id\r\n    )}`,\r\n    \"DELETE\"\r\n  );\r\n\r\n  if (json.status === \"success\") {\r\n    yield put({ type: success().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"success\", message: json.message },\r\n    });\r\n  } else {\r\n    yield put({ type: failed().type, payload: json });\r\n    yield put({\r\n      type: setToastData().type,\r\n      payload: { type: \"error\", message: json.message },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(deleteData().type, triggerApi);\r\n}\r\n","import { select, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  setToastData,\r\n  resetToastData,\r\n  selectToast,\r\n} from \"../../redux/Function/Toast\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction* triggerFunction(action) {\r\n  const state = yield select(selectToast);\r\n  const toastSettings = {\r\n    ...state.toastSettings,\r\n    onClose: () => put({ type: resetToastData().type, payload: {} }),\r\n  };\r\n\r\n  if (action.payload.message && action.payload.message !== \"\") {\r\n    switch (state.type) {\r\n      case \"info\":\r\n        toast.info(action.payload.message, toastSettings);\r\n        break;\r\n      case \"success\":\r\n        toast.success(action.payload.message, toastSettings);\r\n        break;\r\n      case \"warn\":\r\n        toast.warn(action.payload.message, toastSettings);\r\n        break;\r\n      case \"error\":\r\n        toast.error(action.payload.message, toastSettings);\r\n        break;\r\n      default:\r\n        toast(action.payload.message, toastSettings);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(setToastData().type, triggerFunction);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\n\r\nimport loginActionWatcher from \"./Api/Login\";\r\nimport identityActionWatcher from \"./Api/Identity\";\r\nimport changePasswordActionWatcher from \"./Api/Profile/ChangePassword\";\r\nimport updateProfileActionWatcher from \"./Api/Profile/UpdateProfile\";\r\nimport dashboardActionWatcher from \"./Api/DashboardData\";\r\n\r\nimport personListActionWatcher from \"./Api/Person/List\";\r\nimport personCreateActionWatcher from \"./Api/Person/Create\";\r\nimport personReadActionWatcher from \"./Api/Person/Read\";\r\nimport personUpdateActionWatcher from \"./Api/Person/Update\";\r\nimport personDeleteActionWatcher from \"./Api/Person/Delete\";\r\n\r\nimport treeListActionWatcher from \"./Api/Tree/List\";\r\nimport treeCreateActionWatcher from \"./Api/Tree/Create\";\r\nimport treeReadActionWatcher from \"./Api/Tree/Read\";\r\nimport treeUpdateActionWatcher from \"./Api/Tree/Update\";\r\nimport treeDeleteActionWatcher from \"./Api/Tree/Delete\";\r\n\r\nimport zoneListActionWatcher from \"./Api/Zone/List\";\r\nimport zoneCreateActionWatcher from \"./Api/Zone/Create\";\r\nimport zoneReadActionWatcher from \"./Api/Zone/Read\";\r\nimport zoneUpdateActionWatcher from \"./Api/Zone/Update\";\r\nimport zoneDeleteActionWatcher from \"./Api/Zone/Delete\";\r\n\r\nimport sectorListActionWatcher from \"./Api/Sector/List\";\r\nimport sectorCreateActionWatcher from \"./Api/Sector/Create\";\r\nimport sectorReadActionWatcher from \"./Api/Sector/Read\";\r\nimport sectorUpdateActionWatcher from \"./Api/Sector/Update\";\r\nimport sectorDeleteActionWatcher from \"./Api/Sector/Delete\";\r\n\r\nimport illnessListActionWatcher from \"./Api/Illness/List\";\r\nimport illnessCreateActionWatcher from \"./Api/Illness/Create\";\r\nimport illnessReadActionWatcher from \"./Api/Illness/Read\";\r\nimport illnessUpdateActionWatcher from \"./Api/Illness/Update\";\r\nimport illnessDeleteActionWatcher from \"./Api/Illness/Delete\";\r\n\r\nimport rawMaterialListActionWatcher from \"./Api/RawMaterial/List\";\r\nimport rawMaterialCreateActionWatcher from \"./Api/RawMaterial/Create\";\r\nimport rawMaterialReadActionWatcher from \"./Api/RawMaterial/Read\";\r\nimport rawMaterialUpdateActionWatcher from \"./Api/RawMaterial/Update\";\r\nimport rawMaterialDeleteActionWatcher from \"./Api/RawMaterial/Delete\";\r\n\r\nimport agriculturalPracticeListActionWatcher from \"./Api/AgriculturalPractice/List\";\r\nimport agriculturalPracticeCreateActionWatcher from \"./Api/AgriculturalPractice/Create\";\r\nimport agriculturalPracticeReadActionWatcher from \"./Api/AgriculturalPractice/Read\";\r\nimport agriculturalPracticeUpdateActionWatcher from \"./Api/AgriculturalPractice/Update\";\r\nimport agriculturalPracticeDeleteActionWatcher from \"./Api/AgriculturalPractice/Delete\";\r\n\r\nimport workPlanListActionWatcher from \"./Api/WorkPlan/List\";\r\nimport workPlanCreateActionWatcher from \"./Api/WorkPlan/Create\";\r\nimport workPlanReadActionWatcher from \"./Api/WorkPlan/Read\";\r\nimport workPlanUpdateActionWatcher from \"./Api/WorkPlan/Update\";\r\nimport workPlanDeleteActionWatcher from \"./Api/WorkPlan/Delete\";\r\n\r\nimport purchaseListActionWatcher from \"./Api/Purchase/List\";\r\nimport purchaseCreateActionWatcher from \"./Api/Purchase/Create\";\r\nimport purchaseReadActionWatcher from \"./Api/Purchase/Read\";\r\nimport purchaseUpdateActionWatcher from \"./Api/Purchase/Update\";\r\nimport purchaseDeleteActionWatcher from \"./Api/Purchase/Delete\";\r\n\r\nimport expertMonitorListActionWatcher from \"./Api/ExpertMonitor/List\";\r\nimport expertMonitorCreateActionWatcher from \"./Api/ExpertMonitor/Create\";\r\nimport expertMonitorReadActionWatcher from \"./Api/ExpertMonitor/Read\";\r\nimport expertMonitorUpdateActionWatcher from \"./Api/ExpertMonitor/Update\";\r\nimport expertMonitorDeleteActionWatcher from \"./Api/ExpertMonitor/Delete\";\r\n\r\nimport toastActionWatcher from \"./Function/Toast\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    loginActionWatcher(),\r\n\r\n    identityActionWatcher(),\r\n    changePasswordActionWatcher(),\r\n    updateProfileActionWatcher(),\r\n\r\n    dashboardActionWatcher(),\r\n\r\n    personListActionWatcher(),\r\n    personCreateActionWatcher(),\r\n    personReadActionWatcher(),\r\n    personUpdateActionWatcher(),\r\n    personDeleteActionWatcher(),\r\n\r\n    treeListActionWatcher(),\r\n    treeCreateActionWatcher(),\r\n    treeReadActionWatcher(),\r\n    treeUpdateActionWatcher(),\r\n    treeDeleteActionWatcher(),\r\n\r\n    zoneListActionWatcher(),\r\n    zoneCreateActionWatcher(),\r\n    zoneReadActionWatcher(),\r\n    zoneUpdateActionWatcher(),\r\n    zoneDeleteActionWatcher(),\r\n\r\n    sectorListActionWatcher(),\r\n    sectorCreateActionWatcher(),\r\n    sectorReadActionWatcher(),\r\n    sectorUpdateActionWatcher(),\r\n    sectorDeleteActionWatcher(),\r\n\r\n    illnessListActionWatcher(),\r\n    illnessCreateActionWatcher(),\r\n    illnessReadActionWatcher(),\r\n    illnessUpdateActionWatcher(),\r\n    illnessDeleteActionWatcher(),\r\n\r\n    rawMaterialListActionWatcher(),\r\n    rawMaterialCreateActionWatcher(),\r\n    rawMaterialReadActionWatcher(),\r\n    rawMaterialUpdateActionWatcher(),\r\n    rawMaterialDeleteActionWatcher(),\r\n\r\n    agriculturalPracticeListActionWatcher(),\r\n    agriculturalPracticeCreateActionWatcher(),\r\n    agriculturalPracticeReadActionWatcher(),\r\n    agriculturalPracticeUpdateActionWatcher(),\r\n    agriculturalPracticeDeleteActionWatcher(),\r\n\r\n    workPlanListActionWatcher(),\r\n    workPlanCreateActionWatcher(),\r\n    workPlanReadActionWatcher(),\r\n    workPlanUpdateActionWatcher(),\r\n    workPlanDeleteActionWatcher(),\r\n\r\n    purchaseListActionWatcher(),\r\n    purchaseCreateActionWatcher(),\r\n    purchaseReadActionWatcher(),\r\n    purchaseUpdateActionWatcher(),\r\n    purchaseDeleteActionWatcher(),\r\n\r\n    expertMonitorListActionWatcher(),\r\n    expertMonitorCreateActionWatcher(),\r\n    expertMonitorReadActionWatcher(),\r\n    expertMonitorUpdateActionWatcher(),\r\n    expertMonitorDeleteActionWatcher(),\r\n\r\n\r\n    toastActionWatcher()\r\n  ]);\r\n}\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./redux\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      thunk: false,\r\n      serializableCheck: false,\r\n    }),\r\n    sagaMiddleware,\r\n  ],\r\n});\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// console.log(store.getState(), 8888, leftMenu);\r\n// store.subscribe(() => {\r\n//     console.log(\"Action fired on Store!\", store.getState());\r\n// });\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./LeftSideBar.scss\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport pluralize from \"pluralize\";\r\nimport {\r\n  faCrosshairs,\r\n  faDesktop,\r\n  faFileAlt,\r\n  faFileInvoice,\r\n  faTree,\r\n  faUser,\r\n  faArrowAltCircleUp\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction LeftSideBar() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [sidebarLinks, setSideBarLinks] = useState([\r\n    {\r\n      name: \"Subscription\",\r\n      icon: faArrowAltCircleUp,\r\n      link: \"/subscription\",\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Manage Person\",\r\n      icon: faUser,\r\n      link: \"/persons\",\r\n      active: false,\r\n      \r\n    },\r\n    {\r\n      name: \"Manage Farms\",\r\n      icon: faTree,\r\n      link: \"/farms\",\r\n      active: false,\r\n    },\r\n    // {\r\n    //   name: \"Manage Sectors\",\r\n    //   icon: faClipboardList,\r\n    //   link: \"/sectors\",\r\n    //   active: false,\r\n      \r\n    // },\r\n    // {\r\n    //   name: \"Manage Zona\",\r\n    //   icon: faPaperPlane,\r\n    //   link: \"/zonas\",\r\n    //   active: false,\r\n    // },\r\n    \r\n    {\r\n      name: \"Reports\",\r\n      icon: faFileAlt,\r\n      link: \"/dashboard\",\r\n      active: false,\r\n      children: [\r\n        {\r\n          name: \"Work Certificate\",\r\n          icon: faFileInvoice,\r\n          link: \"/work-certificates\",\r\n          active: false,\r\n        },\r\n        {\r\n          name: \"ArcGis\",\r\n          icon: faCrosshairs,\r\n          link: \"/arcgis\",\r\n          active: false,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"PayRoll\",\r\n      icon: faDesktop,\r\n      link: \"/payroll\",\r\n      active: false,\r\n    },\r\n  ]);\r\n\r\n  const sidebarUpdate = (newLocation) => {\r\n    const sidebarLinksCopy = [...sidebarLinks];\r\n    sidebarLinks.forEach((data, index) => {\r\n      const parentRegex = new RegExp(\r\n        `(/${pluralize.singular(data.link.replace(\"/\", \"\"))})($|s|es|(/.*))`,\r\n        \"ig\"\r\n      );\r\n      let parentMatched = parentRegex.test(newLocation.pathname);\r\n      if (data.children) {\r\n        parentMatched = false;\r\n        data.children.forEach((subData, subIndex) => {\r\n          const childRegex = new RegExp(\r\n            `(/${pluralize.singular(\r\n              subData.link.replace(\"/\", \"\")\r\n            )})($|s|es|(/.*))`,\r\n            \"ig\"\r\n          );\r\n          const childMatched = childRegex.test(newLocation.pathname);\r\n          sidebarLinksCopy[index].children[subIndex].active = childMatched;\r\n          if (childMatched === true) {\r\n            parentMatched = childMatched;\r\n          }\r\n        });\r\n      }\r\n      sidebarLinksCopy[index].active = parentMatched;\r\n    });\r\n    setSideBarLinks(sidebarLinksCopy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sidebarUpdate(location);\r\n    let unListen = history.listen((newLocation) => sidebarUpdate(newLocation));\r\n\r\n    return () => {\r\n      unListen();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <aside\r\n      id=\"leftSideBarMenu\"\r\n      className=\"col-md-3 col-lg-2 d-md-block collapse bg-app sidebar\"\r\n    >\r\n      <nav className=\"sidebar-sticky\">\r\n        <ul className=\"nav flex-column\" id=\"accordionFlushMenu\">\r\n          {sidebarLinks.map((data, index) => (\r\n            <li key={index} className=\"nav-item\">\r\n              {data.children && data.children.length > 0 ? (\r\n                <div className=\"accordion accordion-flush\">\r\n                  <div className={`accordion-item`}>\r\n                    <h2\r\n                      className={`accordion-header`}\r\n                      id={`leftMenu-flush-heading${index}`}\r\n                    >\r\n                      <button\r\n                        className={`accordion-button bg-app nav-link ${\r\n                          data.active === true ? \"active\" : \"collapsed\"\r\n                        }`}\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target={`#leftMenu-flush-collapse${index}`}\r\n                        aria-expanded=\"false\"\r\n                        aria-controls={`#leftMenu-flush-collapse${index}`}\r\n                      >\r\n                        <span>\r\n                          <FontAwesomeIcon className=\"me-2\" icon={data.icon} />\r\n                        </span>\r\n                        {data.name}\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id={`leftMenu-flush-collapse${index}`}\r\n                      className={`bg-app accordion-collapse collapse ${\r\n                        data.active === true ? \"show\" : \"\"\r\n                      }`}\r\n                      aria-labelledby={`leftMenu-flush-heading${index}`}\r\n                      data-bs-parent=\"#accordionFlushMenu\"\r\n                    >\r\n                      <div className=\"accordion-body\">\r\n                        <ul className=\"nav flex-column\">\r\n                          {data.children.map((subData, subIndex) => (\r\n                            <li key={subIndex} className=\"nav-item\">\r\n                              <NavLink\r\n                                className={`nav-link`}\r\n                                aria-current=\"page\"\r\n                                activeClassName={`active`}\r\n                                isActive={() => subData.active}\r\n                                to={subData.link}\r\n                              >\r\n                                <span>\r\n                                  <FontAwesomeIcon\r\n                                    className=\"me-2\"\r\n                                    icon={subData.icon}\r\n                                  />\r\n                                </span>\r\n                                {subData.name}\r\n                              </NavLink>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <NavLink\r\n                  className={`nav-link`}\r\n                  aria-current=\"page\"\r\n                  to={data.link}\r\n                  activeClassName=\"active\"\r\n                  isActive={() => data.active}\r\n                >\r\n                  <span>\r\n                    <FontAwesomeIcon className=\"me-2\" icon={data.icon} />\r\n                  </span>\r\n                  {data.name}\r\n                </NavLink>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default LeftSideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Collapse } from \"bootstrap\";\r\nimport \"./Header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { flush, selectIdentity } from \"../../../store/redux/Identity\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Header() {\r\n  const store = useSelector(selectIdentity);\r\n  const dispatch = useDispatch();\r\n  let [toggle, setToggle] = useState(false);\r\n\r\n  const _logout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(flush());\r\n  };\r\n\r\n  useEffect(() => {\r\n    let myCollapse = document.getElementById(\"leftSideBarMenu\");\r\n    let bsCollapse = new Collapse(myCollapse, { toggle: false });\r\n    toggle ? bsCollapse.show() : bsCollapse.hide();\r\n  });\r\n\r\n  return (\r\n    <header className=\"navbar navbar-expand-md navbar-light bg-light fixed-top shadow border-app p-0\">\r\n      {/*className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top flex-md-nowrap p-0 shadow border-app\">*/}\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"/\">\r\n          <img\r\n            className=\"rounded-circle me-2\"\r\n            src=\"/admin/image/logo512.png\"\r\n            height=\"32\"\r\n            width=\"32\"\r\n            alt=\"logo\"\r\n          />\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler d-md-none collapsed\"\r\n          type=\"button\"\r\n          aria-controls=\"leftSideBarMenu\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle left navigation\"\r\n          onClick={() => setToggle((currentToggle) => !currentToggle)}\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"navbar-nav\">\r\n          <div className=\"nav-item text-nowrap\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn btn-primary dropdown-toggle bg-light text-dark border-0\"\r\n                type=\"button\"\r\n                id=\"userMenu\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <img\r\n                  className=\"rounded-circle me-2\"\r\n                  src=\"/logo192_bck.png\"\r\n                  height=\"32\"\r\n                  width=\"32\"\r\n                  alt=\"user\"\r\n                />\r\n                <span>{`${store.userData.firstName} ${store.userData.lastName}`}</span>\r\n              </button>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"userMenu\">\r\n                <li>\r\n                  <NavLink className=\"dropdown-item\" to=\"/profile/edit\">\r\n                    Edit Profile\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink className=\"dropdown-item\" to=\"/change-password\">\r\n                    Change Password\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <button className=\"dropdown-item btn btn-link\" onClick={_logout}>\r\n                    Logout\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\n// Main Footer\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer offset-md-3 offset-lg-2 mt-auto py-3 bg-light shadow border-app fixed-bottom\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <strong>\r\n              Copyright &copy; 2014-{new Date().getFullYear()}{\" \"}\r\n              <a href=\"/\">El Cateo</a>.\r\n            </strong>{\" \"}\r\n            All rights reserved.\r\n          </div>\r\n\r\n          <div className=\"col-6 text-end d-none d-sm-inline-block\">\r\n            <b>Version</b> 1.1.0\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdentity, sync } from \"../../store/redux/Identity\";\r\nimport \"./AuthLayout.scss\";\r\nimport LeftSideBar from \"../../components/layout/leftsidebar/LeftSideBar\";\r\nimport Header from \"../../components/layout/header/Header\";\r\nimport Footer from \"../../components/layout/footer/Footer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction AuthLayout({ children }) {\r\n  const store = useSelector(selectIdentity);\r\n  const dispatch = useDispatch();\r\n  let checkIdentity;\r\n\r\n  useEffect(() => {\r\n    dispatch(sync());\r\n    checkIdentity = setInterval(() => dispatch(sync()), 1200000);\r\n  }, []);\r\n\r\n  useEffect(() => () => clearInterval(checkIdentity), []);\r\n\r\n  return store.auth === false && store.loading === false ? (\r\n    <Redirect to=\"/login\" />\r\n  ) : (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <LeftSideBar />\r\n          <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-3 mb-5\">\r\n            {children}\r\n          </main>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthLayout;\r\n","import React from \"react\";\r\n\r\nfunction ManageFarmLayout({ children }) {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main className=\"ms-sm-auto px-md-3\">{children}</main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageFarmLayout;\r\n","import React, { lazy } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authCheck } from \"../utils/authHelper\";\r\nimport AuthLayout from \"../layout/AuthLayout\";\r\nimport ManageFarmLayout from \"../layout/ManageFarmLayout\";\r\n\r\nconst Dashboard = lazy(() => import(\"../pages/dashboard/Dashboard\"));\r\n\r\nconst Comingsoon = lazy(() => import(\"../pages/comingsoon/Comingsoon\"));\r\n\r\n//farms\r\nconst Farms = lazy(() => import(\"../pages/managefarms/list/List\"));\r\nconst AddFarms = lazy(() => import(\"../pages/managefarms/create/Create\"));\r\nconst ViewFarm = lazy(() => import(\"../pages/managefarms/view/View\"));\r\nconst EditFarm = lazy(() => import(\"../pages/managefarms/edit/Edit\"))\r\n\r\n//sectors\r\nconst Sectors = lazy(() => import(\"../pages/managesectors/list/List\"));\r\nconst ViewSector = lazy(() => import(\"../pages/managesectors/view/View\"));\r\nconst AddSector = lazy(() => import(\"../pages/managesectors/create/Create\"));\r\n\r\n//zonas\r\nconst Zonas = lazy(() => import(\"../pages/managezonas/list/List\"));\r\nconst Viewzonas = lazy(() => import(\"../pages/managezonas/view/View\"));\r\n\r\n//rawmaterials\r\nconst RawMaterials = lazy(() => import(\"../pages/managerawmaterails/list/List\"));\r\n\r\n//manage persons\r\nconst PersonList = lazy(() => import(\"../pages/managepersons/list/List\"));\r\nconst PersonView = lazy(() => import(\"../pages/managepersons/view/View\"));\r\nconst PersonCreate = lazy(() => import(\"../pages/managepersons/create/Create\"));\r\nconst PersonEdit = lazy(() => import(\"../pages/managepersons/edit/Edit\"));\r\n//others\r\nconst ChangePassword = lazy(() => import(\"../pages/profile/changePassword/ChangePassword\"));\r\nconst EditProfile = lazy(() => import(\"../pages/profile/editProfile/EditProfile\"));\r\n\r\nconst ArcGis = lazy(() => import(\"../pages/arcGis/ArcGis\"));\r\n\r\n// const PersonList = lazy(() => import(\"../pages/persons/list/List\"));\r\n// const PersonCreate = lazy(() => import(\"../pages/persons/create/Create\"));\r\n// const PersonEdit = lazy(() => import(\"../pages/persons/edit/Edit\"));\r\n// const PersonView = lazy(() => import(\"../pages/persons/view/View\"));\r\n\r\nconst TreeList = lazy(() => import(\"../pages/trees/list/List\"));\r\nconst TreeCreate = lazy(() => import(\"../pages/trees/create/Create\"));\r\nconst TreeEdit = lazy(() => import(\"../pages/trees/edit/Edit\"));\r\nconst TreeView = lazy(() => import(\"../pages/trees/view/View\"));\r\n\r\n// const ZoneList = lazy(() => import(\"../pages/zones/list/List\"));\r\n// const ZoneCreate = lazy(() => import(\"../pages/zones/create/Create\"));\r\n// const ZoneEdit = lazy(() => import(\"../pages/zones/edit/Edit\"));\r\n// const ZoneView = lazy(() => import(\"../pages/zones/view/View\"));\r\n\r\n// const SectorList = lazy(() => import(\"../pages/sectors/list/List\"));\r\n// const SectorCreate = lazy(() => import(\"../pages/sectors/create/Create\"));\r\n// const SectorEdit = lazy(() => import(\"../pages/sectors/edit/Edit\"));\r\n// const SectorView = lazy(() => import(\"../pages/sectors/view/View\"));\r\n\r\nconst IllnessList = lazy(() => import(\"../pages/illnesses/list/List\"));\r\nconst IllnessCreate = lazy(() => import(\"../pages/illnesses/create/Create\"));\r\nconst IllnessEdit = lazy(() => import(\"../pages/illnesses/edit/Edit\"));\r\nconst IllnessView = lazy(() => import(\"../pages/illnesses/view/View\"));\r\n\r\n// const RawMaterialList = lazy(() => import(\"../pages/rawMaterials/list/List\"));\r\n// const RawMaterialCreate = lazy(() => import(\"../pages/rawMaterials/create/Create\"));\r\n// const RawMaterialEdit = lazy(() => import(\"../pages/rawMaterials/edit/Edit\"));\r\n// const RawMaterialView = lazy(() => import(\"../pages/rawMaterials/view/View\"));\r\n\r\nconst AgriculturalPracticeList = lazy(() => import(\"../pages/agriculturalPractices/list/List\"));\r\nconst AgriculturalPracticeCreate = lazy(() => import(\"../pages/agriculturalPractices/create/Create\"));\r\nconst AgriculturalPracticeEdit = lazy(() => import(\"../pages/agriculturalPractices/edit/Edit\"));\r\nconst AgriculturalPracticeView = lazy(() => import(\"../pages/agriculturalPractices/view/View\"));\r\n\r\nconst WorkPlanList = lazy(() => import(\"../pages/workPlans/list/List\"));\r\nconst WorkPlanCreate = lazy(() => import(\"../pages/workPlans/create/Create\"));\r\nconst WorkPlanEdit = lazy(() => import(\"../pages/workPlans/edit/Edit\"));\r\nconst WorkPlanView = lazy(() => import(\"../pages/workPlans/view/View\"));\r\n\r\nconst PurchaseList = lazy(() => import(\"../pages/purchases/list/List\"));\r\nconst PurchaseCreate = lazy(() => import(\"../pages/purchases/create/Create\"));\r\nconst PurchaseEdit = lazy(() => import(\"../pages/purchases/edit/Edit\"));\r\nconst PurchaseView = lazy(() => import(\"../pages/purchases/view/View\"));\r\n\r\nconst ExpertMonitorList = lazy(() => import(\"../pages/expertMonitors/list/List\"));\r\nconst ExpertMonitorCreate = lazy(() => import(\"../pages/expertMonitors/create/Create\"));\r\nconst ExpertMonitorEdit = lazy(() => import(\"../pages/expertMonitors/edit/Edit\"));\r\nconst ExpertMonitorView = lazy(() => import(\"../pages/expertMonitors/view/View\"));\r\n\r\nconst WorkCertificate = lazy(() => import(\"../pages/workCertificate\"));\r\n\r\n\r\nconst PayrollList = lazy(() => import(\"../pages/payroll/list/PayrollList\"));\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/arcgis\",\r\n    component: <ArcGis />,\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    component: <Dashboard />,\r\n  },\r\n\r\n  {\r\n    path: \"/subscription\",\r\n    component: <Comingsoon />,\r\n  },\r\n\r\n  //manage persons\r\n  {\r\n    path: \"/persons\",\r\n    component: <PersonList/>\r\n  },\r\n  {\r\n    path: \"/person/:id/view\",\r\n    component: <PersonView/>\r\n  },\r\n  {\r\n    path: \"/person/create\",\r\n    component: <PersonCreate/>\r\n  },\r\n  {\r\n    path: \"/person/:id/edit\",\r\n    component: <PersonEdit/>\r\n  },\r\n\r\n  //manage farms\r\n  {\r\n    path: \"/farms\",\r\n    component: <Farms />,\r\n  },\r\n  {\r\n    path: \"/farms/create\",\r\n    component: <AddFarms />\r\n  },\r\n  {\r\n    path: \"/farms/:id/view\",\r\n    component: <ViewFarm />\r\n  },\r\n  {\r\n    path: \"/farms/:id/edit\",\r\n    component: <EditFarm />\r\n  },\r\n  {\r\n    path: \"/farms/manage\",\r\n    component: <Comingsoon />\r\n  },\r\n\r\n  //manage sectors\r\n  {\r\n    path: \"/sectors\",\r\n    component: <Sectors />\r\n  },\r\n  {\r\n    path: \"/sectors/:id/view\",\r\n    component: <ViewSector />\r\n  },\r\n  {\r\n    path: \"/sectors/create\",\r\n    component: <AddSector />\r\n  },\r\n  //manage zonas\r\n  {\r\n    path: \"/zonas\",\r\n    component: <Zonas />\r\n  },\r\n  {\r\n    path: \"/zonas/:id/view\",\r\n    component: <Viewzonas />\r\n  },\r\n\r\n  //rawmaterials\r\n  {\r\n    path: \"/raw-materials\",\r\n    component: <RawMaterials />,\r\n  },\r\n\r\n  //others\r\n  {\r\n    path: \"/change-password\",\r\n    component: <ChangePassword />,\r\n  },\r\n  {\r\n    path: \"/profile/edit\",\r\n    component: <EditProfile />,\r\n  },\r\n\r\n  //manage persons\r\n  // {\r\n  //   path: \"/persons\",\r\n  //   component: <PersonList />,\r\n  // },\r\n  // {\r\n  //   path: \"/person/create\",\r\n  //   component: <PersonCreate />,\r\n  // },\r\n  // {\r\n  //   path: \"/person/:id/edit\",\r\n  //   component: <PersonEdit />,\r\n  // },\r\n  // {\r\n  //   path: \"/person/:id/view\",\r\n  //   component: <PersonView />,\r\n  // },\r\n  {\r\n    path: \"/trees\",\r\n    component: <TreeList />,\r\n  },\r\n  {\r\n    path: \"/tree/create\",\r\n    component: <TreeCreate />,\r\n  },\r\n  {\r\n    path: \"/tree/:id/edit\",\r\n    component: <TreeEdit />,\r\n  },\r\n  {\r\n    path: \"/tree/:id/view\",\r\n    component: <TreeView />,\r\n  },\r\n  // {\r\n  //   path: \"/zones\",\r\n  //   component: <ZoneList />,\r\n  // },\r\n  // {\r\n  //   path: \"/zone/create\",\r\n  //   component: <ZoneCreate />,\r\n  // },\r\n  // {\r\n  //   path: \"/zone/:id/edit\",\r\n  //   component: <ZoneEdit />,\r\n  // },\r\n  // {\r\n  //   path: \"/zone/:id/view\",\r\n  //   component: <ZoneView />,\r\n  // },\r\n  // {\r\n  //   path: \"/sectors\",\r\n  //   component: <SectorList />,\r\n  // },\r\n  // {\r\n  //   path: \"/sector/create\",\r\n  //   component: <SectorCreate />,\r\n  // },\r\n  // {\r\n  //   path: \"/sector/:id/edit\",\r\n  //   component: <SectorEdit />,\r\n  // },\r\n  // {\r\n  //   path: \"/sector/:id/view\",\r\n  //   component: <SectorView />,\r\n  // },\r\n  {\r\n    path: \"/illnesses\",\r\n    component: <IllnessList />,\r\n  },\r\n  {\r\n    path: \"/illness/create\",\r\n    component: <IllnessCreate />,\r\n  },\r\n  {\r\n    path: \"/illness/:id/edit\",\r\n    component: <IllnessEdit />,\r\n  },\r\n  {\r\n    path: \"/illness/:id/view\",\r\n    component: <IllnessView />,\r\n  },\r\n  // {\r\n  //   path: \"/raw-materials\",\r\n  //   component: <RawMaterialList />,\r\n  // },\r\n  // {\r\n  //   path: \"/raw-material/create\",\r\n  //   component: <RawMaterialCreate />,\r\n  // },\r\n  // {\r\n  //   path: \"/raw-material/:id/edit\",\r\n  //   component: <RawMaterialEdit />,\r\n  // },\r\n  // {\r\n  //   path: \"/raw-material/:id/view\",\r\n  //   component: <RawMaterialView />,\r\n  // },\r\n  {\r\n    path: \"/agricultural-practices\",\r\n    component: <AgriculturalPracticeList />,\r\n  },\r\n  {\r\n    path: \"/agricultural-practice/create\",\r\n    component: <AgriculturalPracticeCreate />,\r\n  },\r\n  {\r\n    path: \"/agricultural-practice/:id/edit\",\r\n    component: <AgriculturalPracticeEdit />,\r\n  },\r\n  {\r\n    path: \"/agricultural-practice/:id/view\",\r\n    component: <AgriculturalPracticeView />,\r\n  },\r\n  {\r\n    path: \"/work-plans\",\r\n    component: <WorkPlanList />,\r\n  },\r\n  {\r\n    path: \"/work-plan/create\",\r\n    component: <WorkPlanCreate />,\r\n  },\r\n  {\r\n    path: \"/work-plan/:id/edit\",\r\n    component: <WorkPlanEdit />,\r\n  },\r\n  {\r\n    path: \"/work-plan/:id/view\",\r\n    component: <WorkPlanView />,\r\n  },\r\n  {\r\n    path: \"/purchases\",\r\n    component: <PurchaseList />,\r\n  },\r\n  {\r\n    path: \"/purchase/create\",\r\n    component: <PurchaseCreate />,\r\n  },\r\n  {\r\n    path: \"/purchase/:id/edit\",\r\n    component: <PurchaseEdit />,\r\n  },\r\n  {\r\n    path: \"/purchase/:id/view\",\r\n    component: <PurchaseView />,\r\n  },\r\n  {\r\n    path: \"/expert-monitors\",\r\n    component: <ExpertMonitorList />,\r\n  },\r\n  {\r\n    path: \"/expert-monitor/create\",\r\n    component: <ExpertMonitorCreate />,\r\n  },\r\n  {\r\n    path: \"/expert-monitor/:id/edit\",\r\n    component: <ExpertMonitorEdit />,\r\n  },\r\n  {\r\n    path: \"/expert-monitor/:id/view\",\r\n    component: <ExpertMonitorView />,\r\n  },\r\n  {\r\n    path: \"/work-certificates\",\r\n    component: <Comingsoon />,\r\n  },\r\n  {\r\n    path: \"/payroll\",\r\n    component: <Comingsoon />,\r\n  }\r\n];\r\n\r\nexport default routes.map((route, index) => (\r\n  <Route\r\n    exact\r\n    key={index}\r\n    path={route.path}\r\n    render={() =>\r\n      authCheck() === false ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <AuthLayout>{route.component}</AuthLayout>\r\n      )\r\n\r\n    }\r\n  />\r\n));\r\n","import React from \"react\";\r\nimport \"./NonAuthLayout.scss\";\r\n\r\nfunction NonAuthLayout({ children }) {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid p-0\">\r\n        <main>{children}</main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NonAuthLayout;\r\n","import React, {lazy} from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authCheck } from \"../utils/authHelper\";\r\n\r\nimport NonAuthLayout from \"../layout/NonAuthLayout\";\r\n\r\nconst Login = lazy(() => import(\"../pages/login/Login\"));\r\nconst ForgotPassword = lazy(() => import(\"../pages/forgotPassword/ForgotPassword\"));\r\nconst ResetPassword = lazy(() => import(\"../pages/resetPassword/ResetPassword\"));\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    component: <Login />,\r\n  },\r\n  {\r\n    path: \"/forgot-password\",\r\n    component: <ForgotPassword />,\r\n  },\r\n  {\r\n    path: \"/reset-password\",\r\n    component: <ResetPassword />,\r\n  },\r\n];\r\n\r\nexport default routes.map((route, index) => (\r\n  <Route\r\n    exact\r\n    key={index}\r\n    path={route.path}\r\n    render={() =>\r\n      authCheck() === true ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <NonAuthLayout>{route.component}</NonAuthLayout>\r\n      )\r\n    }\r\n  />\r\n));\r\n","import React from \"react\";\r\nimport \"./GeneralLayout.scss\";\r\n\r\nfunction GeneralLayout({ children }) {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main className=\"ms-sm-auto px-md-3\">{children}</main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GeneralLayout;\r\n","import React, {lazy} from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport GeneralLayout from \"../layout/GeneralLayout\";\r\n\r\nconst NotFound = lazy(() => import(\"../pages/errors/notFound/NotFound\"));\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <Redirect to=\"/dashboard\" />,\r\n  },\r\n  {\r\n    path: \"\",\r\n    component: <Redirect to=\"/dashboard\" />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: <NotFound />,\r\n  },\r\n];\r\n\r\nexport default routes.map((route, index) => (\r\n  <Route\r\n    exact\r\n    key={index}\r\n    path={route.path}\r\n    render={() => <GeneralLayout>{route.component}</GeneralLayout>}\r\n  />\r\n));\r\n","import React from \"react\";\r\nimport \"./PreLoader.scss\";\r\n\r\n// Main Footer\r\nfunction PreLoader() {\r\n  return (\r\n    <div className=\"preloader flex-column justify-content-center align-items-center\">\r\n      <img\r\n        className=\"animation__wobble\"\r\n        src=\"/admin/image/logo192.png\"\r\n        alt=\"AdminLTELogo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreLoader;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { store } from \"./store\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport AuthRoutes from \"./routes/authRoutes\";\r\nimport NonAuthRoutes from \"./routes/nonAuthRoutes\";\r\nimport GeneralRoutes from \"./routes/generalRoutes\";\r\n\r\nimport PreLoader from \"./components/layout/preloader/PreLoader\";\r\n\r\nconst defaultPreLoader = document.getElementById('defaultPreLoader');\r\n\r\nif (defaultPreLoader) {\r\n  defaultPreLoader.setAttribute('transition', \"max-height 0.15s ease-out\");\r\n  // defaultPreLoader.style.transition = \"max-height 0.15s ease-out\";\r\n  defaultPreLoader.remove();\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <ToastContainer />\r\n        <Suspense fallback={<PreLoader />}>\r\n          <Switch>\r\n            {AuthRoutes}\r\n            {NonAuthRoutes}\r\n            {GeneralRoutes}\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}