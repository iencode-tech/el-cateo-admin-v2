{"version":3,"sources":["components/pageSpecific/sectors/view/View.js","pages/sectors/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["SectorView","formData","className","htmlFor","id","name","statuses","parseInt","status","style","minHeight","treeIds","length","treeData","map","tree","index","scanId","params","useParams","store","useSelector","selectSector","dispatch","useDispatch","pageName","useEffect","document","title","process","initFormData","readData","Breadcrumb","breadCrumbs","link","value","activeLink","to","defaultProps"],"mappings":"+LAkEeA,MA/Df,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,kBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGD,EAASI,UAId,sBAAKH,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,oBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGI,IAASC,SAASN,EAASO,cAIhC,qBAAKN,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,kDAEF,qBAAKA,UAAU,YAAYO,MAAO,CAAEC,UAAW,KAA/C,SACE,qBAAKR,UAAU,iBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,YAAf,UAC+B,IAA5BD,EAASU,QAAQC,QAChB,qBACEV,UAAU,qCACVO,MAAO,CAAEC,UAAW,KAFtB,SAIE,qBAAKR,UAAU,YAAf,SACE,4DAILD,EAASY,SAASD,OAAS,GAC1B,qBAAKV,UAAU,MAAMO,MAAO,CAAEC,UAAW,KAAzC,SACGT,EAASY,SAASC,KAAI,SAACC,EAAMC,GAAP,OACrB,qBAAKd,UAAU,MAAf,SACE,sBAAMA,UAAU,4BAAhB,SACGa,EAAKE,UAFgBD,4B,QC+BrChB,UAlEf,WACE,IAAMkB,EAASC,cACTC,EAAQC,YAAYC,KACpBC,EAAWC,cACXC,EAAW,cAsBjB,OANAC,qBAAU,WACRC,SAASC,MAAT,UAAoBC,iBAApB,cAAoDJ,GACpDF,EAASO,eACTP,EAASQ,YAAS,CAAE3B,GAAIc,EAAOd,QAC9B,IAGD,qBAAKF,UAAU,0GAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,MAAd,SAAqBuB,MAEvB,qBAAKvB,UAAU,WAAf,SACE,cAAC8B,EAAA,EAAD,CAAYC,YA/BN,CAClB,CACE5B,KAAM,YACN6B,KAAM,cAER,CACE7B,KAAM,UACN6B,KAAM,YAER,CACE7B,KAAM,OACN6B,KAAM,gBA0BJ,yBAAShC,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAW,MAAhB,oBAGF,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAqBD,SAAUmB,EAAMnB,aAGvC,qBAAKC,UAAU,2C,gCCnEjC,8BAKA,SAAS8B,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,YACpB,OACE,qBAAK/B,UAAU,eAAe,aAAW,aAAzC,SACE,oBAAIA,UAAU,aAAd,SACG+B,EAAYnB,KAAI,SAACqB,EAAOnB,GACvB,IAAMoB,EAAaD,EAAMD,MAAuB,KAAfC,EAAMD,KACvC,OACE,oBACEhC,UAAS,0BAAqBkC,EAAa,SAAW,IADxD,SAIGA,EACC,cAAC,IAAD,CAAMC,GAAIF,EAAMD,KAAhB,SAAuBC,EAAM9B,OAE7B8B,EAAM9B,MALHW,UAwBnBgB,EAAWM,aAAe,CACxBL,YAAa,CACX,CACE5B,KAAM,YACN6B,KAAM,gBAKGF,O","file":"static/js/53.753ca850.chunk.js","sourcesContent":["import React from \"react\";\nimport { statuses } from \"../../../../utils/appConstants\";\n\nfunction SectorView({ formData }) {\n  return (\n    <>\n      <div className=\"mb-3\">\n        <label htmlFor=\"input1\" className=\"form-label\">\n          Name\n        </label>\n        <span id=\"input1\" className=\"form-control\">\n          {formData.name}\n        </span>\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"input2\" className=\"form-label\">\n          Status\n        </label>\n        <span id=\"input2\" className=\"form-control\">\n          {statuses[parseInt(formData.status)]}\n        </span>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4>Selected Trees</h4>\n            </div>\n            <div className=\"card-body\" style={{ minHeight: 300 }}>\n              <div className=\"row list-group\">\n                <div className=\"col-12 list-group-item\">\n                  <div className=\"container\">\n                    {formData.treeIds.length === 0 && (\n                      <div\n                        className=\"row align-items-center text-center\"\n                        style={{ minHeight: 300 }}\n                      >\n                        <div className=\"col-md-12\">\n                          <h5>No Trees in the Sector</h5>\n                        </div>\n                      </div>\n                    )}\n                    {formData.treeData.length > 0 && (\n                      <div className=\"row\" style={{ minHeight: 300 }}>\n                        {formData.treeData.map((tree, index) => (\n                          <div className=\"col\" key={index}>\n                            <span className=\"btn btn-outline-secondary\">\n                              {tree.scanId}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SectorView;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./View.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport {\n  initFormData,\n  readData,\n  selectSector,\n} from \"../../../store/redux/Page/Sector\";\nimport SectorViewComponent from \"../../../components/pageSpecific/sectors/view/View\";\nimport { useParams } from \"react-router-dom\";\n\nfunction SectorView() {\n  const params = useParams();\n  const store = useSelector(selectSector);\n  const dispatch = useDispatch();\n  const pageName = \"View sector\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Sectors\",\n      link: \"/sectors\",\n    },\n    {\n      name: \"View\",\n      link: \"\",\n    },\n  ];\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(initFormData());\n    dispatch(readData({ id: params.id }));\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>&nbsp;</div>\n                  </div>\n\n                  <div className=\"card-body\">\n                    <SectorViewComponent formData={store.formData} />\n                  </div>\n\n                  <div className=\"card-footer clearfix\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default SectorView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}