{"version":3,"sources":["components/common/filePreview/FilePreview.js","components/pageSpecific/expertMonitors/view/View.js","pages/expertMonitors/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["FilePreview","props","useState","fileUrl","setFileUrl","opacity","paginationOpacity","setPaginationOpacity","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","_selectIconBasedOnFileType","fileName","selectIcon","match","faFileImage","faFilePdf","faFileExcel","faFile","className","size","icon","onClick","files","length","map","file","index","forForm","type","e","preventDefault","allFiles","splice","_onChange","currentTarget","name","value","OnDelete","faTimesCircle","id","tabIndex","selectPreviewer","src","alt","onMouseEnter","onMouseLeave","onLoadSuccess","style","disabled","href","target","rel","download","_selectPreviewerBasedOnFileType","pdfjs","GlobalWorkerOptions","workerSrc","version","defaultProps","ExpertMonitorView","formData","htmlFor","to","illness","tree","scanId","treeHealthStatuses","parseInt","healthStatus","observation","filePathUrl","expertMonitor","statuses","status","params","useParams","store","useSelector","selectExpertMonitor","dispatch","useDispatch","pageName","useEffect","document","title","process","initFormData","readData","Breadcrumb","breadCrumbs","link","activeLink"],"mappings":"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","file":"static/js/25.71028c4a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  faFileExcel,\r\n  faFilePdf,\r\n  faFileImage,\r\n  faFile,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"./FilePreview.scss\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nfunction FilePreview(props) {\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n  const [paginationOpacity, setPaginationOpacity] = useState({ opacity: \"0\" });\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const OnDelete = (e, index) => {\r\n    e.preventDefault();\r\n    const allFiles = [...props.files];\r\n    allFiles.splice(index, 1);\r\n    props._onChange({\r\n      currentTarget: { name: \"files\", value: allFiles },\r\n    });\r\n  };\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const changePage = (offset) => {\r\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\r\n  };\r\n\r\n  const previousPage = () => {\r\n    changePage(-1);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    changePage(1);\r\n  };\r\n\r\n  const _selectIconBasedOnFileType = (fileName) => {\r\n    let selectIcon;\r\n    switch (true) {\r\n      case fileName.match(/\\.(jpeg|jpg|gif|png)$/) != null:\r\n        selectIcon = faFileImage;\r\n        break;\r\n\r\n      case fileName.match(/\\.(pdf)$/) != null:\r\n        selectIcon = faFilePdf;\r\n        break;\r\n\r\n      case fileName.match(/\\.(xlsx|xls|csv)$/) != null:\r\n        selectIcon = faFileExcel;\r\n        break;\r\n\r\n      default:\r\n        selectIcon = faFile;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <FontAwesomeIcon\r\n        className=\"img-fluid\"\r\n        size=\"5x\"\r\n        icon={selectIcon}\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#filePreviewModal\"\r\n        onClick={() => setFileUrl(`${props.fileUrl}/${fileName}`)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const _selectPreviewerBasedOnFileType = () => {\r\n    let selectPreviewer;\r\n    switch (true) {\r\n      case fileUrl.match(/\\.(jpeg|jpg|gif|png)$/) != null:\r\n        selectPreviewer = <img src={`${fileUrl}`} alt=\"Uploaded Data\" />;\r\n        break;\r\n\r\n      case fileUrl.match(/\\.(pdf)$/) != null:\r\n        selectPreviewer = (\r\n          <div\r\n            onMouseEnter={() => setPaginationOpacity({ opacity: \"100\" })}\r\n            onMouseLeave={() => setPaginationOpacity({ opacity: \"0\" })}\r\n          >\r\n            <Document file={`${fileUrl}`} onLoadSuccess={onDocumentLoadSuccess}>\r\n              <Page pageNumber={pageNumber} />\r\n            </Document>\r\n            <nav\r\n              className=\"shadow pdf-pagination-nav\"\r\n              aria-label=\"Pdf page navigation\"\r\n              style={paginationOpacity}\r\n            >\r\n              <ul className=\"pagination m-0\">\r\n                <li\r\n                  className={`page-item ${pageNumber <= 1 ? \"disabled\" : \"\"}`}\r\n                >\r\n                  <button\r\n                    className=\"page-link\"\r\n                    type=\"button\"\r\n                    disabled={pageNumber <= 1}\r\n                    onClick={previousPage}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                  <p className=\"page-link m-0\">\r\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of{\" \"}\r\n                    {numPages || \"--\"}\r\n                  </p>\r\n                </li>\r\n                <li\r\n                  className={`page-item ${\r\n                    pageNumber >= numPages ? \"disabled\" : \"\"\r\n                  }`}\r\n                >\r\n                  <button\r\n                    className=\"page-link\"\r\n                    type=\"button\"\r\n                    disabled={pageNumber >= numPages}\r\n                    onClick={nextPage}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      case fileUrl.match(/\\.(xlsx|xls|csv)$/) != null:\r\n        selectPreviewer = (\r\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\r\n            Download\r\n          </a>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        selectPreviewer = (\r\n          <a href={`${fileUrl}`} target=\"_blank\" rel=\"noreferrer\" download>\r\n            Download\r\n          </a>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return selectPreviewer;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.files && props.files.length > 0 && (\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-12\">\r\n            <div className=\"file-preview\">\r\n              <div className=\"row pt-2\">\r\n                {props.files.map((file, index) => (\r\n                  <div className=\"col-1 position-relative\" key={index}>\r\n                    {props.forForm && (\r\n                      <>\r\n                        <button\r\n                          className=\"btn btn-danger position-absolute top-0 start-100 translate-middle badge rounded-circle p-0 border border-danger\"\r\n                          type=\"button\"\r\n                          onClick={(e) => OnDelete(e, index)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faTimesCircle} />\r\n                        </button>\r\n                        <input\r\n                          key={index}\r\n                          type=\"hidden\"\r\n                          name=\"existingFiles\"\r\n                          value={file}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {_selectIconBasedOnFileType(file)}\r\n                  </div>\r\n                ))}\r\n\r\n                {/*Modal*/}\r\n                <div\r\n                  className=\"modal fade\"\r\n                  id=\"filePreviewModal\"\r\n                  data-bs-backdrop=\"static\"\r\n                  data-bs-keyboard=\"false\"\r\n                  tabIndex=\"-1\"\r\n                  aria-labelledby=\"filePreviewModalLabel\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <div className=\"modal-dialog modal-dialog-centered modal-xl\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"filePreviewModalLabel\">\r\n                          File Preview\r\n                        </h5>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn-close\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          aria-label=\"Close\"\r\n                          onClick={() => setFileUrl(\"\")}\r\n                        ></button>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                        <div className=\"container-fluid\">\r\n                          <div className=\"row d-flex\">\r\n                            <div className=\"col-12 d-flex justify-content-center\">\r\n                              {_selectPreviewerBasedOnFileType(fileUrl)}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"modal-footer\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          onClick={() => setFileUrl(\"\")}\r\n                        >\r\n                          Close\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFilePreview.propTypes = {\r\n  fileUrl: PropTypes.string.isRequired,\r\n  files: PropTypes.array.isRequired,\r\n  forForm: PropTypes.bool.isRequired,\r\n  _onChange: PropTypes.func,\r\n};\r\n\r\nFilePreview.defaultProps = {\r\n  fileUrl: \"\",\r\n  files: [],\r\n  forForm: false,\r\n};\r\n\r\nexport default FilePreview;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  statuses,\r\n  treeHealthStatuses,\r\n  filePathUrl,\r\n} from \"../../../../utils/appConstants\";\r\nimport FilePreview from \"../../../common/filePreview/FilePreview\";\r\n\r\nfunction ExpertMonitorView({ formData }) {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input1\" className=\"form-label\">\r\n          Illness\r\n        </label>\r\n        <span id=\"input1\" className=\"form-control\">\r\n          <Link to={formData.illness ? `/illness/${formData.illness.id}/view` : \"\"} target={\"_blank\"}>{formData.illness && formData.illness.name}</Link>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input2\" className=\"form-label\">\r\n          Tree\r\n        </label>\r\n        <span id=\"input2\" className=\"form-control\">\r\n          <Link to={formData.tree ? `/tree/${formData.tree.id}/view` : \"\"} target={\"_blank\"}>{formData.tree && formData.tree.scanId}</Link>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input3\" className=\"form-label\">\r\n          Health\r\n        </label>\r\n        <span id=\"input3\" className=\"form-control\">\r\n          {treeHealthStatuses[parseInt(formData.healthStatus)]}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input4\" className=\"form-label\">\r\n          Observation\r\n        </label>\r\n        <span id=\"input4\" className=\"form-control\">\r\n          {formData.observation}\r\n        </span>\r\n      </div>\r\n\r\n      <FilePreview fileUrl={filePathUrl.expertMonitor} files={formData.files} />\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input6\" className=\"form-label\">\r\n          Status\r\n        </label>\r\n        <span id=\"input6\" className=\"form-control\">\r\n          {statuses[parseInt(formData.status)]}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExpertMonitorView;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./View.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport {\r\n  initFormData,\r\n  readData,\r\n  selectExpertMonitor,\r\n} from \"../../../store/redux/Page/ExpertMonitor\";\r\nimport ExpertMonitorViewComponent from \"../../../components/pageSpecific/expertMonitors/view/View\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ExpertMonitorView() {\r\n  const params = useParams();\r\n  const store = useSelector(selectExpertMonitor);\r\n  const dispatch = useDispatch();\r\n  const pageName = \"View expert monitor\";\r\n  const breadCrumbs = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n    {\r\n      name: \"Expert Monitors\",\r\n      link: \"/expert-monitors\",\r\n    },\r\n    {\r\n      name: \"View\",\r\n      link: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\r\n    dispatch(initFormData());\r\n    dispatch(readData({ id: params.id }));\r\n  });\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">{pageName}</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>&nbsp;</div>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    <ExpertMonitorViewComponent formData={store.formData} />\r\n                  </div>\r\n\r\n                  <div className=\"card-footer clearfix\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpertMonitorView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}