{"version":3,"sources":["store/redux/Page/WorkPlan.js","store/redux/Page/Tree.js","store/redux/Page/Sector.js","store/redux/Page/AgriculturalPractice.js","store/redux/Page/ExpertMonitor.js","store/redux/Page/Purchase.js","store/redux/Page/Person.js","store/redux/Page/Zone.js","store/redux/Page/Illness.js","store/redux/Page/RawMaterial.js","store/redux/Page/WorkCertificate.js","store/redux/Page/Profile.js","utils/authHelper.js","store/redux/Page/Login.js","store/redux/Page/Dashboard.js","utils/appConstants.js","store/redux/Function/Toast.js","store/redux/Identity.js","store/redux/index.js","utils/requestHelper.js","store/sagas/Api/Login.js","utils/apiConstants.js","store/sagas/Api/Identity.js","store/sagas/Api/Profile/ChangePassword.js","store/sagas/Api/Profile/UpdateProfile.js","store/sagas/Api/DashboardData.js","store/sagas/Api/Person/List.js","store/sagas/Api/Person/Create.js","store/sagas/Api/Person/Read.js","store/sagas/Api/Person/Update.js","store/sagas/Api/Person/Delete.js","store/sagas/Api/Tree/List.js","store/sagas/Api/Tree/Create.js","store/sagas/Api/Tree/Read.js","store/sagas/Api/Tree/Update.js","store/sagas/Api/Tree/Delete.js","store/sagas/Api/Zone/List.js","store/sagas/Api/Zone/Create.js","store/sagas/Api/Zone/Read.js","store/sagas/Api/Zone/Update.js","store/sagas/Api/Zone/Delete.js","store/sagas/Api/Sector/List.js","store/sagas/Api/Sector/Create.js","store/sagas/Api/Sector/Read.js","store/sagas/Api/Sector/Update.js","store/sagas/Api/Sector/Delete.js","store/sagas/Api/Illness/List.js","store/sagas/Api/Illness/Create.js","store/sagas/Api/Illness/Read.js","store/sagas/Api/Illness/Update.js","store/sagas/Api/Illness/Delete.js","store/sagas/Api/RawMaterial/List.js","store/sagas/Api/RawMaterial/Create.js","store/sagas/Api/RawMaterial/Read.js","store/sagas/Api/RawMaterial/Update.js","store/sagas/Api/RawMaterial/Delete.js","store/sagas/Api/AgriculturalPractice/List.js","store/sagas/Api/AgriculturalPractice/Create.js","store/sagas/Api/AgriculturalPractice/Read.js","store/sagas/Api/AgriculturalPractice/Update.js","store/sagas/Api/AgriculturalPractice/Delete.js","store/sagas/Api/WorkPlan/List.js","store/sagas/Api/WorkPlan/Create.js","store/sagas/Api/WorkPlan/Read.js","store/sagas/Api/WorkPlan/Update.js","store/sagas/Api/WorkPlan/Delete.js","store/sagas/Api/Purchase/List.js","store/sagas/Api/Purchase/Create.js","store/sagas/Api/Purchase/Read.js","store/sagas/Api/Purchase/Update.js","store/sagas/Api/Purchase/Delete.js","store/sagas/Api/ExpertMonitor/List.js","store/sagas/Api/ExpertMonitor/Create.js","store/sagas/Api/ExpertMonitor/Read.js","store/sagas/Api/ExpertMonitor/Update.js","store/sagas/Api/ExpertMonitor/Delete.js","store/sagas/Function/Toast.js","store/sagas/index.js","store/index.js","serviceWorker.js","components/layout/leftsidebar/LeftSideBar.js","components/layout/header/Header.js","components/layout/footer/Footer.js","layout/AuthLayout/index.js","routes/authRoutes.js","layout/NonAuthLayout/index.js","routes/nonAuthRoutes.js","layout/GeneralLayout/index.js","routes/generalRoutes.js","components/layout/preloader/PreLoader.js","index.js"],"names":["initialState","loading","isError","list","listCount","listFormData","keyword","page","formData","collaboratorId","selectRegion","zoneId","sectorId","agriculturalPracticeId","methodId","amountPerTree","collaborator","zone","sector","agriculturalPractice","rawMaterials","trees","status","formValidation","formType","collaboratorsFormData","collaborators","zonesFormData","zones","sectorsFormData","sectors","agriculturalPracticesFormData","agriculturalPractices","workPlanSlice","createSlice","name","reducers","handleListFormDataChange","state","action","payload","key","value","fetchList","successList","data","dbData","dbCount","failedList","initFormData","fetchAllCollaborators","setAllCollaborators","fetchAllZones","setAllZones","fetchAllSectors","setAllSectors","fetchAllAgriculturalPractices","setAllAgriculturalPractices","handleFormDataChange","Array","isArray","_","set","join","handleFormValidation","fVal","storeData","readData","updateData","deleteData","success","failed","actions","selectWorkPlan","workPlan","scanId","entry_date","Date","latitude","longitude","files","existingFiles","treeSlice","selectTree","tree","createBy","treeIds","treeData","treesFormData","illnessesFormData","illness","illnesses","sectorSlice","fetchAllTrees","setAllTrees","fetchAllIllnesses","setAllIllnesses","selectSector","defaultFolialDrenche","formulationName","scheduledDate","daysToDo","method","observations","rawMaterialsFormData","unit","rawMaterialInitialState","rawMaterialId","quantity","agriculturalPracticeSlice","successDefaultFolialDrenche","failedDefaultFolialDrenche","fetchAllRawMaterials","setAllRawMaterials","addNewRawMaterial","initMaterial","material","id","unitMetric","rawMaterial","push","removeRawMaterial","splice","index","selectAgriculturalPractice","treeId","illnessId","healthStatus","observation","expertMonitorSlice","selectExpertMonitor","expertMonitor","purchaseDate","unitValue","measurementUnit","unitsPurchased","purchasePrice","dueDate","lot","supplier","presentation","quantityAvailable","purchaseSlice","selectPurchase","purchase","firstName","lastName","email","phone","address","role","Object","keys","personRoles","password","confirmPassword","personSlice","selectPerson","person","soils","soilInitialState","soilType","date","ph","clay","sand","calcium","magnesium","potassium","sodium","aluminum","silt","zoneSlice","addNewSoil","removeSoil","selectZone","illnessSlice","selectIllness","barCode","price","refPresentation","retirementTime","quarantine","incompatibleRawMaterials","incompatibleRawMaterialData","rawMaterialSlice","selectRawMaterial","assignedOn","terminateOn","scannedTrees","totalTrees","workCertificateSlice","setSelectedData","selectWorkCertificate","workCertificate","currentPassword","profileSlice","changePassword","selectProfile","profile","authCheck","fetchAuthToken","localStorage","getItem","process","loginForm","loginSlice","handleDataChange","attempt","selectLogin","login","head","admin","dashboardSlice","selectDashboard","dashboard","A","H","C","statuses","methods","treeHealthStatuses","workPlanMethods","actualName","totalunit","g","cc","perPage","filePathUrl","defaultFolialDrencheId","toastSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","message","toastSlice","setToastData","toastSetting","resetToastData","selectToast","toast","auth","userData","identitySlice","populate","sync","flush","removeItem","selectIdentity","identity","allReducers","combineReducers","rootReducers","generateRequestHeader","customHeader","headerObj","Accept","header","Headers","append","makeRequest","requestUrl","requestType","requestBody","requestHeader","fetchOptions","headers","FormData","body","length","requestBodyKey","i","JSON","stringify","Promise","resolve","reject","fetch","then","response","json","responseData","code","useDispatch","errors","catch","err","triggerApi","actionWatcher","put","userStoreData","access_token","setItem","takeLatest","all","queryString","property","slice","replace","setAllTreesExpertMonitor","setAllTreesSector","fetchAllTreesExpertMonitor","fetchAllTreesSector","setAllZonesForTree","setAllZonesForWorkPlan","setAllZonesForWorkCertificate","fetchAllZonesForTree","fetchAllZonesForWorkPlan","fetchAllZonesForWorkCertificate","setAllSectorsForTree","setAllSectorsForWorkPlan","setAllSectorsForWorkCertificate","fetchAllSectorsForTree","fetchAllSectorsForWorkPlan","fetchAllSectorsForWorkCertificate","setAllIllnessesExpertMonitor","setAllIllnessesSector","fetchAllIllnessesExpertMonitor","fetchAllIllnessesSector","setAllRawMaterialsForAgriculturalPractice","setAllRawMaterialsForPurchase","fetchAllRawMaterialsForAgriculturalPractice","fetchAllRawMaterialsForPurchase","actionType","agriculturalPracticeSuccessDefaultFolialDrenche","agriculturalPracticeFailedDefaultFolialDrenche","agriculturalPracticeInitFormData","parse","successListWorkPlan","successListWorkCertificate","failedListWorkPlan","failedListWorkCertificate","fetchListWorkPlan","fetchListWorkCertificate","successWorkPlan","successWorkCertificate","failedWorkPlan","failedWorkCertificate","readDataWorkPlan","readDataWorkCertificate","triggerFunction","select","onClose","info","warn","error","rootSaga","loginActionWatcher","identityActionWatcher","changePasswordActionWatcher","updateProfileActionWatcher","dashboardActionWatcher","personListActionWatcher","personCreateActionWatcher","personReadActionWatcher","personUpdateActionWatcher","personDeleteActionWatcher","treeListActionWatcher","treeCreateActionWatcher","treeReadActionWatcher","treeUpdateActionWatcher","treeDeleteActionWatcher","zoneListActionWatcher","zoneCreateActionWatcher","zoneReadActionWatcher","zoneUpdateActionWatcher","zoneDeleteActionWatcher","sectorListActionWatcher","sectorCreateActionWatcher","sectorReadActionWatcher","sectorUpdateActionWatcher","sectorDeleteActionWatcher","illnessListActionWatcher","illnessCreateActionWatcher","illnessReadActionWatcher","illnessUpdateActionWatcher","illnessDeleteActionWatcher","rawMaterialListActionWatcher","rawMaterialCreateActionWatcher","rawMaterialReadActionWatcher","rawMaterialUpdateActionWatcher","rawMaterialDeleteActionWatcher","agriculturalPracticeListActionWatcher","agriculturalPracticeCreateActionWatcher","agriculturalPracticeReadActionWatcher","agriculturalPracticeUpdateActionWatcher","agriculturalPracticeDeleteActionWatcher","workPlanListActionWatcher","workPlanCreateActionWatcher","workPlanReadActionWatcher","workPlanUpdateActionWatcher","workPlanDeleteActionWatcher","purchaseListActionWatcher","purchaseCreateActionWatcher","purchaseReadActionWatcher","purchaseUpdateActionWatcher","purchaseDeleteActionWatcher","expertMonitorListActionWatcher","expertMonitorCreateActionWatcher","expertMonitorReadActionWatcher","expertMonitorUpdateActionWatcher","expertMonitorDeleteActionWatcher","toastActionWatcher","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","serializableCheck","run","Boolean","window","location","hostname","match","LeftSideBar","useLocation","history","useHistory","useState","icon","faCube","link","active","faCog","children","faUser","faTree","faDolly","faMapMarkerAlt","faSkullCrossbones","faAtom","faShareAlt","faClipboardList","faElementor","faShoppingCart","faDesktop","faFileAlt","faFileInvoice","faCrosshairs","sidebarLinks","setSideBarLinks","sidebarUpdate","newLocation","sidebarLinksCopy","forEach","parentMatched","RegExp","pluralize","singular","test","pathname","subData","subIndex","childMatched","useEffect","unListen","listen","className","map","activeClassName","isActive","to","Header","useSelector","dispatch","toggle","setToggle","myCollapse","document","getElementById","bsCollapse","Collapse","show","hide","href","src","height","width","alt","onClick","currentToggle","e","preventDefault","Footer","getFullYear","AuthLayout","checkIdentity","setInterval","clearInterval","Dashboard","lazy","ChangePassword","EditProfile","ArcGis","PersonList","PersonCreate","PersonEdit","PersonView","TreeList","TreeCreate","TreeEdit","TreeView","ZoneList","ZoneCreate","ZoneEdit","ZoneView","SectorList","SectorCreate","SectorEdit","SectorView","IllnessList","IllnessCreate","IllnessEdit","IllnessView","RawMaterialList","RawMaterialCreate","RawMaterialEdit","RawMaterialView","AgriculturalPracticeList","AgriculturalPracticeCreate","AgriculturalPracticeEdit","AgriculturalPracticeView","WorkPlanList","WorkPlanCreate","WorkPlanEdit","WorkPlanView","PurchaseList","PurchaseCreate","PurchaseEdit","PurchaseView","ExpertMonitorList","ExpertMonitorCreate","ExpertMonitorEdit","ExpertMonitorView","WorkCertificate","PayrollList","routes","path","component","route","exact","render","NonAuthLayout","Login","ForgotPassword","ResetPassword","GeneralLayout","NotFound","PreLoader","defaultPreLoader","setAttribute","remove","ReactDOM","StrictMode","fallback","AuthRoutes","NonAuthRoutes","GeneralRoutes","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a1bda6e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    collaboratorId: \"\",\n    selectRegion: \"Z\",\n    zoneId: \"\",\n    sectorId: \"\",\n    agriculturalPracticeId: \"\",\n    methodId: 0,\n    amountPerTree: 0,\n    collaborator: {},\n    zone: {},\n    sector: {},\n    agriculturalPractice: {},\n    rawMaterials: [],\n    trees: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n  collaboratorsFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  collaborators: [],\n  zonesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  zones: [],\n  sectorsFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  sectors: [],\n  agriculturalPracticesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  agriculturalPractices: [],\n};\n\nexport const workPlanSlice = createSlice({\n  name: \"workPlan\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    fetchAllCollaborators: (state, action) => {\n      state.collaboratorsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllCollaborators: (state, action) => {\n      state.collaborators = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllZones: (state, action) => {\n      state.zonesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllZones: (state, action) => {\n      state.zones = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllSectors: (state, action) => {\n      state.sectorsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllSectors: (state, action) => {\n      state.sectors = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllAgriculturalPractices: (state, action) => {\n      state.agriculturalPracticesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllAgriculturalPractices: (state, action) => {\n      state.agriculturalPractices = action.payload.data.dbData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      if (Array.isArray(action.payload.key)) {\n        _.set(\n          state.formData,\n          action.payload.key.join(\".\"),\n          action.payload.value\n        );\n      } else {\n        state.formData[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  fetchAllCollaborators,\n  setAllCollaborators,\n  fetchAllZones,\n  setAllZones,\n  fetchAllSectors,\n  setAllSectors,\n  fetchAllAgriculturalPractices,\n  setAllAgriculturalPractices,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = workPlanSlice.actions;\n\nexport const selectWorkPlan = (state) => state.workPlan;\n\nexport default workPlanSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    scanId: \"\",\n    entry_date: new Date(),\n    latitude: \"\",\n    longitude: \"\",\n    selectRegion: \"Z\",\n    zoneId: \"\",\n    sectorId: [],\n    files: [],\n    existingFiles: [],\n    status: 1,\n  },\n  formValidation: {},\n  zonesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  zones: [],\n  sectorsFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  sectors: [],\n  formType: \"Create\",\n};\n\nexport const treeSlice = createSlice({\n  name: \"tree\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      state.zonesFormData = initialState.zonesFormData;\n      state.zones = initialState.zones;\n      state.sectorsFormData = initialState.sectorsFormData;\n      state.sectors = initialState.sectors;\n      return state;\n    },\n    fetchAllZones: (state, action) => {\n      state.zonesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllZones: (state, action) => {\n      state.zones = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllSectors: (state, action) => {\n      state.sectorsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllSectors: (state, action) => {\n      state.sectors = action.payload.data.dbData;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  fetchAllZones,\n  setAllZones,\n  fetchAllSectors,\n  setAllSectors,\n  handleFormValidation,\n  handleFormDataChange,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = treeSlice.actions;\n\nexport const selectTree = (state) => state.tree;\n\nexport default treeSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    name: \"\",\n    createBy: \"id\",\n    treeIds: [],\n    treeData: [],\n    status: 1,\n  },\n  formValidation: {},\n  treesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  tree: {},\n  trees: [],\n  illnessesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  illness: {},\n  illnesses: [],\n  formType: \"Create\",\n};\n\nexport const sectorSlice = createSlice({\n  name: \"sector\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    fetchAllTrees: (state, action) => {\n      state.treesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllTrees: (state, action) => {\n      state.trees = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllIllnesses: (state, action) => {\n      state.illnessesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllIllnesses: (state, action) => {\n      state.illnesses = action.payload.data.dbData;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      if (Array.isArray(action.payload.key)) {\n        _.set(\n          state.formData,\n          action.payload.key.join(\".\"),\n          action.payload.value\n        );\n      } else {\n        state.formData[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = { ...state.formValidation };\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  fetchAllTrees,\n  setAllTrees,\n  fetchAllIllnesses,\n  setAllIllnesses,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = sectorSlice.actions;\n\nexport const selectSector = (state) => state.sector;\n\nexport default sectorSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  defaultFolialDrenche: {},\n  formData: {\n    formulationName: \"\",\n    scheduledDate: new Date(),\n    daysToDo: \"\",\n    method: 0,\n    observations: \"\",\n    rawMaterials: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n  rawMaterialsFormData: {\n    keyword: \"\",\n    unit: \"cc\",\n    page: 1,\n  },\n  rawMaterials: [],\n};\n\nconst rawMaterialInitialState = {\n  rawMaterialId: \"\",\n  quantity: \"\",\n  unit: \"\",\n};\n\nexport const agriculturalPracticeSlice = createSlice({\n  name: \"agriculturalPractice\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    successDefaultFolialDrenche: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.defaultFolialDrenche = {\n        ...initialState.defaultFolialDrenche,\n        ...action.payload.data,\n      };\n      return state;\n    },\n    failedDefaultFolialDrenche: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.defaultFolialDrenche = initialState.defaultFolialDrenche;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      state.rawMaterialsFormData = initialState.rawMaterialsFormData;\n      state.rawMaterials = initialState.rawMaterials;\n      return state;\n    },\n    fetchAllRawMaterials: (state, action) => {\n      state.rawMaterialsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllRawMaterials: (state, action) => {\n      state.rawMaterials = action.payload.data.dbData;\n      return state;\n    },\n    addNewRawMaterial: (state, action) => {\n      let initMaterial = { ...rawMaterialInitialState };\n      initMaterial.rawMaterialId = action.payload.material.id;\n      initMaterial.quantity =\n        action.payload.quantity || rawMaterialInitialState.quantity;\n      initMaterial.unit = action.payload.material.unitMetric;\n      initMaterial.rawMaterial = action.payload.material;\n      state.formData.rawMaterials.push(initMaterial);\n      return state;\n    },\n    removeRawMaterial: (state, action) => {\n      state.formData.rawMaterials.splice(action.payload.index, 1);\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      if (Array.isArray(action.payload.key)) {\n        _.set(\n          state.formData,\n          action.payload.key.join(\".\"),\n          action.payload.value\n        );\n      } else {\n        state.formData[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  successDefaultFolialDrenche,\n  failedDefaultFolialDrenche,\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  fetchAllRawMaterials,\n  setAllRawMaterials,\n  addNewRawMaterial,\n  removeRawMaterial,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = agriculturalPracticeSlice.actions;\n\nexport const selectAgriculturalPractice = (state) => state.agriculturalPractice;\n\nexport default agriculturalPracticeSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    treeId: \"\",\n    illnessId: \"\",\n    healthStatus: 0,\n    observation: \"\",\n    files: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n  illnessesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  illnesses: [],\n  treesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  trees: [],\n};\n\nexport const expertMonitorSlice = createSlice({\n  name: \"expertMonitor\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    fetchAllIllnesses: (state, action) => {\n      state.illnessesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllIllnesses: (state, action) => {\n      state.illnesses = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllTrees: (state, action) => {\n      state.treesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllTrees: (state, action) => {\n      state.trees = action.payload.data.dbData;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  fetchAllIllnesses,\n  setAllIllnesses,\n  fetchAllTrees,\n  setAllTrees,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = expertMonitorSlice.actions;\n\nexport const selectExpertMonitor = (state) => state.expertMonitor;\n\nexport default expertMonitorSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    purchaseDate: new Date(),\n    rawMaterialId: \"\",\n    unitValue: \"\",\n    measurementUnit: \"\",\n    unitsPurchased: \"\",\n    purchasePrice: \"\",\n    dueDate: new Date(),\n    lot: \"\",\n    rawMaterial: {\n      id: \"\",\n      name: \"\",\n      supplier: \"\",\n      presentation: \"\",\n      quantityAvailable: \"\",\n    },\n  },\n  formValidation: {},\n  rawMaterialsFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  rawMaterials: [],\n  formType: \"Create\",\n};\n\nexport const purchaseSlice = createSlice({\n  name: \"purchase\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    fetchAllRawMaterials: (state, action) => {\n      state.rawMaterialsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllRawMaterials: (state, action) => {\n      state.rawMaterials = action.payload.data.dbData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      if (Array.isArray(action.payload.key)) {\n        _.set(\n          state.formData,\n          action.payload.key.join(\".\"),\n          action.payload.value\n        );\n      } else {\n        state.formData[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = { ...state.formValidation };\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  fetchAllRawMaterials,\n  setAllRawMaterials,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = purchaseSlice.actions;\n\nexport const selectPurchase = (state) => state.purchase;\n\nexport default purchaseSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { personRoles } from \"../../../utils/appConstants\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    role: Object.keys(personRoles)[0],\n    password: \"\",\n    confirmPassword: \"\",\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n};\n\nexport const personSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = { ...state.formValidation };\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = personSlice.actions;\n\nexport const selectPerson = (state) => state.person;\n\nexport default personSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    soils: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n};\n\nconst soilInitialState = {\n  soilType: \"\",\n  date: new Date(),\n  ph: \"\",\n  clay: \"\",\n  sand: \"\",\n  calcium: \"\",\n  magnesium: \"\",\n  potassium: \"\",\n  sodium: \"\",\n  aluminum: \"\",\n  silt: \"\",\n  observation: \"\",\n};\n\nexport const zoneSlice = createSlice({\n  name: \"zone\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    addNewSoil: (state, action) => {\n      state.formData.soils.push(soilInitialState);\n      return state;\n    },\n    removeSoil: (state, action) => {\n      state.formData.soils.splice(action.payload.index, 1);\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      if (Array.isArray(action.payload.key)) {\n        _.set(\n          state.formData,\n          action.payload.key.join(\".\"),\n          action.payload.value\n        );\n      } else {\n        state.formData[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  addNewSoil,\n  removeSoil,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = zoneSlice.actions;\n\nexport const selectZone = (state) => state.zone;\n\nexport default zoneSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    name: \"\",\n    observation: \"\",\n    files: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n};\n\nexport const illnessSlice = createSlice({\n  name: \"illness\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = {...state.formValidation};\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = illnessSlice.actions;\n\nexport const selectIllness = (state) => state.illness;\n\nexport default illnessSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    barCode: \"\",\n    name: \"\",\n    unitValue: \"\",\n    unitMetric: \"\",\n    presentation: \"\",\n    quantity: \"\",\n    quantityAvailable: \"\",\n    price: \"\",\n    supplier: \"\",\n    refPresentation: \"\",\n    retirementTime: \"\",\n    quarantine: \"\",\n    incompatibleRawMaterials: [],\n    incompatibleRawMaterialData: [],\n    files: [],\n    status: 1,\n  },\n  formValidation: {},\n  formType: \"Create\",\n};\n\nexport const rawMaterialSlice = createSlice({\n  name: \"rawMaterial\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = { ...state.formValidation };\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    storeData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    deleteData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  storeData,\n  readData,\n  updateData,\n  deleteData,\n  success,\n  failed,\n} = rawMaterialSlice.actions;\n\nexport const selectRawMaterial = (state) => state.rawMaterial;\n\nexport default rawMaterialSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  list: [],\n  listCount: 0,\n  listFormData: {\n    zoneId: \"\",\n    sectorId: \"\",\n    keyword: \"\",\n    page: 1,\n  },\n  formData: {\n    collaboratorId: \"\",\n    zoneId: \"\",\n    sectorId: \"\",\n    agriculturalPracticeId: \"\",\n    rawMaterials: [],\n    methodId: 0,\n    assignedOn: \"\",\n    terminateOn: \"\",\n    trees: [],\n    status: 1,\n    collaborator: {},\n    zone: {},\n    agriculturalPractice: {},\n    id: \"\",\n    scannedTrees: 0,\n    totalTrees: 0,\n    selectRegion: \"Z\",\n  },\n  zonesFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  zone: {},\n  zones: [],\n  sectorsFormData: {\n    keyword: \"\",\n    page: 1,\n  },\n  sector: {},\n  sectors: [],\n};\n\nexport const workCertificateSlice = createSlice({\n  name: \"workCertificate\",\n  initialState,\n  reducers: {\n    handleListFormDataChange: (state, action) => {\n      state.listFormData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchList: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.listFormData.page = action.payload.page || state.listFormData.page;\n      return state;\n    },\n    successList: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.list = action.payload.data.dbData;\n      state.listCount = action.payload.data.dbCount;\n      return state;\n    },\n    failedList: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.list = [];\n      state.listCount = 0;\n      return state;\n    },\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    setSelectedData: (state, action) => {\n      state[action.payload.key] = action.payload.value;\n      return state;\n    },\n    fetchAllZones: (state, action) => {\n      state.zonesFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllZones: (state, action) => {\n      state.zones = action.payload.data.dbData;\n      return state;\n    },\n    fetchAllSectors: (state, action) => {\n      state.sectorsFormData.keyword = action.payload.keyword;\n      return state;\n    },\n    setAllSectors: (state, action) => {\n      state.sectors = action.payload.data.dbData;\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  handleListFormDataChange,\n  fetchList,\n  successList,\n  failedList,\n  initFormData,\n  setSelectedData,\n  fetchAllZones,\n  setAllZones,\n  fetchAllSectors,\n  setAllSectors,\n  readData,\n  success,\n  failed,\n} = workCertificateSlice.actions;\n\nexport const selectWorkCertificate = (state) => state.workCertificate;\n\nexport default workCertificateSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  isError: false,\n  formData: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    currentPassword: \"\",\n  },\n  formValidation: {},\n};\n\nexport const profileSlice = createSlice({\n  name: \"profile\",\n  initialState,\n  reducers: {\n    initFormData: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    handleFormDataChange: (state, action) => {\n      state.formData[action.payload.key] = action.payload.value;\n      return state;\n    },\n    handleFormValidation: (state, action) => {\n      if (!action.payload.value) {\n        let fVal = { ...state.formValidation };\n        delete fVal[action.payload.key];\n        state.formValidation = fVal;\n      } else {\n        state.formValidation[action.payload.key] = action.payload.value;\n      }\n      return state;\n    },\n    readData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      state.formData = initialState.formData;\n      return state;\n    },\n    updateData: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    changePassword: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state.loading = false;\n      state.isError = false;\n      state.formData = { ...initialState.formData, ...action.payload.data };\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const {\n  initFormData,\n  handleFormDataChange,\n  handleFormValidation,\n  readData,\n  updateData,\n  changePassword,\n  success,\n  failed,\n} = profileSlice.actions;\n\nexport const selectProfile = (state) => state.profile;\n\nexport default profileSlice.reducer;\n","export const authCheck = () => {\n  if (fetchAuthToken()) {\n    return true;\n  }\n  return false;\n};\n\nexport const fetchAuthToken = () =>\n  localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loginForm: {\n    email: \"\",\n    password: \"\",\n  },\n  loading: false,\n  isError: false,\n};\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    handleDataChange: (state, action) => {\n      state.loginForm[action.payload.key] = action.payload.value;\n      return state;\n    },\n    attempt: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state = initialState;\n      return state;\n    },\n    failed: (state, action) => {\n      state.loading = false;\n      state.isError = true;\n      state.loginForm.password = \"\";\n      return state;\n    },\n  },\n});\n\nexport const { handleDataChange, attempt, success, failed } =\n  loginSlice.actions;\n\nexport const selectLogin = (state) => state.login;\n\nexport default loginSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  head: 0,\n  admin: 0,\n  collaborator: 0,\n  loading: false,\n  isError: false,\n};\n\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    attempt: (state, action) => {\n      state.loading = true;\n      state.isError = false;\n      return state;\n    },\n    success: (state, action) => {\n      state = {\n        ...initialState,\n        ...{\n          head: action.payload.data[\"H\"],\n          admin: action.payload.data[\"A\"],\n          collaborator: action.payload.data[\"C\"],\n        },\n      };\n      return state;\n    },\n    failed: (state, action) => {\n      state.head = 0;\n      state.admin = 0;\n      state.collaborator = 0;\n      state.loading = false;\n      state.isError = true;\n      return state;\n    },\n  },\n});\n\nexport const { attempt, success, failed } = dashboardSlice.actions;\n\nexport const selectDashboard = (state) => state.dashboard;\n\nexport default dashboardSlice.reducer;\n","const personRoles = {\n  A: \"System Administrator\",\n  H: \"Head of Planning\",\n  C: \"Collaborator\",\n};\n\nconst statuses = {\n  0: \"Inactive\",\n  1: \"Active\",\n};\n\nconst methods = {\n  0: \"Foliar\",\n  1: \"Manual\",\n  2: \"Water Drain\",\n};\n\nconst stationaries = {\n  0: \"No\",\n  1: \"Yes\",\n};\n\nconst treeHealthStatuses = {\n  0: \"Sick\",\n  1: \"Healthy\",\n};\n\nconst workPlanMethods = {\n  0: {\n    name: \"Knapsack pump 18lt\",\n    actualName: \"Knapsack pump\",\n    value: 18000,\n    unit: \"CC\",\n    totalunit: \"Lts\"\n  },\n  1: { name: \"Caneca 200lt\", actualName: \"Caneca \", value: 200000, unit: \"CC\", totalunit: \"Lts\" },\n  2: { name: \"IBC 1000\", actualName: \"IBC\", value: 1000000, unit: \"CC\", totalunit: \"Lts\" },\n};\n\nconst unitMetric = {\n  g: \"Gram\",\n  cc: \"CC\",\n  totalunit: \"Lts\"\n};\n\nconst perPage = 15;\n\nconst filePathUrl = {\n  trees: `${process.env.REACT_APP_ASSET_URL}/assets/trees`,\n  illnesses: `${process.env.REACT_APP_ASSET_URL}/assets/illnesses`,\n  rawMaterials: `${process.env.REACT_APP_ASSET_URL}/assets/raw-materials`,\n  expertMonitor: `${process.env.REACT_APP_ASSET_URL}/assets/tree-illnesses`,\n};\n\nconst defaultFolialDrencheId = \"61c1eee3a713b1e808b2a68f\";\n\nexport {\n  personRoles,\n  statuses,\n  methods,\n  stationaries,\n  treeHealthStatuses,\n  workPlanMethods,\n  unitMetric,\n  perPage,\n  filePathUrl,\n  defaultFolialDrencheId\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  toastSettings: {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: false,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  },\n  type: \"default\",\n  message: \"\",\n};\n\nexport const toastSlice = createSlice({\n  name: \"toast\",\n  initialState,\n  reducers: {\n    setToastData: (state, action) => {\n      state.type = action.payload.type || initialState.type;\n      state.message = action.payload.message || initialState.message;\n      state.toastSetting = action.payload.toastSettings || initialState.toastSettings;\n      return state;\n    },\n    resetToastData: (state, action) => {\n      return initialState;\n    },\n  },\n});\n\nexport const { setToastData, resetToastData } =\n  toastSlice.actions;\n\nexport const selectToast = (state) => state.toast;\n\nexport default toastSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  auth: false,\n  userData: {},\n};\n\nexport const identitySlice = createSlice({\n  name: \"identity\",\n  initialState,\n  reducers: {\n    populate: (state, action) => {\n      state = {\n        loading: false,\n        auth: true,\n        userData: action.payload.data,\n      };\n      return state;\n    },\n    sync: (state, action) => {\n      state.loading = true;\n      return state;\n    },\n    flush: (state, action) => {\n      localStorage.removeItem(process.env.REACT_APP_AUTH_KEY_NAME);\n\n      return { ...initialState, loading: false };\n    },\n  },\n});\n\nexport const { populate, sync, flush } = identitySlice.actions;\n\nexport const selectIdentity = (state) => state.identity;\n\nexport default identitySlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport toast from \"./Function/Toast\";\nimport login from \"./Page/Login\";\nimport identity, { flush } from \"./Identity\";\nimport profile from \"./Page/Profile\";\nimport dashboard from \"./Page/Dashboard\";\nimport person from \"./Page/Person\";\nimport tree from \"./Page/Tree\";\nimport zone from \"./Page/Zone\";\nimport sector from \"./Page/Sector\";\nimport illness from \"./Page/Illness\";\nimport rawMaterial from \"./Page/RawMaterial\";\nimport agriculturalPractice from \"./Page/AgriculturalPractice\";\nimport workPlan from \"./Page/WorkPlan\";\nimport purchase from \"./Page/Purchase\";\nimport expertMonitor from \"./Page/ExpertMonitor\";\nimport workCertificate from \"./Page/WorkCertificate\";\n\nconst allReducers = combineReducers({\n  toast,\n  login,\n  identity,\n  profile,\n  dashboard,\n  person,\n  tree,\n  zone,\n  sector,\n  illness,\n  rawMaterial,\n  agriculturalPractice,\n  workPlan,\n  purchase,\n  expertMonitor,\n  workCertificate,\n});\n\nconst rootReducers = (state, action) => {\n  if (action.type === flush().type) {\n    state = undefined;\n  }\n  return allReducers(state, action);\n};\n\nexport default rootReducers;\n","import { authCheck, fetchAuthToken } from \"./authHelper\";\nimport { useDispatch } from \"react-redux\";\nimport { flush } from \"../store/redux/Identity\";\n\nexport const buildFormData = (formData, data, parentKey) => {\n  if (\n    data &&\n    typeof data === \"object\" &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach((key) => {\n      buildFormData(\n        formData,\n        data[key],\n        parentKey ? `${parentKey}[${key}]` : key\n      );\n    });\n  } else {\n    const value = data == null ? \"\" : data;\n\n    formData.append(parentKey, value);\n  }\n};\n\nexport const generateRequestHeader = (customHeader = {}) => {\n  let headerObj = {\n    Accept: \"application/json\",\n  };\n\n  if (customHeader) {\n    headerObj = { ...headerObj, ...customHeader };\n  }\n\n  const header = new Headers(headerObj);\n\n  if (authCheck()) {\n    header.append(\"Authorization\", fetchAuthToken());\n  }\n\n  return header;\n};\n\nexport const makeRequest = (\n  requestUrl,\n  requestType = \"GET\",\n  requestBody = null,\n  requestHeader = null\n) => {\n  const fetchOptions = {\n    method: requestType,\n    headers: generateRequestHeader(),\n  };\n\n  if (requestHeader) {\n    fetchOptions.headers = generateRequestHeader(requestHeader);\n  }\n\n  if (requestBody) {\n    if (requestBody instanceof FormData) {\n      fetchOptions.body = requestBody;\n    } else if (typeof requestBody === \"object\") {\n      if (Object.keys(requestBody).length > 0) {\n        const formData = new FormData();\n        // buildFormData(formData, requestBody);\n        for (const requestBodyKey in requestBody) {\n          if (Array.isArray(requestBody[requestBodyKey])) {\n            for (let i = 0; i < requestBody[requestBodyKey].length; i++) {\n              if (typeof requestBody[requestBodyKey][i] === \"object\") {\n                formData.append(\n                  requestBodyKey,\n                  JSON.stringify(requestBody[requestBodyKey][i])\n                );\n              } else {\n                formData.append(requestBodyKey, requestBody[requestBodyKey][i]);\n              }\n            }\n          } else {\n            formData.append(requestBodyKey, requestBody[requestBodyKey]);\n          }\n        }\n        fetchOptions.body = formData;\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) =>\n    fetch(requestUrl, fetchOptions)\n      .then((response) => response.json())\n      .then((responseData) => {\n        switch (responseData.code) {\n          case \"AUF\":\n            useDispatch()(flush());\n            return resolve({\n              status: \"fail\",\n              code: \"AUF\",\n              message: \"You have been logged out!\",\n              errors: {},\n            });\n          default:\n            return resolve(responseData);\n        }\n      })\n      .catch((err) =>\n        resolve({\n          status: \"fail\",\n          code: \"ERR\",\n          message: \"Something went wrong!\",\n          errors: {},\n        })\n      )\n  );\n};\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { attempt, failed, success } from \"../../redux/Page/Login\";\nimport { populate } from \"../../redux/Identity\";\nimport { makeRequest } from \"../../../utils/requestHelper\";\nimport { login } from \"../../../utils/apiConstants\";\nimport { setToastData } from \"../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${login}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: {} });\n\n    const userStoreData = { ...json.data };\n    delete userStoreData.access_token;\n    localStorage.setItem(\n      process.env.REACT_APP_AUTH_KEY_NAME,\n      json.data.access_token\n    );\n    yield put({ type: populate().type, payload: { data: userStoreData } });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(attempt().type, triggerApi);\n}\n","export const login = \"/login\";\n\nexport const identity = \"/identity\";\nexport const updateProfile = \"/update-profile\";\nexport const changePassword = \"/change-password\";\n\nexport const dashboardData = \"/dashboard/data\";\n\nexport const personCreate = \"/person/store\";\nexport const personRead = \"/person/_ID_/read\";\nexport const personUpdate = \"/person/_ID_/update\";\nexport const personDelete = \"/person/_ID_/delete\";\nexport const personList = \"/persons\";\n\nexport const treeCreate = \"/tree/store\";\nexport const treeRead = \"/tree/_ID_/read\";\nexport const treeUpdate = \"/tree/_ID_/update\";\nexport const treeDelete = \"/tree/_ID_/delete\";\nexport const treeList = \"/trees\";\n\nexport const zoneCreate = \"/zone/store\";\nexport const zoneRead = \"/zone/_ID_/read\";\nexport const zoneUpdate = \"/zone/_ID_/update\";\nexport const zoneDelete = \"/zone/_ID_/delete\";\nexport const zoneList = \"/zones\";\n\nexport const sectorCreate = \"/sector/store\";\nexport const sectorRead = \"/sector/_ID_/read\";\nexport const sectorUpdate = \"/sector/_ID_/update\";\nexport const sectorDelete = \"/sector/_ID_/delete\";\nexport const sectorList = \"/sectors\";\n\nexport const illnessCreate = \"/illness/store\";\nexport const illnessRead = \"/illness/_ID_/read\";\nexport const illnessUpdate = \"/illness/_ID_/update\";\nexport const illnessDelete = \"/illness/_ID_/delete\";\nexport const illnessList = \"/illnesses\";\n\nexport const rawMaterialCreate = \"/raw-material/store\";\nexport const rawMaterialRead = \"/raw-material/_ID_/read\";\nexport const rawMaterialUpdate = \"/raw-material/_ID_/update\";\nexport const rawMaterialDelete = \"/raw-material/_ID_/delete\";\nexport const rawMaterialList = \"/raw-materials\";\n\nexport const agriculturalPracticeCreate = \"/agricultural-practice/store\";\nexport const agriculturalPracticeRead = \"/agricultural-practice/_ID_/read\";\nexport const agriculturalPracticeUpdate = \"/agricultural-practice/_ID_/update\";\nexport const agriculturalPracticeDelete = \"/agricultural-practice/_ID_/delete\";\nexport const agriculturalPracticeList = \"/agricultural-practices\";\n\nexport const workPlanCreate = \"/work-plan/store\";\nexport const workPlanRead = \"/work-plan/_ID_/read\";\nexport const workPlanUpdate = \"/work-plan/_ID_/update\";\nexport const workPlanDelete = \"/work-plan/_ID_/delete\";\nexport const workPlanList = \"/work-plans\";\n\nexport const purchaseCreate = \"/purchase/store\";\nexport const purchaseRead = \"/purchase/_ID_/read\";\nexport const purchaseUpdate = \"/purchase/_ID_/update\";\nexport const purchaseDelete = \"/purchase/_ID_/delete\";\nexport const purchaseList = \"/purchases\";\n\nexport const expertMonitorCreate = \"/tree-illness/store\";\nexport const expertMonitorRead = \"/tree-illness/_ID_/read\";\nexport const expertMonitorUpdate = \"/tree-illness/_ID_/update\";\nexport const expertMonitorDelete = \"/tree-illness/_ID_/delete\";\nexport const expertMonitorList = \"/tree-illnesses\";\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { flush, populate, sync } from \"../../redux/Identity\";\nimport { readData, success, failed } from \"../../redux/Page/Profile\";\nimport { makeRequest } from \"../../../utils/requestHelper\";\nimport { identity } from \"../../../utils/apiConstants\";\nimport { setToastData } from \"../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(`${process.env.REACT_APP_API_URL}${identity}`);\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: populate().type, payload: json }),\n      put({ type: success().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield all([\n      put({ type: flush().type, payload: json }),\n      put({ type: failed().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest([sync().type, readData().type], triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, changePassword, success } from \"../../../redux/Page/Profile\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { changePassword as changePasswordApi } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${changePasswordApi}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(changePassword().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, updateData, success } from \"../../../redux/Page/Profile\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { updateProfile } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${updateProfile}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({ type: readData().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { attempt, failed, success } from \"../../redux/Page/Dashboard\";\nimport { makeRequest } from \"../../../utils/requestHelper\";\nimport { dashboardData } from \"../../../utils/apiConstants\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${dashboardData}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(attempt().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchList, successList, failedList } from \"../../../redux/Page/Person\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { personList } from \"../../../../utils/apiConstants\";\nimport {\n  fetchAllCollaborators,\n  setAllCollaborators,\n} from \"../../../redux/Page/WorkPlan\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${personList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successList().type, payload: json }),\n      put({ type: setAllCollaborators().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({ type: failedList().type, payload: json }),\n      put({ type: setAllCollaborators().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [fetchList().type, fetchAllCollaborators().type],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { storeData, success, failed } from \"../../../redux/Page/Person\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { personCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${personCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Person\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { personRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${personRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, updateData } from \"../../../redux/Page/Person\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { personUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${personUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, deleteData } from \"../../../redux/Page/Person\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { personDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${personDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Tree\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { treeList } from \"../../../../utils/apiConstants\";\nimport {\n  fetchAllTrees as fetchAllTreesExpertMonitor,\n  setAllTrees as setAllTreesExpertMonitor,\n} from \"../../../redux/Page/ExpertMonitor\";\nimport {\n  fetchAllTrees as fetchAllTreesSector,\n  setAllTrees as setAllTreesSector,\n} from \"../../../redux/Page/Sector\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  // console.log(\"queryString: \", queryString)\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${treeList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successList().type, payload: json }),\n      put({ type: setAllTreesExpertMonitor().type, payload: json }),\n      put({ type: setAllTreesSector().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield all([\n      put({ type: failedList().type, payload: json }),\n      put({ type: setAllTreesExpertMonitor().type, payload: json }),\n      put({ type: setAllTreesSector().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [\n      fetchList().type,\n      fetchAllTreesExpertMonitor().type,\n      fetchAllTreesSector().type,\n    ],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/Tree\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { treeCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${treeCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Tree\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { treeRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${treeRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, updateData } from \"../../../redux/Page/Tree\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { treeUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${treeUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload.formData\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { deleteData, failed, success } from \"../../../redux/Page/Tree\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { treeDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${treeDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Zone\";\nimport {\n  fetchAllZones as fetchAllZonesForTree,\n  setAllZones as setAllZonesForTree,\n} from \"../../../redux/Page/Tree\";\nimport {\n  fetchAllZones as fetchAllZonesForWorkPlan,\n  setAllZones as setAllZonesForWorkPlan,\n} from \"../../../redux/Page/WorkPlan\";\nimport {\n  fetchAllZones as fetchAllZonesForWorkCertificate,\n  setAllZones as setAllZonesForWorkCertificate,\n} from \"../../../redux/Page/WorkCertificate\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { zoneList } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${zoneList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successList().type, payload: json }),\n      put({ type: setAllZonesForTree().type, payload: json }),\n      put({ type: setAllZonesForWorkPlan().type, payload: json }),\n      put({ type: setAllZonesForWorkCertificate().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({ type: failedList().type, payload: json }),\n      put({ type: setAllZonesForTree().type, payload: { data: [] } }),\n      put({ type: setAllZonesForWorkPlan().type, payload: json }),\n      put({ type: setAllZonesForWorkCertificate().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [\n      fetchList().type,\n      fetchAllZonesForTree().type,\n      fetchAllZonesForWorkPlan().type,\n      fetchAllZonesForWorkCertificate().type,\n    ],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/Zone\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { zoneCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${zoneCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Zone\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { zoneRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${zoneRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, updateData, success } from \"../../../redux/Page/Zone\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { zoneUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${zoneUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, deleteData, success } from \"../../../redux/Page/Zone\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { zoneDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${zoneDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { failedList, fetchList, successList } from \"../../../redux/Page/Sector\";\nimport {\n  setAllSectors as setAllSectorsForTree,\n  fetchAllSectors as fetchAllSectorsForTree,\n} from \"../../../redux/Page/Tree\";\nimport {\n  setAllSectors as setAllSectorsForWorkPlan,\n  fetchAllSectors as fetchAllSectorsForWorkPlan,\n} from \"../../../redux/Page/WorkPlan\";\nimport {\n  setAllSectors as setAllSectorsForWorkCertificate,\n  fetchAllSectors as fetchAllSectorsForWorkCertificate,\n} from \"../../../redux/Page/WorkCertificate\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { sectorList } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${sectorList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successList().type, payload: json }),\n      put({ type: setAllSectorsForTree().type, payload: json }),\n      put({ type: setAllSectorsForWorkPlan().type, payload: json }),\n      put({ type: setAllSectorsForWorkCertificate().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({ type: failedList().type, payload: json }),\n      put({\n        type: setAllSectorsForTree().type,\n        payload: { data: { dbData: [] } },\n      }),\n      put({ type: setAllSectorsForWorkPlan().type, payload: { data: json } }),\n      put({\n        type: setAllSectorsForWorkCertificate().type,\n        payload: { data: json },\n      }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [\n      fetchList().type,\n      fetchAllSectorsForTree().type,\n      fetchAllSectorsForWorkPlan().type,\n      fetchAllSectorsForWorkCertificate().type,\n    ],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/Sector\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { sectorCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${sectorCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Sector\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { sectorRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${sectorRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, updateData, success } from \"../../../redux/Page/Sector\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { sectorUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${sectorUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, deleteData, success } from \"../../../redux/Page/Sector\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { sectorDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${sectorDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  fetchList,\n  successList,\n  failedList,\n} from \"../../../redux/Page/Illness\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { illnessList } from \"../../../../utils/apiConstants\";\nimport {\n  fetchAllIllnesses as fetchAllIllnessesExpertMonitor,\n  setAllIllnesses as setAllIllnessesExpertMonitor,\n} from \"../../../redux/Page/ExpertMonitor\";\nimport {\n  fetchAllIllnesses as fetchAllIllnessesSector,\n  setAllIllnesses as setAllIllnessesSector,\n} from \"../../../redux/Page/Sector\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${illnessList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: successList().type, payload: json });\n    yield put({ type: setAllIllnessesExpertMonitor().type, payload: json });\n    yield put({ type: setAllIllnessesSector().type, payload: json });\n  } else {\n    yield put({ type: failedList().type, payload: json });\n    yield put({ type: setAllIllnessesExpertMonitor().type, payload: json });\n    yield put({ type: setAllIllnessesSector().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [\n      fetchList().type,\n      fetchAllIllnessesExpertMonitor().type,\n      fetchAllIllnessesSector().type,\n    ],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { storeData, success, failed } from \"../../../redux/Page/Illness\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { illnessCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${illnessCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Illness\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { illnessRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${illnessRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, updateData } from \"../../../redux/Page/Illness\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { illnessUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${illnessUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload.formData\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, deleteData } from \"../../../redux/Page/Illness\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { illnessDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${illnessDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failedList,\n  fetchList,\n  successList,\n} from \"../../../redux/Page/RawMaterial\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { rawMaterialList } from \"../../../../utils/apiConstants\";\nimport {\n  fetchAllRawMaterials as fetchAllRawMaterialsForAgriculturalPractice,\n  setAllRawMaterials as setAllRawMaterialsForAgriculturalPractice,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport {\n  fetchAllRawMaterials as fetchAllRawMaterialsForPurchase,\n  setAllRawMaterials as setAllRawMaterialsForPurchase,\n} from \"../../../redux/Page/Purchase\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${rawMaterialList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: successList().type, payload: json });\n    yield put({\n      type: setAllRawMaterialsForAgriculturalPractice().type,\n      payload: json,\n    });\n    yield put({ type: setAllRawMaterialsForPurchase().type, payload: json });\n  } else {\n    yield put({ type: failedList().type, payload: json });\n    yield put({\n      type: setAllRawMaterialsForAgriculturalPractice().type,\n      payload: { data: { dbData: [] } },\n    });\n    yield put({\n      type: setAllRawMaterialsForPurchase().type,\n      payload: { data: { dbData: [] } },\n    });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [\n      fetchList().type,\n      fetchAllRawMaterialsForAgriculturalPractice().type,\n      fetchAllRawMaterialsForPurchase().type,\n    ],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { storeData, success, failed } from \"../../../redux/Page/RawMaterial\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { rawMaterialCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${rawMaterialCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/RawMaterial\";\nimport {\n  successDefaultFolialDrenche as agriculturalPracticeSuccessDefaultFolialDrenche,\n  failedDefaultFolialDrenche as agriculturalPracticeFailedDefaultFolialDrenche,\n  initFormData as agriculturalPracticeInitFormData,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { rawMaterialRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${rawMaterialRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    if (\n      action.payload.actionType &&\n      action.payload.actionType === \"loadDefaultFolialDrenche\"\n    ) {\n      yield put({\n        type: agriculturalPracticeSuccessDefaultFolialDrenche().type,\n        payload: json,\n      });\n    }\n  } else {\n    yield put({ type: failed().type, payload: json });\n    if (\n      action.payload.actionType &&\n      action.payload.actionType === \"loadDefaultFolialDrenche\"\n    ) {\n      yield put({\n        type: agriculturalPracticeFailedDefaultFolialDrenche().type,\n        payload: json,\n      });\n    }\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [readData().type, agriculturalPracticeInitFormData().type],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, updateData } from \"../../../redux/Page/RawMaterial\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { rawMaterialUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${rawMaterialUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload.formData\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, success, deleteData } from \"../../../redux/Page/RawMaterial\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { rawMaterialDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${rawMaterialDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failedList,\n  fetchList,\n  successList,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { agriculturalPracticeList } from \"../../../../utils/apiConstants\";\nimport {\n  fetchAllAgriculturalPractices,\n  setAllAgriculturalPractices,\n} from \"../../../redux/Page/WorkPlan\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successList().type, payload: json }),\n      put({ type: setAllAgriculturalPractices().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({\n        type: setToastData().type,\n        payload: { type: \"error\", message: json.message },\n      }),\n      put({ type: failedList().type, payload: json }),\n      put({ type: setAllAgriculturalPractices().type, payload: json }),\n    ]);\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [fetchList().type, fetchAllAgriculturalPractices().type],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failed,\n  storeData,\n  success,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { agriculturalPracticeCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failed,\n  readData,\n  success,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { agriculturalPracticeRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failed,\n  updateData,\n  success,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { agriculturalPracticeUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failed,\n  deleteData,\n  success,\n} from \"../../../redux/Page/AgriculturalPractice\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { agriculturalPracticeDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${agriculturalPracticeDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failedList as failedListWorkPlan,\n  fetchList as fetchListWorkPlan,\n  successList as successListWorkPlan,\n} from \"../../../redux/Page/WorkPlan\";\nimport {\n  failedList as failedListWorkCertificate,\n  fetchList as fetchListWorkCertificate,\n  successList as successListWorkCertificate,\n} from \"../../../redux/Page/WorkCertificate\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { workPlanList } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in JSON.parse(JSON.stringify(action.payload))) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${workPlanList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successListWorkPlan().type, payload: json }),\n      put({ type: successListWorkCertificate().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({ type: failedListWorkPlan().type, payload: json }),\n      put({ type: failedListWorkCertificate().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [fetchListWorkPlan().type, fetchListWorkCertificate().type],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/WorkPlan\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { workPlanCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${workPlanCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failed as failedWorkPlan,\n  readData as readDataWorkPlan,\n  success as successWorkPlan,\n} from \"../../../redux/Page/WorkPlan\";\nimport {\n  failed as failedWorkCertificate,\n  readData as readDataWorkCertificate,\n  success as successWorkCertificate,\n} from \"../../../redux/Page/WorkCertificate\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { workPlanRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${workPlanRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([\n      put({ type: successWorkPlan().type, payload: json }),\n      put({ type: successWorkCertificate().type, payload: json }),\n    ]);\n  } else {\n    yield all([\n      put({ type: failedWorkPlan().type, payload: json }),\n      put({ type: failedWorkCertificate().type, payload: json }),\n    ]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(\n    [readDataWorkPlan().type, readDataWorkCertificate().type],\n    triggerApi\n  );\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, updateData, success } from \"../../../redux/Page/WorkPlan\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { workPlanUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${workPlanUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, deleteData, success } from \"../../../redux/Page/WorkPlan\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { workPlanDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${workPlanDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failedList,\n  fetchList,\n  successList,\n} from \"../../../redux/Page/Purchase\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { purchaseList } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${purchaseList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([put({ type: successList().type, payload: json })]);\n  } else {\n    yield all([put({ type: failedList().type, payload: json })]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest([fetchList().type], triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/Purchase\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { purchaseCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${purchaseCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/Purchase\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { purchaseRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${purchaseRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, updateData, success } from \"../../../redux/Page/Purchase\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { purchaseUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${purchaseUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, deleteData, success } from \"../../../redux/Page/Purchase\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { purchaseDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${purchaseDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  failedList,\n  fetchList,\n  successList,\n} from \"../../../redux/Page/ExpertMonitor\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { expertMonitorList } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  let queryString = \"\";\n  if (action.payload) {\n    queryString += \"?\";\n    for (const property in action.payload) {\n      queryString += `${property}=${action.payload[property]}&`;\n    }\n    queryString = queryString.slice(0, -1);\n  }\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${expertMonitorList}${queryString}`\n  );\n\n  if (json.status === \"success\") {\n    yield all([put({ type: successList().type, payload: json })]);\n  } else {\n    yield all([put({ type: failedList().type, payload: json })]);\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest([fetchList().type], triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, storeData, success } from \"../../../redux/Page/ExpertMonitor\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { expertMonitorCreate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${expertMonitorCreate}`,\n    \"POST\",\n    action.payload\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(storeData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, readData, success } from \"../../../redux/Page/ExpertMonitor\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { expertMonitorRead } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${expertMonitorRead.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(readData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, updateData, success } from \"../../../redux/Page/ExpertMonitor\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { expertMonitorUpdate } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${expertMonitorUpdate.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"PUT\",\n    action.payload.formData\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(updateData().type, triggerApi);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { failed, deleteData, success } from \"../../../redux/Page/ExpertMonitor\";\nimport { makeRequest } from \"../../../../utils/requestHelper\";\nimport { expertMonitorDelete } from \"../../../../utils/apiConstants\";\nimport { setToastData } from \"../../../redux/Function/Toast\";\n\nfunction* triggerApi(action) {\n  const json = yield makeRequest(\n    `${process.env.REACT_APP_API_URL}${expertMonitorDelete.replace(\n      \"_ID_\",\n      action.payload.id\n    )}`,\n    \"DELETE\"\n  );\n\n  if (json.status === \"success\") {\n    yield put({ type: success().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"success\", message: json.message },\n    });\n  } else {\n    yield put({ type: failed().type, payload: json });\n    yield put({\n      type: setToastData().type,\n      payload: { type: \"error\", message: json.message },\n    });\n  }\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(deleteData().type, triggerApi);\n}\n","import { select, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  setToastData,\r\n  resetToastData,\r\n  selectToast,\r\n} from \"../../redux/Function/Toast\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction* triggerFunction(action) {\r\n  const state = yield select(selectToast);\r\n  const toastSettings = {\r\n    ...state.toastSettings,\r\n    onClose: () => put({ type: resetToastData().type, payload: {} }),\r\n  };\r\n\r\n  if (action.payload.message && action.payload.message !== \"\") {\r\n    switch (state.type) {\r\n      case \"info\":\r\n        toast.info(action.payload.message, toastSettings);\r\n        break;\r\n      case \"success\":\r\n        toast.success(action.payload.message, toastSettings);\r\n        break;\r\n      case \"warn\":\r\n        toast.warn(action.payload.message, toastSettings);\r\n        break;\r\n      case \"error\":\r\n        toast.error(action.payload.message, toastSettings);\r\n        break;\r\n      default:\r\n        toast(action.payload.message, toastSettings);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* actionWatcher() {\r\n  yield takeLatest(setToastData().type, triggerFunction);\r\n}\r\n","import { all } from \"redux-saga/effects\";\n\nimport loginActionWatcher from \"./Api/Login\";\nimport identityActionWatcher from \"./Api/Identity\";\nimport changePasswordActionWatcher from \"./Api/Profile/ChangePassword\";\nimport updateProfileActionWatcher from \"./Api/Profile/UpdateProfile\";\nimport dashboardActionWatcher from \"./Api/DashboardData\";\n\nimport personListActionWatcher from \"./Api/Person/List\";\nimport personCreateActionWatcher from \"./Api/Person/Create\";\nimport personReadActionWatcher from \"./Api/Person/Read\";\nimport personUpdateActionWatcher from \"./Api/Person/Update\";\nimport personDeleteActionWatcher from \"./Api/Person/Delete\";\n\nimport treeListActionWatcher from \"./Api/Tree/List\";\nimport treeCreateActionWatcher from \"./Api/Tree/Create\";\nimport treeReadActionWatcher from \"./Api/Tree/Read\";\nimport treeUpdateActionWatcher from \"./Api/Tree/Update\";\nimport treeDeleteActionWatcher from \"./Api/Tree/Delete\";\n\nimport zoneListActionWatcher from \"./Api/Zone/List\";\nimport zoneCreateActionWatcher from \"./Api/Zone/Create\";\nimport zoneReadActionWatcher from \"./Api/Zone/Read\";\nimport zoneUpdateActionWatcher from \"./Api/Zone/Update\";\nimport zoneDeleteActionWatcher from \"./Api/Zone/Delete\";\n\nimport sectorListActionWatcher from \"./Api/Sector/List\";\nimport sectorCreateActionWatcher from \"./Api/Sector/Create\";\nimport sectorReadActionWatcher from \"./Api/Sector/Read\";\nimport sectorUpdateActionWatcher from \"./Api/Sector/Update\";\nimport sectorDeleteActionWatcher from \"./Api/Sector/Delete\";\n\nimport illnessListActionWatcher from \"./Api/Illness/List\";\nimport illnessCreateActionWatcher from \"./Api/Illness/Create\";\nimport illnessReadActionWatcher from \"./Api/Illness/Read\";\nimport illnessUpdateActionWatcher from \"./Api/Illness/Update\";\nimport illnessDeleteActionWatcher from \"./Api/Illness/Delete\";\n\nimport rawMaterialListActionWatcher from \"./Api/RawMaterial/List\";\nimport rawMaterialCreateActionWatcher from \"./Api/RawMaterial/Create\";\nimport rawMaterialReadActionWatcher from \"./Api/RawMaterial/Read\";\nimport rawMaterialUpdateActionWatcher from \"./Api/RawMaterial/Update\";\nimport rawMaterialDeleteActionWatcher from \"./Api/RawMaterial/Delete\";\n\nimport agriculturalPracticeListActionWatcher from \"./Api/AgriculturalPractice/List\";\nimport agriculturalPracticeCreateActionWatcher from \"./Api/AgriculturalPractice/Create\";\nimport agriculturalPracticeReadActionWatcher from \"./Api/AgriculturalPractice/Read\";\nimport agriculturalPracticeUpdateActionWatcher from \"./Api/AgriculturalPractice/Update\";\nimport agriculturalPracticeDeleteActionWatcher from \"./Api/AgriculturalPractice/Delete\";\n\nimport workPlanListActionWatcher from \"./Api/WorkPlan/List\";\nimport workPlanCreateActionWatcher from \"./Api/WorkPlan/Create\";\nimport workPlanReadActionWatcher from \"./Api/WorkPlan/Read\";\nimport workPlanUpdateActionWatcher from \"./Api/WorkPlan/Update\";\nimport workPlanDeleteActionWatcher from \"./Api/WorkPlan/Delete\";\n\nimport purchaseListActionWatcher from \"./Api/Purchase/List\";\nimport purchaseCreateActionWatcher from \"./Api/Purchase/Create\";\nimport purchaseReadActionWatcher from \"./Api/Purchase/Read\";\nimport purchaseUpdateActionWatcher from \"./Api/Purchase/Update\";\nimport purchaseDeleteActionWatcher from \"./Api/Purchase/Delete\";\n\nimport expertMonitorListActionWatcher from \"./Api/ExpertMonitor/List\";\nimport expertMonitorCreateActionWatcher from \"./Api/ExpertMonitor/Create\";\nimport expertMonitorReadActionWatcher from \"./Api/ExpertMonitor/Read\";\nimport expertMonitorUpdateActionWatcher from \"./Api/ExpertMonitor/Update\";\nimport expertMonitorDeleteActionWatcher from \"./Api/ExpertMonitor/Delete\";\n\nimport toastActionWatcher from \"./Function/Toast\";\n\nexport default function* rootSaga() {\n  yield all([\n    loginActionWatcher(),\n\n    identityActionWatcher(),\n    changePasswordActionWatcher(),\n    updateProfileActionWatcher(),\n\n    dashboardActionWatcher(),\n\n    personListActionWatcher(),\n    personCreateActionWatcher(),\n    personReadActionWatcher(),\n    personUpdateActionWatcher(),\n    personDeleteActionWatcher(),\n\n    treeListActionWatcher(),\n    treeCreateActionWatcher(),\n    treeReadActionWatcher(),\n    treeUpdateActionWatcher(),\n    treeDeleteActionWatcher(),\n\n    zoneListActionWatcher(),\n    zoneCreateActionWatcher(),\n    zoneReadActionWatcher(),\n    zoneUpdateActionWatcher(),\n    zoneDeleteActionWatcher(),\n\n    sectorListActionWatcher(),\n    sectorCreateActionWatcher(),\n    sectorReadActionWatcher(),\n    sectorUpdateActionWatcher(),\n    sectorDeleteActionWatcher(),\n\n    illnessListActionWatcher(),\n    illnessCreateActionWatcher(),\n    illnessReadActionWatcher(),\n    illnessUpdateActionWatcher(),\n    illnessDeleteActionWatcher(),\n\n    rawMaterialListActionWatcher(),\n    rawMaterialCreateActionWatcher(),\n    rawMaterialReadActionWatcher(),\n    rawMaterialUpdateActionWatcher(),\n    rawMaterialDeleteActionWatcher(),\n\n    agriculturalPracticeListActionWatcher(),\n    agriculturalPracticeCreateActionWatcher(),\n    agriculturalPracticeReadActionWatcher(),\n    agriculturalPracticeUpdateActionWatcher(),\n    agriculturalPracticeDeleteActionWatcher(),\n\n    workPlanListActionWatcher(),\n    workPlanCreateActionWatcher(),\n    workPlanReadActionWatcher(),\n    workPlanUpdateActionWatcher(),\n    workPlanDeleteActionWatcher(),\n\n    purchaseListActionWatcher(),\n    purchaseCreateActionWatcher(),\n    purchaseReadActionWatcher(),\n    purchaseUpdateActionWatcher(),\n    purchaseDeleteActionWatcher(),\n\n    expertMonitorListActionWatcher(),\n    expertMonitorCreateActionWatcher(),\n    expertMonitorReadActionWatcher(),\n    expertMonitorUpdateActionWatcher(),\n    expertMonitorDeleteActionWatcher(),\n\n\n    toastActionWatcher()\n  ]);\n}\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./redux\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [\n    ...getDefaultMiddleware({\n      thunk: false,\n      serializableCheck: false,\n    }),\n    sagaMiddleware,\n  ],\n});\nsagaMiddleware.run(rootSaga);\n\n// console.log(store.getState(), 8888, leftMenu);\n// store.subscribe(() => {\n//     console.log(\"Action fired on Store!\", store.getState());\n// });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./LeftSideBar.scss\";\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport pluralize from \"pluralize\";\nimport {\n  faAtom,\n  faClipboardList,\n  faCog,\n  faCrosshairs,\n  faCube,\n  faDesktop,\n  faDolly,\n  faFileAlt,\n  faFileInvoice,\n  faMapMarkerAlt,\n  faPencilAlt,\n  faShareAlt,\n  faShoppingCart,\n  faSkullCrossbones,\n  faTree,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faElementor } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction LeftSideBar() {\n  const location = useLocation();\n  const history = useHistory();\n  const [sidebarLinks, setSideBarLinks] = useState([\n    {\n      name: \"Dashboard\",\n      icon: faCube,\n      link: \"/dashboard\",\n      active: false,\n    },\n    {\n      name: \"Settings\",\n      icon: faCog,\n      link: \"\",\n      active: false,\n      children: [\n        {\n          name: \"Person\",\n          icon: faUser,\n          link: \"/persons\",\n          active: false,\n        },\n        {\n          name: \"Tree\",\n          icon: faTree,\n          link: \"/trees\",\n          active: false,\n        },\n        {\n          name: \"Zone\",\n          icon: faDolly,\n          link: \"/zones\",\n          active: false,\n        },\n        {\n          name: \"Sector\",\n          icon: faMapMarkerAlt,\n          link: \"/sectors\",\n          active: false,\n        },\n        {\n          name: \"Illness\",\n          icon: faSkullCrossbones,\n          link: \"/illnesses\",\n          active: false,\n        },\n        {\n          name: \"Raw Material\",\n          icon: faAtom,\n          link: \"/raw-materials\",\n          active: false,\n        },\n      ],\n    },\n    {\n      name: \"Agricultural Practice\",\n      icon: faShareAlt,\n      link: \"/agricultural-practices\",\n      active: false,\n    },\n    {\n      name: \"Plan\",\n      icon: faClipboardList,\n      link: \"\",\n      active: false,\n      children: [\n        {\n          name: \"Work Plan\",\n          icon: faElementor,\n          link: \"/work-plans\",\n          active: false,\n        },\n      ],\n    },\n    {\n      name: \"Purchase\",\n      icon: faShoppingCart,\n      link: \"/purchases\",\n      active: false,\n    },\n    {\n      name: \"Expert Monitors\",\n      icon: faDesktop,\n      link: \"/expert-monitors\",\n      active: false,\n    },\n    {\n      name: \"Reports\",\n      icon: faFileAlt,\n      link: \"\",\n      active: false,\n      children: [\n        {\n          name: \"Work Certificate\",\n          icon: faFileInvoice,\n          link: \"/work-certificates\",\n          active: false,\n        },\n        {\n          name: \"ArcGis\",\n          icon: faCrosshairs,\n          link: \"/arcgis\",\n          active: false,\n        },\n      ],\n    },\n    {\n      name: \"PayRoll\",\n      icon: faDesktop,\n      link: \"/payroll\",\n      active: false,\n    },\n  ]);\n\n  const sidebarUpdate = (newLocation) => {\n    const sidebarLinksCopy = [...sidebarLinks];\n    sidebarLinks.forEach((data, index) => {\n      const parentRegex = new RegExp(\n        `(/${pluralize.singular(data.link.replace(\"/\", \"\"))})($|s|es|(/.*))`,\n        \"ig\"\n      );\n      let parentMatched = parentRegex.test(newLocation.pathname);\n      if (data.children) {\n        parentMatched = false;\n        data.children.forEach((subData, subIndex) => {\n          const childRegex = new RegExp(\n            `(/${pluralize.singular(\n              subData.link.replace(\"/\", \"\")\n            )})($|s|es|(/.*))`,\n            \"ig\"\n          );\n          const childMatched = childRegex.test(newLocation.pathname);\n          sidebarLinksCopy[index].children[subIndex].active = childMatched;\n          if (childMatched === true) {\n            parentMatched = childMatched;\n          }\n        });\n      }\n      sidebarLinksCopy[index].active = parentMatched;\n    });\n    setSideBarLinks(sidebarLinksCopy);\n  };\n\n  useEffect(() => {\n    sidebarUpdate(location);\n    let unListen = history.listen((newLocation) => sidebarUpdate(newLocation));\n\n    return () => {\n      unListen();\n    };\n  }, []);\n\n  return (\n    <aside\n      id=\"leftSideBarMenu\"\n      className=\"col-md-3 col-lg-2 d-md-block collapse bg-app sidebar\"\n    >\n      <nav className=\"sidebar-sticky\">\n        <ul className=\"nav flex-column\" id=\"accordionFlushMenu\">\n          {sidebarLinks.map((data, index) => (\n            <li key={index} className=\"nav-item\">\n              {data.children && data.children.length > 0 ? (\n                <div className=\"accordion accordion-flush\">\n                  <div className={`accordion-item`}>\n                    <h2\n                      className={`accordion-header`}\n                      id={`leftMenu-flush-heading${index}`}\n                    >\n                      <button\n                        className={`accordion-button bg-app nav-link ${\n                          data.active === true ? \"active\" : \"collapsed\"\n                        }`}\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        data-bs-target={`#leftMenu-flush-collapse${index}`}\n                        aria-expanded=\"false\"\n                        aria-controls={`#leftMenu-flush-collapse${index}`}\n                      >\n                        <span>\n                          <FontAwesomeIcon className=\"me-2\" icon={data.icon} />\n                        </span>\n                        {data.name}\n                      </button>\n                    </h2>\n                    <div\n                      id={`leftMenu-flush-collapse${index}`}\n                      className={`bg-app accordion-collapse collapse ${\n                        data.active === true ? \"show\" : \"\"\n                      }`}\n                      aria-labelledby={`leftMenu-flush-heading${index}`}\n                      data-bs-parent=\"#accordionFlushMenu\"\n                    >\n                      <div className=\"accordion-body\">\n                        <ul className=\"nav flex-column\">\n                          {data.children.map((subData, subIndex) => (\n                            <li key={subIndex} className=\"nav-item\">\n                              <NavLink\n                                className={`nav-link`}\n                                aria-current=\"page\"\n                                activeClassName={`active`}\n                                isActive={() => subData.active}\n                                to={subData.link}\n                              >\n                                <span>\n                                  <FontAwesomeIcon\n                                    className=\"me-2\"\n                                    icon={subData.icon}\n                                  />\n                                </span>\n                                {subData.name}\n                              </NavLink>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <NavLink\n                  className={`nav-link`}\n                  aria-current=\"page\"\n                  to={data.link}\n                  activeClassName=\"active\"\n                  isActive={() => data.active}\n                >\n                  <span>\n                    <FontAwesomeIcon className=\"me-2\" icon={data.icon} />\n                  </span>\n                  {data.name}\n                </NavLink>\n              )}\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </aside>\n  );\n}\n\nexport default LeftSideBar;\n","import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"bootstrap\";\nimport \"./Header.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { flush, selectIdentity } from \"../../../store/redux/Identity\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Header() {\n  const store = useSelector(selectIdentity);\n  const dispatch = useDispatch();\n  let [toggle, setToggle] = useState(false);\n\n  const _logout = (e) => {\n    e.preventDefault();\n    dispatch(flush());\n  };\n\n  useEffect(() => {\n    let myCollapse = document.getElementById(\"leftSideBarMenu\");\n    let bsCollapse = new Collapse(myCollapse, { toggle: false });\n    toggle ? bsCollapse.show() : bsCollapse.hide();\n  });\n\n  return (\n    <header className=\"navbar navbar-expand-md navbar-light bg-light fixed-top shadow border-app p-0\">\n      {/*className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top flex-md-nowrap p-0 shadow border-app\">*/}\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"/\">\n          <img\n            className=\"rounded-circle me-2\"\n            src=\"/admin/image/logo512.png\"\n            height=\"32\"\n            width=\"32\"\n            alt=\"logo\"\n          />\n        </a>\n        <button\n          className=\"navbar-toggler d-md-none collapsed\"\n          type=\"button\"\n          aria-controls=\"leftSideBarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle left navigation\"\n          onClick={() => setToggle((currentToggle) => !currentToggle)}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"navbar-nav\">\n          <div className=\"nav-item text-nowrap\">\n            <div className=\"dropdown\">\n              <button\n                className=\"btn btn-primary dropdown-toggle bg-light text-dark border-0\"\n                type=\"button\"\n                id=\"userMenu\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <img\n                  className=\"rounded-circle me-2\"\n                  src=\"/logo192_bck.png\"\n                  height=\"32\"\n                  width=\"32\"\n                  alt=\"user\"\n                />\n                <span>{`${store.userData.firstName} ${store.userData.lastName}`}</span>\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"userMenu\">\n                <li>\n                  <NavLink className=\"dropdown-item\" to=\"/profile/edit\">\n                    Edit Profile\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink className=\"dropdown-item\" to=\"/change-password\">\n                    Change Password\n                  </NavLink>\n                </li>\n                <li>\n                  <button className=\"dropdown-item btn btn-link\" onClick={_logout}>\n                    Logout\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\n// Main Footer\nfunction Footer() {\n  return (\n    <footer className=\"footer offset-md-3 offset-lg-2 mt-auto py-3 bg-light shadow border-app fixed-bottom\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <strong>\n              Copyright &copy; 2014-{new Date().getFullYear()}{\" \"}\n              <a href=\"/\">El Cateo</a>.\n            </strong>{\" \"}\n            All rights reserved.\n          </div>\n\n          <div className=\"col-6 text-end d-none d-sm-inline-block\">\n            <b>Version</b> 1.1.0\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIdentity, sync } from \"../../store/redux/Identity\";\nimport \"./AuthLayout.scss\";\nimport LeftSideBar from \"../../components/layout/leftsidebar/LeftSideBar\";\nimport Header from \"../../components/layout/header/Header\";\nimport Footer from \"../../components/layout/footer/Footer\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction AuthLayout({ children }) {\n  const store = useSelector(selectIdentity);\n  const dispatch = useDispatch();\n  let checkIdentity;\n\n  useEffect(() => {\n    dispatch(sync());\n    checkIdentity = setInterval(() => dispatch(sync()), 1200000);\n  }, []);\n\n  useEffect(() => () => clearInterval(checkIdentity), []);\n\n  return store.auth === false && store.loading === false ? (\n    <Redirect to=\"/login\" />\n  ) : (\n    <>\n      <Header />\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <LeftSideBar />\n          <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-3 mb-5\">\n            {children}\n          </main>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default AuthLayout;\n","import React, {lazy} from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authCheck } from \"../utils/authHelper\";\nimport AuthLayout from \"../layout/AuthLayout\";\n\nconst Dashboard = lazy(() => import(\"../pages/dashboard/Dashboard\"));\n\nconst ChangePassword = lazy(() => import(\"../pages/profile/changePassword/ChangePassword\"));\nconst EditProfile = lazy(() => import(\"../pages/profile/editProfile/EditProfile\"));\n\nconst ArcGis = lazy(() => import(\"../pages/arcGis/ArcGis\"));\n\nconst PersonList = lazy(() => import(\"../pages/persons/list/List\"));\nconst PersonCreate = lazy(() => import(\"../pages/persons/create/Create\"));\nconst PersonEdit = lazy(() => import(\"../pages/persons/edit/Edit\"));\nconst PersonView = lazy(() => import(\"../pages/persons/view/View\"));\n\nconst TreeList = lazy(() => import(\"../pages/trees/list/List\"));\nconst TreeCreate = lazy(() => import(\"../pages/trees/create/Create\"));\nconst TreeEdit = lazy(() => import(\"../pages/trees/edit/Edit\"));\nconst TreeView = lazy(() => import(\"../pages/trees/view/View\"));\n\nconst ZoneList = lazy(() => import(\"../pages/zones/list/List\"));\nconst ZoneCreate = lazy(() => import(\"../pages/zones/create/Create\"));\nconst ZoneEdit = lazy(() => import(\"../pages/zones/edit/Edit\"));\nconst ZoneView = lazy(() => import(\"../pages/zones/view/View\"));\n\nconst SectorList = lazy(() => import(\"../pages/sectors/list/List\"));\nconst SectorCreate = lazy(() => import(\"../pages/sectors/create/Create\"));\nconst SectorEdit = lazy(() => import(\"../pages/sectors/edit/Edit\"));\nconst SectorView = lazy(() => import(\"../pages/sectors/view/View\"));\n\nconst IllnessList = lazy(() => import(\"../pages/illnesses/list/List\"));\nconst IllnessCreate = lazy(() => import(\"../pages/illnesses/create/Create\"));\nconst IllnessEdit = lazy(() => import(\"../pages/illnesses/edit/Edit\"));\nconst IllnessView = lazy(() => import(\"../pages/illnesses/view/View\"));\n\nconst RawMaterialList = lazy(() => import(\"../pages/rawMaterials/list/List\"));\nconst RawMaterialCreate = lazy(() => import(\"../pages/rawMaterials/create/Create\"));\nconst RawMaterialEdit = lazy(() => import(\"../pages/rawMaterials/edit/Edit\"));\nconst RawMaterialView = lazy(() => import(\"../pages/rawMaterials/view/View\"));\n\nconst AgriculturalPracticeList = lazy(() => import(\"../pages/agriculturalPractices/list/List\"));\nconst AgriculturalPracticeCreate = lazy(() => import(\"../pages/agriculturalPractices/create/Create\"));\nconst AgriculturalPracticeEdit = lazy(() => import(\"../pages/agriculturalPractices/edit/Edit\"));\nconst AgriculturalPracticeView = lazy(() => import(\"../pages/agriculturalPractices/view/View\"));\n\nconst WorkPlanList = lazy(() => import(\"../pages/workPlans/list/List\"));\nconst WorkPlanCreate = lazy(() => import(\"../pages/workPlans/create/Create\"));\nconst WorkPlanEdit = lazy(() => import(\"../pages/workPlans/edit/Edit\"));\nconst WorkPlanView = lazy(() => import(\"../pages/workPlans/view/View\"));\n\nconst PurchaseList = lazy(() => import(\"../pages/purchases/list/List\"));\nconst PurchaseCreate = lazy(() => import(\"../pages/purchases/create/Create\"));\nconst PurchaseEdit = lazy(() => import(\"../pages/purchases/edit/Edit\"));\nconst PurchaseView = lazy(() => import(\"../pages/purchases/view/View\"));\n\nconst ExpertMonitorList = lazy(() => import(\"../pages/expertMonitors/list/List\"));\nconst ExpertMonitorCreate = lazy(() => import(\"../pages/expertMonitors/create/Create\"));\nconst ExpertMonitorEdit = lazy(() => import(\"../pages/expertMonitors/edit/Edit\"));\nconst ExpertMonitorView = lazy(() => import(\"../pages/expertMonitors/view/View\"));\n\nconst WorkCertificate = lazy(() => import(\"../pages/workCertificate\"));\n\n\nconst PayrollList = lazy(() => import(\"../pages/payroll/list/PayrollList\"));\n\nconst routes = [\n  {\n    path: \"/arcgis\",\n    component: <ArcGis />,\n  },\n  {\n    path: \"/dashboard\",\n    component: <Dashboard />,\n  },\n  {\n    path: \"/change-password\",\n    component: <ChangePassword />,\n  },\n  {\n    path: \"/profile/edit\",\n    component: <EditProfile />,\n  },\n  {\n    path: \"/persons\",\n    component: <PersonList />,\n  },\n  {\n    path: \"/person/create\",\n    component: <PersonCreate />,\n  },\n  {\n    path: \"/person/:id/edit\",\n    component: <PersonEdit />,\n  },\n  {\n    path: \"/person/:id/view\",\n    component: <PersonView />,\n  },\n  {\n    path: \"/trees\",\n    component: <TreeList />,\n  },\n  {\n    path: \"/tree/create\",\n    component: <TreeCreate />,\n  },\n  {\n    path: \"/tree/:id/edit\",\n    component: <TreeEdit />,\n  },\n  {\n    path: \"/tree/:id/view\",\n    component: <TreeView />,\n  },\n  {\n    path: \"/zones\",\n    component: <ZoneList />,\n  },\n  {\n    path: \"/zone/create\",\n    component: <ZoneCreate />,\n  },\n  {\n    path: \"/zone/:id/edit\",\n    component: <ZoneEdit />,\n  },\n  {\n    path: \"/zone/:id/view\",\n    component: <ZoneView />,\n  },\n  {\n    path: \"/sectors\",\n    component: <SectorList />,\n  },\n  {\n    path: \"/sector/create\",\n    component: <SectorCreate />,\n  },\n  {\n    path: \"/sector/:id/edit\",\n    component: <SectorEdit />,\n  },\n  {\n    path: \"/sector/:id/view\",\n    component: <SectorView />,\n  },\n  {\n    path: \"/illnesses\",\n    component: <IllnessList />,\n  },\n  {\n    path: \"/illness/create\",\n    component: <IllnessCreate />,\n  },\n  {\n    path: \"/illness/:id/edit\",\n    component: <IllnessEdit />,\n  },\n  {\n    path: \"/illness/:id/view\",\n    component: <IllnessView />,\n  },\n  {\n    path: \"/raw-materials\",\n    component: <RawMaterialList />,\n  },\n  {\n    path: \"/raw-material/create\",\n    component: <RawMaterialCreate />,\n  },\n  {\n    path: \"/raw-material/:id/edit\",\n    component: <RawMaterialEdit />,\n  },\n  {\n    path: \"/raw-material/:id/view\",\n    component: <RawMaterialView />,\n  },\n  {\n    path: \"/agricultural-practices\",\n    component: <AgriculturalPracticeList />,\n  },\n  {\n    path: \"/agricultural-practice/create\",\n    component: <AgriculturalPracticeCreate />,\n  },\n  {\n    path: \"/agricultural-practice/:id/edit\",\n    component: <AgriculturalPracticeEdit />,\n  },\n  {\n    path: \"/agricultural-practice/:id/view\",\n    component: <AgriculturalPracticeView />,\n  },\n  {\n    path: \"/work-plans\",\n    component: <WorkPlanList />,\n  },\n  {\n    path: \"/work-plan/create\",\n    component: <WorkPlanCreate />,\n  },\n  {\n    path: \"/work-plan/:id/edit\",\n    component: <WorkPlanEdit />,\n  },\n  {\n    path: \"/work-plan/:id/view\",\n    component: <WorkPlanView />,\n  },\n  {\n    path: \"/purchases\",\n    component: <PurchaseList />,\n  },\n  {\n    path: \"/purchase/create\",\n    component: <PurchaseCreate />,\n  },\n  {\n    path: \"/purchase/:id/edit\",\n    component: <PurchaseEdit />,\n  },\n  {\n    path: \"/purchase/:id/view\",\n    component: <PurchaseView />,\n  },\n  {\n    path: \"/expert-monitors\",\n    component: <ExpertMonitorList />,\n  },\n  {\n    path: \"/expert-monitor/create\",\n    component: <ExpertMonitorCreate />,\n  },\n  {\n    path: \"/expert-monitor/:id/edit\",\n    component: <ExpertMonitorEdit />,\n  },\n  {\n    path: \"/expert-monitor/:id/view\",\n    component: <ExpertMonitorView />,\n  },\n  {\n    path: \"/work-certificates\",\n    component: <WorkCertificate />,\n  },\n  {\n    path: \"/payroll\",\n    component: <PayrollList />,\n  }\n];\n\nexport default routes.map((route, index) => (\n  <Route\n    exact\n    key={index}\n    path={route.path}\n    render={() =>\n      authCheck() === false ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <AuthLayout>{route.component}</AuthLayout>\n      )\n    }\n  />\n));\n","import React from \"react\";\nimport \"./NonAuthLayout.scss\";\n\nfunction NonAuthLayout({ children }) {\n  return (\n    <>\n      <div className=\"container-fluid p-0\">\n        <main>{children}</main>\n      </div>\n    </>\n  );\n}\n\nexport default NonAuthLayout;\n","import React, {lazy} from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authCheck } from \"../utils/authHelper\";\n\nimport NonAuthLayout from \"../layout/NonAuthLayout\";\n\nconst Login = lazy(() => import(\"../pages/login/Login\"));\nconst ForgotPassword = lazy(() => import(\"../pages/forgotPassword/ForgotPassword\"));\nconst ResetPassword = lazy(() => import(\"../pages/resetPassword/ResetPassword\"));\n\nconst routes = [\n  {\n    path: \"/login\",\n    component: <Login />,\n  },\n  {\n    path: \"/forgot-password\",\n    component: <ForgotPassword />,\n  },\n  {\n    path: \"/reset-password\",\n    component: <ResetPassword />,\n  },\n];\n\nexport default routes.map((route, index) => (\n  <Route\n    exact\n    key={index}\n    path={route.path}\n    render={() =>\n      authCheck() === true ? (\n        <Redirect to=\"/dashboard\" />\n      ) : (\n        <NonAuthLayout>{route.component}</NonAuthLayout>\n      )\n    }\n  />\n));\n","import React from \"react\";\nimport \"./GeneralLayout.scss\";\n\nfunction GeneralLayout({ children }) {\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <main className=\"ms-sm-auto px-md-3\">{children}</main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default GeneralLayout;\n","import React, {lazy} from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport GeneralLayout from \"../layout/GeneralLayout\";\n\nconst NotFound = lazy(() => import(\"../pages/errors/notFound/NotFound\"));\n\nconst routes = [\n  {\n    path: \"/\",\n    component: <Redirect to=\"/dashboard\" />,\n  },\n  {\n    path: \"\",\n    component: <Redirect to=\"/dashboard\" />,\n  },\n  {\n    path: \"*\",\n    component: <NotFound />,\n  },\n];\n\nexport default routes.map((route, index) => (\n  <Route\n    exact\n    key={index}\n    path={route.path}\n    render={() => <GeneralLayout>{route.component}</GeneralLayout>}\n  />\n));\n","import React from \"react\";\nimport \"./PreLoader.scss\";\n\n// Main Footer\nfunction PreLoader() {\n  return (\n    <div className=\"preloader flex-column justify-content-center align-items-center\">\n      <img\n        className=\"animation__wobble\"\n        src=\"/admin/image/logo192.png\"\n        alt=\"AdminLTELogo\"\n      />\n    </div>\n  );\n}\n\nexport default PreLoader;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./store\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nimport AuthRoutes from \"./routes/authRoutes\";\nimport NonAuthRoutes from \"./routes/nonAuthRoutes\";\nimport GeneralRoutes from \"./routes/generalRoutes\";\n\nimport PreLoader from \"./components/layout/preloader/PreLoader\";\n\nconst defaultPreLoader = document.getElementById('defaultPreLoader');\n\nif (defaultPreLoader) {\n  defaultPreLoader.setAttribute('transition', \"max-height 0.15s ease-out\");\n  // defaultPreLoader.style.transition = \"max-height 0.15s ease-out\";\n  defaultPreLoader.remove();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ToastContainer />\n        <Suspense fallback={<PreLoader />}>\n          <Switch>\n            {AuthRoutes}\n            {NonAuthRoutes}\n            {GeneralRoutes}\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}