{"version":3,"sources":["pages/arcGis/ArcGis.js","components/common/breadcrumb/Breadcrumb.js"],"names":["ArcGis","pageName","useEffect","document","title","process","className","id","breadCrumbs","name","link","src","frameBorder","width","height","Breadcrumb","map","value","index","activeLink","to","defaultProps"],"mappings":"6HAAA,0CAuDeA,UAnDf,WACE,IAAMC,EAAW,SAgBjB,OAHAC,qBAAU,WACRC,SAASC,MAAT,UAAoBC,iBAApB,cAAoDJ,KACnD,IAED,qBAAKK,UAAU,0GAAf,SACE,sBAAKC,GAAG,SAASD,UAAU,6BAA3B,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,MAAd,SAAqBL,MAEvB,qBAAKK,UAAU,WAAf,SACE,cAAC,IAAD,CAAYE,YAxBN,CAClB,CACEC,KAAM,YACNC,KAAM,cAER,CACED,KAAM,SACNC,KAAM,gBAuBJ,yBAASJ,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,wBACEK,IAAI,+CACJP,MAAM,cACNQ,YAAY,IACZC,MAAO,OACPC,OAAQ,sB,gCC7CxB,8BAKA,SAASC,EAAT,GAAsC,IAAhBP,EAAe,EAAfA,YACpB,OACE,qBAAKF,UAAU,eAAe,aAAW,aAAzC,SACE,oBAAIA,UAAU,aAAd,SACGE,EAAYQ,KAAI,SAACC,EAAOC,GACvB,IAAMC,EAAaF,EAAMP,MAAuB,KAAfO,EAAMP,KACvC,OACE,oBACEJ,UAAS,0BAAqBa,EAAa,SAAW,IADxD,SAIGA,EACC,cAAC,IAAD,CAAMC,GAAIH,EAAMP,KAAhB,SAAuBO,EAAMR,OAE7BQ,EAAMR,MALHS,UAwBnBH,EAAWM,aAAe,CACxBb,YAAa,CACX,CACEC,KAAM,YACNC,KAAM,gBAKGK,O","file":"static/js/47.894af3cf.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./ArcGis.scss\";\nimport Breadcrumb from \"../../components/common/breadcrumb/Breadcrumb\";\n\nfunction ArcGis() {\n  const pageName = \"ArcGis\";\n  const routeStart = \"/arcgis\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"ArcGis\",\n      link: \"\",\n    },\n  ];\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n  }, []);\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div id=\"arcgis\" className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">{pageName}</h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <iframe\n                src=\"https://paulasanchezr.github.io/ElCateo_map/\"\n                title=\"description\"\n                frameBorder=\"0\"\n                width={\"100%\"}\n                height={\"100%\"}\n              />\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default ArcGis;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}