{"version":3,"sources":["pages/managefarms/list/List.js","components/common/breadcrumb/Breadcrumb.js"],"names":["ManageFarm","useState","user","setInfo","setFileUrl","page","setTCount","search","getUsers","a","axios","get","process","headers","localStorage","getItem","then","response","userData","data","dbData","files","dbCount","alert","catch","error","console","log","useEffect","document","title","className","type","to","breadCrumbs","name","link","map","users","length","style","width","images","index","src","filePathUrl","farms","address","icon","faTasks","id","faEdit","faLock","Breadcrumb","value","activeLink","defaultProps"],"mappings":"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","file":"static/js/43.d849b9cc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./List.scss\";\r\nimport axios from \"axios\";\r\nimport { statuses,filePathUrl  } from \"../../../utils/appConstants\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faLock,\r\n  faTasks\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction ManageFarm() {\r\n    const pageName = \"Farms\";\r\n\r\n    var [user, setInfo] = useState([]);\r\n    var [fileUrl, setFileUrl] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [tCount, setTCount] = useState(0);\r\n\r\n    var [search, setSearch] = useState(\"\");\r\n\r\n    let getUsers = async (search, page) => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/farms?keyword=${search}&page=${page}`,\r\n            { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n                const userData = response.data.data.dbData;\r\n                setInfo(userData);\r\n                setFileUrl(userData.files)\r\n                setTCount(response.data.data.dbCount)\r\n                if (response.data.data.dbData === 0) {\r\n                    getUsers();\r\n                    alert('No data found.');\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n    };\r\n\r\n    const removeById = async (e, id) => {\r\n        e.preventDefault();\r\n        await axios.delete(`http://localhost:7000/farm/${id}/delete`, { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } })\r\n            .then(res => {\r\n                getUsers();\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            });\r\n\r\n    }\r\n    const resetList = async (e) => {\r\n        search = \"\";\r\n        setSearch(search)\r\n        getUsers(search, page)\r\n    }\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Farms\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n\r\n    const handlePageClick = (e) => {\r\n        // e.preventDefault();\r\n        setPage(e.selected + 1);\r\n    }\r\n    useEffect(() => {\r\n        document.title = `${process.env.REACT_APP_NAME}`;\r\n        getUsers(search, page);\r\n    }, [search, page]);\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Farms\r\n                                    <Link\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-app ms-3\"\r\n                                        to={`farms/create`}>\r\n                                        Add New\r\n                                    </Link>\r\n\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <br />\r\n                        <div className=\"row\" >\r\n                            {user.map(users => (\r\n                                <div  key ={users.id}className=\"col-md-6\">\r\n                                    {/* new card */}\r\n                                    <div className=\"card\" >\r\n\r\n                                        {(() => {\r\n                                            if (users?.files?.length > 0) {\r\n                                                return (\r\n                                                    <div style={{width:'25%'}}>\r\n                                                        {\r\n                                                            users.files.map((images,index) => (\r\n                                                                <img \r\n                                                               key={index} src={filePathUrl.farms + \"/\" + images} className=\"card-img-top\" />\r\n                                                            ))\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                )\r\n                                            } else {\r\n                                                return (\r\n                                                    // <img src=\"images/402-bg.jpg\" className=\"card-img-top\" />\r\n                                                    <p>Image not Available</p>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{users.name}</h5>\r\n                                            {(() => {\r\n                                                if (users?.address) {\r\n                                                    return (\r\n                                                        <div>\r\n                                                            <p className=\"card-text\">Address : {users.address}</p>\r\n\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                } else {\r\n                                                    return (\r\n                                                        <p className=\"card-text\">Address : Not registered</p>\r\n                                                        )\r\n                                                }\r\n                                            })()}\r\n\r\n                                            {/* manage section */}\r\n\r\n                                            <div className=\"dropdown\">\r\n                                                <button\r\n                                                    className=\"btn btn-outline-app dropdown-toggle cursor\"\r\n                                                    type=\"button\"\r\n                                                    data-bs-toggle=\"dropdown\"\r\n                                                    aria-expanded=\"false\"\r\n                                                >\r\n                                                    &#8942;\r\n                                                </button>\r\n                                                <ul\r\n                                                    className=\"dropdown-menu\"\r\n                                                >\r\n\r\n                                                    <li>\r\n                                                        <Link\r\n                                                            className=\"dropdown-item\"\r\n                                                            to={`/farms/manage`}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTasks} />{\" \"} Manage\r\n                                                        </Link>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Link\r\n                                                            className=\"dropdown-item\"\r\n                                                            to={`/farms/${users.id}/edit`}\r\n\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEdit} />{\" \"}Edit\r\n                                                        </Link>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Link\r\n                                                            className=\"dropdown-item\"\r\n                                                            to={\"\"}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faLock} />{\" \"}Status\r\n                                                        </Link>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            {/* end */}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* end */}\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div >\r\n\r\n                    </div >\r\n                </section >\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ManageFarm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}