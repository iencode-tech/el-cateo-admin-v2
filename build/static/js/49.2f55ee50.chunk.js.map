{"version":3,"sources":["pages/managefarms/edit/Edit.js","components/common/breadcrumb/Breadcrumb.js"],"names":["FarmEdit","history","useHistory","params","useParams","useState","name","owner_id","address","area","status","files","formValues","setFormValues","formErrors","setFormErrors","setIsSubmit","setImage","imageData","setImageData","_handleOnChange","e","target","value","getFarmData","a","axios","get","process","id","headers","localStorage","getItem","then","response","data","catch","error","console","log","useEffect","Object","keys","length","_handleFormSubmit","preventDefault","validate","formData","FormData","append","assignedOwner","put","alert","message","push","values","errors","test","className","breadCrumbs","link","onSubmit","encType","htmlFor","type","placeholder","onChange","style","color","rows","statuses","map","index","disabled","display","margin","width","flexWrap","accept","event","URL","createObjectURL","src","filePathUrl","farms","height","Breadcrumb","activeLink","to","defaultProps"],"mappings":"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","file":"static/js/49.2f55ee50.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { statuses,filePathUrl  } from \"../../../utils/appConstants\";\r\n\r\n\r\nfunction FarmEdit() {\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        owner_id: \"\",\r\n        address: \"\",\r\n        area: \"\",\r\n        status: \"\",\r\n        files: \"\"\r\n    };\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const [formValues, setFormValues] = useState(initialValues);\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const [imageData, setImageData] = useState(null);\r\n\r\n    const pageName = \"Edit Farm Data\";\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Farms\",\r\n            link: \"/farms\",\r\n        },\r\n        {\r\n            name: \"Edit\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n    const onImageChange = (event) => {\r\n        console.log(\"event : \", event);\r\n        if (event.target.files && event.target.files[0]) {\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            setImageData(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const _handleOnChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({ ...formValues, [name]: value });\r\n    };\r\n\r\n    //api calling for get farm by id\r\n    let getFarmData = async () => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/farm/${params.id}/read`,\r\n            {\r\n                headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) }\r\n            }).then((response) => {\r\n                setImage(response.data.data.files[0])\r\n                setFormValues(response.data.data);\r\n\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(formErrors);\r\n        if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n        }\r\n    }, [formErrors]);\r\n\r\n    // api calling for update user\r\n    const _handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setFormErrors(validate(formValues));\r\n        let formData = new FormData();\r\n        formData.append(\"name\", formValues.name);\r\n        formData.append(\"assignedOwner\", formValues.assignedOwner);\r\n        formData.append(\"address\", formValues.address);\r\n        formData.append(\"area\", formValues.area);\r\n        formData.append(\"status\", formValues.status);\r\n        formData.append(\"files\", imageData);\r\n        setIsSubmit(true);\r\n        await axios.put(`${process.env.REACT_APP_API_URL}/farm/${params.id}/update`, formData,\r\n            {\r\n                headers: {\r\n                    'authorization': localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME),\r\n                }\r\n            }).then((response) => {\r\n                alert(response.data.message)\r\n                history.push(\"/farms\")\r\n            }).catch((error) => {\r\n                alert(error.message)\r\n            })\r\n    };\r\n\r\n    // for submit\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        const regex = /^[a-zA-Z]{3,}$/i;\r\n        const renum = /^[0-9\\b]+$/i;\r\n        if (!values.name) {\r\n            errors.name = \"Name is required!\";\r\n        } else if (!regex.test(values.name)) {\r\n            errors.name = \"This is not a valid name!\";\r\n        }\r\n        if (!values.address) {\r\n            errors.address = \"Address is required!\";\r\n        }\r\n        if (!values.area) {\r\n            errors.area = \"Area is required!\";\r\n        } else if (!renum.test(values.area)) {\r\n            errors.area = \"This is not a valid area format!\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFarmData();\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(formErrors);\r\n        if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n        }\r\n    }, [formErrors]);\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">{pageName}</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-transparent\">\r\n                                        <div className={\"row\"}>&nbsp;</div>\r\n                                    </div>\r\n\r\n                                    <form onSubmit={_handleFormSubmit}\r\n                                        encType={`multipart/form-data`}>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Name <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"name\"\r\n                                                        placeholder=\"Enter name\"\r\n                                                        value={formValues.name}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.name}</p>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Area {\" \"}(Square Hector) <span className=\"text-danger\">*</span></label>\r\n                                                    <br />\r\n                                                    <input\r\n                                                        name=\"name\"\r\n                                                        type=\"number\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"name\"\r\n                                                        placeholder=\"Enter area\"\r\n                                                        value={formValues.area}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.area}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Address <span className=\"text-danger\">*</span></label>\r\n                                                    <textarea\r\n                                                        name=\"location\"\r\n                                                        rows={5}\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"location\"\r\n                                                        placeholder=\"Enter address\"\r\n                                                        value={formValues.address}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.address}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label>Status <span className=\"text-danger\">*</span></label>\r\n                                                    <br />\r\n                                                    <select\r\n                                                        id=\"input4\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                        value={formValues.status}\r\n                                                        onChange={_handleOnChange}\r\n                                                    >\r\n                                                        {Object.keys(statuses).map((status, index) => (\r\n                                                            <option key={index} value={status}>\r\n                                                                {statuses[status]}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label>Owner Name</label>\r\n                                                    <br />\r\n                                                    <select\r\n                                                        id=\"input4\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                        disabled\r\n                                                    >\r\n                                                        <option>Coming soon</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        margin: 10,\r\n                                                        width: 400,\r\n                                                        flexWrap: 'wrap',\r\n                                                    }}>\r\n                                                        <input accept=\"image/*\" id=\"icon-button-file\"\r\n                                                            type=\"file\" onChange={onImageChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br/>\r\n                                                    <img src={filePathUrl.farms + \"/\" + formValues.files} width={300}\r\n                                                        height={150} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-footer clearfix\">\r\n                                            <button type=\"submit\" className=\"btn btn-sm btn-app float-end\">\r\n                                                Update\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FarmEdit;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}