{"version":3,"sources":["pages/managefarms/create/Create.js","components/common/breadcrumb/Breadcrumb.js"],"names":["FarmCreate","useState","name","owner_id","address","area","status","files","formValues","setFormValues","formErrors","setFormErrors","setIsSubmit","image","setImage","imageData","setImageData","pageName","history","useHistory","_handleOnChange","e","target","value","_handleFormSubmit","a","preventDefault","validate","formData","FormData","append","assignedOwner","axios","post","process","headers","Authorization","fetchAuthToken","then","response","push","catch","error","alert","message","values","errors","useEffect","document","title","Object","keys","length","className","breadCrumbs","link","onSubmit","method","encType","htmlFor","type","id","placeholder","onChange","style","color","rows","statuses","map","index","disabled","display","margin","width","flexWrap","accept","event","URL","createObjectURL","src","height","Breadcrumb","activeLink","to","defaultProps"],"mappings":"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","file":"static/js/42.b4e4cb9a.chunk.js","sourcesContent":["import { statuses } from \"../../../utils/appConstants\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./Create.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport axios from \"axios\";\r\nimport { fetchAuthToken } from \"../../../utils/authHelper\";\r\n\r\n//material-ui import\r\nimport Button from '@material-ui/core/Button';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction FarmCreate() {\r\n    const initialValues = {\r\n        name: \"\",\r\n        owner_id: \"\",\r\n        address: \"\",\r\n        area: \"\",\r\n        status: \"1\",\r\n        files: \"\",\r\n    };\r\n\r\n    const [formValues, setFormValues] = useState(initialValues);\r\n    const [formErrors, setFormErrors] = useState({});\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    const [image, setImage] = useState(null);\r\n    const [imageData, setImageData] = useState(null);\r\n\r\n    const pageName = \"Add Farm\";\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Farms\",\r\n            link: \"/farms\",\r\n        },\r\n        {\r\n            name: \"Add\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            setImageData(event.target.files[0]);\r\n        }\r\n    };\r\n    const _handleOnChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({ ...formValues, [name]: value });\r\n    };\r\n\r\n    // api calling for create user\r\n    const _handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setFormErrors(validate(formValues));\r\n        let formData = new FormData();\r\n        formData.append(\"name\", formValues.name);\r\n        formData.append(\"assignedOwner\", formValues.assignedOwner);\r\n        formData.append(\"address\", formValues.address);\r\n        formData.append(\"area\", formValues.area);\r\n        formData.append(\"status\", formValues.status);\r\n        formData.append(\"files\", imageData);\r\n        setIsSubmit(true);\r\n\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/farm/store`, formData, {\r\n            headers: { Authorization: fetchAuthToken() },\r\n        })\r\n            .then((response) => {\r\n                history.push(\"/farms\");\r\n            }).catch((error) => {\r\n                alert(error.message)\r\n            });\r\n    };\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        const regex = /^[a-zA-Z]{3,}$/i;\r\n        if (!values.name) {\r\n            errors.name = \"Name is required!\";\r\n        }\r\n        //  else if (!regex.test(values.name)) {\r\n        //     errors.name = \"This is not a valid name!\";\r\n        // }\r\n        if (!values.address) {\r\n            errors.address = \"Location is required!\";\r\n        }\r\n        if (!values.area) {\r\n            errors.area = \"Area is required!\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\r\n        if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n        }\r\n    }, [formErrors]);\r\n    //  for submit\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     let error = false;\r\n\r\n    //     if (!name) {\r\n    //         setNameError(\"Name is Required\");\r\n    //         error = true;\r\n    //     } else {\r\n    //         setNameError(\"\");\r\n    //     }\r\n\r\n    //     if (!address) {\r\n    //         setaddressError(\" Address is Required\");\r\n    //         error = true;\r\n    //     } else {\r\n    //         setaddressError(\"\");\r\n\r\n    //     }\r\n\r\n    //     if (!area) {\r\n    //         setAreaError(\"Area is Required\");\r\n    //         error = true;\r\n    //     } else {\r\n    //         setAreaError(\"\");\r\n\r\n    //     }\r\n\r\n    //     if (error == false) {\r\n    //         createUser();\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     onImageChange()\r\n    // }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">{pageName}</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-transparent\">\r\n                                        <div className={\"row\"}>&nbsp;</div>\r\n                                    </div>\r\n\r\n                                    <form onSubmit={_handleFormSubmit}\r\n                                        method=\"POST\"\r\n                                        encType={`multipart/form-data`}>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Name <span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"name\"\r\n                                                        placeholder=\"Enter name\"\r\n                                                        value={formValues.name}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.name}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Area{\" \"}(Square Hector) <span className=\"text-danger\">*</span></label>\r\n                                                    <br />\r\n                                                    <input\r\n                                                        name=\"area\"\r\n                                                        type=\"number\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"area\"\r\n                                                        placeholder=\"Enter area\"\r\n                                                        value={formValues.area}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.area}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label htmlFor=\"floatingInput\">Address <span className=\"text-danger\">*</span></label>\r\n                                                    <textarea\r\n                                                        name=\"address\"\r\n                                                        rows={5}\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"address\"\r\n                                                        placeholder=\"Enter address\"\r\n                                                        value={formValues.address}\r\n                                                        onChange={_handleOnChange}\r\n                                                    />\r\n                                                    <p style={{ color: 'red' }}>{formErrors.address}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label>Status <span className=\"text-danger\">*</span></label>\r\n                                                    <br />\r\n                                                    <select\r\n                                                        id=\"input4\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                        value={formValues.status}\r\n                                                        onChange={_handleOnChange}\r\n                                                    >\r\n                                                        {Object.keys(statuses).map((status, index) => (\r\n                                                            <option key={index} value={status}>\r\n                                                                {statuses[status]}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label>Owner Name</label>\r\n                                                    <br />\r\n                                                    <select\r\n                                                        id=\"input4\"\r\n                                                        className=\"form-select\"\r\n                                                        name=\"status\"\r\n                                                        disabled\r\n                                                    >\r\n                                                        <option>Coming soon</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        margin: 10,\r\n                                                        width: 400,\r\n                                                        flexWrap: 'wrap',\r\n                                                    }}>\r\n                                                        <input accept=\"image/*\" id=\"icon-button-file\"\r\n                                                            type=\"file\"\r\n                                                            value={formValues.files}\r\n                                                            onChange={onImageChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <br />\r\n                                                    <img src={image} width={300}\r\n                                                        height={150} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-footer clearfix\">\r\n                                            <button type=\"submit\" className=\"btn btn-sm btn-app float-end\">\r\n\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n                                        {/* </div> */}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default FarmCreate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}