{"version":3,"sources":["components/common/table/Table.js","components/pageSpecific/agriculturalPractices/linked/rawMaterial/view/View.js","components/pageSpecific/agriculturalPractices/view/View.js","pages/agriculturalPractices/view/View.js","components/common/breadcrumb/Breadcrumb.js","utils/timeHelper.js"],"names":["Table","header","data","className","length","map","element","i","colSpan","Object","keys","subElement","subI","RawMaterialView","formData","useState","fdDefVal","setFdDefVal","_checkFolialDrenche","indexOf","parseInt","method","_checkManual","_calculateQtyTree","rawMaterialData","quantity","useEffect","rawMaterials","remainingTotal","parseFloat","rawMaterial","index","name","unit","unitMetric","qtyTree","qtyLts","total","AgriculturalPracticeView","htmlFor","id","formulationName","utcToLocalTime","scheduledDate","daysToDo","methods","rows","observations","statuses","status","params","useParams","store","useSelector","selectAgriculturalPractice","dispatch","useDispatch","pageName","document","title","process","initFormData","defaultFolialDrencheId","actionType","readData","Breadcrumb","breadCrumbs","link","value","activeLink","to","defaultProps","dateTimeString","format","moment"],"mappings":"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","file":"static/js/34.c59b8018.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Table.scss\";\r\n\r\nfunction Table({ header, data }) {\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table m-0\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">#</th>\r\n            {header.length > 0\r\n              ? header.map((element, i) => <th className=\"text-center\" key={i}>{element}</th>)\r\n              : \"\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length === 0 ? (\r\n            <tr>\r\n              <td colSpan={1 + header.length} className=\"text-center\">\r\n                No Record found\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            data.map((element, i) => (\r\n              <tr key={i}>\r\n                <td className=\"text-center\">{i + 1}</td>\r\n                {Object.keys(element).map((subElement, subI) => (\r\n                  <td className=\"text-center\" key={subI}>{element[subElement]}</td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nTable.propTypes = {\r\n  header: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { unitMetric } from \"../../../../../../utils/appConstants\";\r\nimport Table from \"../../../../../common/table/Table\";\r\n\r\nfunction RawMaterialView({ formData }) {\r\n  const [fdDefVal, setFdDefVal] = useState(1000);\r\n\r\n  const _checkFolialDrenche = () =>\r\n    [0, 2].indexOf(parseInt(formData.method)) > -1;\r\n\r\n  const _checkManual = () => parseInt(formData.method) === 1;\r\n\r\n  const _calculateQtyTree = (rawMaterialData) => {\r\n    return rawMaterialData.quantity || 0;\r\n  };\r\n\r\n  // const _getRemaining = () => {\r\n  //   let remainingTotal = 0;\r\n  //   if (formData.rawMaterials && formData.rawMaterials.length > 0) {\r\n  //     for (let i = 1; i < formData.rawMaterials.length; i++) {\r\n  //       remainingTotal += parseFloat(formData.rawMaterials[i].quantity) || 0;\r\n  //     }\r\n  //   }\r\n  //   return remainingTotal;\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      _checkFolialDrenche() &&\r\n      formData.rawMaterials &&\r\n      formData.rawMaterials.length > 0\r\n    ) {\r\n      let remainingTotal = 0;\r\n      for (let i = 0; i < formData.rawMaterials.length; i++) {\r\n        remainingTotal += parseFloat(formData.rawMaterials[i].quantity) || 0;\r\n      }\r\n      setFdDefVal(remainingTotal);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 border border-2 rounded\">\r\n          <h6 className={`text-center text-bold`}>Amount to Dose</h6>\r\n          <Table\r\n            data={\r\n              formData.rawMaterials &&\r\n              formData.rawMaterials.map((rawMaterial, index) => ({\r\n                name: rawMaterial.rawMaterial.name,\r\n                quantity:\r\n                  _checkFolialDrenche() && index === 0\r\n                    ? fdDefVal\r\n                    : rawMaterial.quantity,\r\n                unit: unitMetric[rawMaterial.unit],\r\n                ...(_checkManual()\r\n                  ? {\r\n                      qtyTree: `${_calculateQtyTree(rawMaterial)} ${\r\n                        unitMetric[rawMaterial.unit]\r\n                      }`,\r\n                    }\r\n                  : {}),\r\n                ...(_checkFolialDrenche()\r\n                  ? {\r\n                      qtyLts:\r\n                        index !== 0\r\n                          ? `${_calculateQtyTree(rawMaterial)} ${\r\n                              unitMetric[rawMaterial.unit]\r\n                            }`\r\n                          : \"\",\r\n                      total:\r\n                        index === 0 &&\r\n                        `${rawMaterial.quantity} ${\r\n                          unitMetric[rawMaterial.unit]\r\n                        }`,\r\n                    }\r\n                  : {}),\r\n              }))\r\n            }\r\n            header={[\r\n              \"Material\",\r\n              \"Quantity\",\r\n              \"Unit\",\r\n              ...(_checkManual() ? [\"Qty x Tree\"] : []),\r\n              ...(_checkFolialDrenche() ? [\"Qty x Lts.\", \"Total\"] : []),\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RawMaterialView;\r\n","import React from \"react\";\r\nimport { methods, statuses } from \"../../../../utils/appConstants\";\r\nimport RawMaterialView from \"../linked/rawMaterial/view/View\";\r\nimport { utcToLocalTime } from \"../../../../utils/timeHelper\";\r\n\r\nfunction AgriculturalPracticeView({ formData }) {\r\n  return (\r\n    <>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"input1\" className=\"form-label\">\r\n            Formulation Name\r\n          </label>\r\n          <span id=\"input1\" className=\"form-control\">\r\n            {formData.formulationName}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <label htmlFor=\"input2\" className=\"form-label\">\r\n            Schedule Date\r\n          </label>\r\n          <span id=\"input2\" className=\"form-control\">\r\n            {utcToLocalTime(formData.scheduledDate, \"YYYY-MM-DD\")}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <label htmlFor=\"input3\" className=\"form-label\">\r\n            Days to do\r\n          </label>\r\n          <span id=\"input3\" className=\"form-control\">\r\n            {formData.daysToDo}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"input8\" className=\"form-label\">\r\n            Method\r\n          </label>\r\n          <span id=\"input8\" className=\"form-control\">\r\n            {methods[parseInt(formData.method)]}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input11\" className=\"form-label\">\r\n          Observations\r\n        </label>\r\n        <span id=\"input11\" className=\"form-control\" rows=\"4\">\r\n          {formData.observations}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input4\" className=\"form-label\">\r\n          Status\r\n        </label>\r\n        <span id=\"input4\" className=\"form-control\">\r\n          {statuses[parseInt(formData.status)]}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-transparent\">\r\n            <h4 className=\"m-0\">Raw Material</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <RawMaterialView formData={formData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AgriculturalPracticeView;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./View.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport {\r\n  initFormData,\r\n  readData,\r\n  selectAgriculturalPractice,\r\n} from \"../../../store/redux/Page/AgriculturalPractice\";\r\nimport AgriculturalPracticeViewComponent from \"../../../components/pageSpecific/agriculturalPractices/view/View\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { defaultFolialDrencheId } from \"../../../utils/appConstants\";\r\n\r\nfunction AgriculturalPracticeView() {\r\n  const params = useParams();\r\n  const store = useSelector(selectAgriculturalPractice);\r\n  const dispatch = useDispatch();\r\n  const pageName = \"View agricultural practice\";\r\n  const breadCrumbs = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n    {\r\n      name: \"Agricultural Practices\",\r\n      link: \"/agricultural-practices\",\r\n    },\r\n    {\r\n      name: \"View\",\r\n      link: \"\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\r\n    dispatch(\r\n      initFormData({\r\n        id: defaultFolialDrencheId,\r\n        actionType: \"loadDefaultFolialDrenche\",\r\n      })\r\n    );\r\n    dispatch(readData({ id: params.id }));\r\n  }, [dispatch,params.id]);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">{pageName}</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>&nbsp;</div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <AgriculturalPracticeViewComponent\r\n                      formData={store.formData}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"card-footer clearfix\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AgriculturalPracticeView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nexport const utcToLocalTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\r\n};\r\n\r\nexport const localToUtcTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\r\n};\r\n"],"sourceRoot":""}