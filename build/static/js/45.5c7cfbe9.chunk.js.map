{"version":3,"sources":["components/pageSpecific/sectors/view/View.js","pages/managesectors/view/View.js","components/common/breadcrumb/Breadcrumb.js"],"names":["SectorView","formData","className","htmlFor","id","name","statuses","parseInt","status","style","minHeight","treeIds","length","treeData","map","tree","index","scanId","params","useParams","useState","sector","setInfo","getUsers","a","axios","get","process","headers","localStorage","getItem","then","response","sectorData","data","catch","error","console","log","useEffect","document","title","Breadcrumb","breadCrumbs","link","value","activeLink","to","defaultProps"],"mappings":"gNAkEeA,MA/Df,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,kBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGD,EAASI,UAId,sBAAKH,UAAU,OAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,aAAlC,oBAGA,sBAAME,GAAG,SAASF,UAAU,eAA5B,SACGI,IAASC,SAASN,EAASO,cAIhC,qBAAKN,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,kDAEF,qBAAKA,UAAU,YAAYO,MAAO,CAAEC,UAAW,KAA/C,SACE,qBAAKR,UAAU,iBAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,YAAf,UAC+B,IAA5BD,EAASU,QAAQC,QAChB,qBACEV,UAAU,qCACVO,MAAO,CAAEC,UAAW,KAFtB,SAIE,qBAAKR,UAAU,YAAf,SACE,4DAILD,EAASY,SAASD,OAAS,GAC1B,qBAAKV,UAAU,MAAMO,MAAO,CAAEC,UAAW,KAAzC,SACGT,EAASY,SAASC,KAAI,SAACC,EAAMC,GAAP,OACrB,qBAAKd,UAAU,MAAf,SACE,sBAAMA,UAAU,4BAAhB,SACGa,EAAKE,UAFgBD,4B,0BC8CrChB,UApFf,WACI,IAAMkB,EAASC,cAEf,EAA0BC,mBAAS,CAC/Bf,KAAM,GACNG,OAAQ,GACRK,SAAU,GACVF,QAAS,KAJb,mBAAOU,EAAP,KAAeC,EAAf,KAuBIC,EAAQ,uCAAG,sBAAAC,EAAA,sEACLC,IAAMC,IAAN,UAAaC,0BAAb,mBAAqDT,EAAOd,GAA5D,SACF,CAAEwB,QAAS,CAAE,cAAiBC,aAAaC,QAAQH,gBAA0CI,MAAK,SAACC,GAC/F,IAAMC,EAAaD,EAASE,KAAKA,KACjCZ,EAAQW,MAETE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMJ,aAPf,2CAAH,qDAkBZ,OANAO,qBAAU,WACNC,SAASC,MAAT,UAAoBd,kBACpBJ,MACD,IAIC,qBAAKrB,UAAU,0GAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,SAjDX,kBAmDO,qBAAKA,UAAU,WAAf,SACI,cAACwC,EAAA,EAAD,CAAYC,YA3CpB,CAChB,CACItC,KAAM,YACNuC,KAAM,cAEV,CACIvC,KAAM,UACNuC,KAAM,YAEV,CACIvC,KAAM,OACNuC,KAAM,gBAsCF,yBAAS1C,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,qBAAKA,UAAW,MAAhB,oBAGJ,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CAAqBD,SAAUoB,MAGnC,qBAAKnB,UAAU,2C,gCClFnD,8BAKA,SAASwC,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,YACpB,OACE,qBAAKzC,UAAU,eAAe,aAAW,aAAzC,SACE,oBAAIA,UAAU,aAAd,SACGyC,EAAY7B,KAAI,SAAC+B,EAAO7B,GACvB,IAAM8B,EAAaD,EAAMD,MAAuB,KAAfC,EAAMD,KACvC,OACE,oBACE1C,UAAS,0BAAqB4C,EAAa,SAAW,IADxD,SAIGA,EACC,cAAC,IAAD,CAAMC,GAAIF,EAAMD,KAAhB,SAAuBC,EAAMxC,OAE7BwC,EAAMxC,MALHW,UAwBnB0B,EAAWM,aAAe,CACxBL,YAAa,CACX,CACEtC,KAAM,YACNuC,KAAM,gBAKGF,O","file":"static/js/45.5c7cfbe9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { statuses } from \"../../../../utils/appConstants\";\r\n\r\nfunction SectorView({ formData }) {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input1\" className=\"form-label\">\r\n          Name\r\n        </label>\r\n        <span id=\"input1\" className=\"form-control\">\r\n          {formData.name}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"input2\" className=\"form-label\">\r\n          Status\r\n        </label>\r\n        <span id=\"input2\" className=\"form-control\">\r\n          {statuses[parseInt(formData.status)]}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4>Selected Trees</h4>\r\n            </div>\r\n            <div className=\"card-body\" style={{ minHeight: 300 }}>\r\n              <div className=\"row list-group\">\r\n                <div className=\"col-12 list-group-item\">\r\n                  <div className=\"container\">\r\n                    {formData.treeIds.length === 0 && (\r\n                      <div\r\n                        className=\"row align-items-center text-center\"\r\n                        style={{ minHeight: 300 }}\r\n                      >\r\n                        <div className=\"col-md-12\">\r\n                          <h5>No Trees in the Sector</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {formData.treeData.length > 0 && (\r\n                      <div className=\"row\" style={{ minHeight: 300 }}>\r\n                        {formData.treeData.map((tree, index) => (\r\n                          <div className=\"col\" key={index}>\r\n                            <span className=\"btn btn-outline-secondary\">\r\n                              {tree.scanId}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectorView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./View.scss\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport SectorViewComponent from \"../../../components/pageSpecific/sectors/view/View\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction SectorView() {\r\n    const params = useParams();\r\n    const pageName = \"View sector\";\r\n    const [sector, setInfo] = useState({\r\n        name: \"\",\r\n        status: \"\",\r\n        treeData: {},\r\n        treeIds: {}\r\n    });\r\n\r\n    //Breadcrumbs declared\r\n    const breadCrumbs = [\r\n        {\r\n            name: \"Dashboard\",\r\n            link: \"/dashboard\",\r\n        },\r\n        {\r\n            name: \"Sectors\",\r\n            link: \"/sectors\",\r\n        },\r\n        {\r\n            name: \"View\",\r\n            link: \"\",\r\n        },\r\n    ];\r\n\r\n    let getUsers = async () => {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/sector/${params.id}/read`,\r\n            { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n                const sectorData = response.data.data;\r\n                setInfo(sectorData);\r\n\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n\r\n\r\n    };\r\n    useEffect(() => {\r\n        document.title = `${process.env.REACT_APP_NAME}`;\r\n        getUsers();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <div className=\"col-12 p-0 content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">{pageName}</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-transparent\">\r\n                                        <div className={\"row\"}>&nbsp;</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <SectorViewComponent formData={sector} />\r\n                                    </div>\r\n\r\n                                    <div className=\"card-footer clearfix\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectorView;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}