{"version":3,"sources":["utils/timeHelper.js","components/common/table/Table.js","components/common/pagination/Pagination.js","pages/illnesses/list/List.js","components/common/breadcrumb/Breadcrumb.js"],"names":["utcToLocalTime","dateTimeString","format","moment","Table","header","data","className","length","map","element","i","colSpan","Object","keys","subElement","subI","Pagination","totalCount","currentPage","onPageChange","type","onClick","tabIndex","icon","faArrowLeft","Math","ceil","perPage","faArrowRight","defaultProps","IllnessList","store","useSelector","selectIllness","dispatch","useDispatch","pageName","routeStart","_handleFormSubmit","e","preventDefault","fetchList","listFormData","useEffect","document","title","process","initFormData","to","breadCrumbs","name","link","onSubmit","value","keyword","placeholder","onChange","handleListFormDataChange","key","currentTarget","faSearch","inputs","closest","getElementsByTagName","faRedo","list","listData","index","createdAt","status","statuses","actions","id","faEye","faEdit","href","deleteData","_deleteListData","faTrash","parseInt","listCount","page","Breadcrumb","activeLink"],"mappings":"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","file":"static/js/35.80c52ab6.chunk.js","sourcesContent":["import moment from \"moment\";\n\nexport const utcToLocalTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\n};\n\nexport const localToUtcTime = (\n  dateTimeString,\n  format = \"MM-DD-YYYY h:mm A\"\n) => {\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Table.scss\";\n\nfunction Table({ header, data }) {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table m-0\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            {header.length > 0\n              ? header.map((element, i) => <th className=\"text-center\" key={i}>{element}</th>)\n              : \"\"}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length === 0 ? (\n            <tr>\n              <td colSpan={1 + header.length} className=\"text-center\">\n                No Record found\n              </td>\n            </tr>\n          ) : (\n            data.map((element, i) => (\n              <tr key={i}>\n                <td className=\"text-center\">{i + 1}</td>\n                {Object.keys(element).map((subElement, subI) => (\n                  <td className=\"text-center\" key={subI}>{element[subElement]}</td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTable.propTypes = {\n  header: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Pagination.scss\";\nimport { perPage } from \"../../../utils/appConstants\";\nimport {\n  faEdit,\n  faEye,\n  faRedo,\n  faSearch,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowLeft,\n  faArrowRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Pagination({ totalCount, currentPage, onPageChange }) {\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"pagination justify-content-end\">\n        <li className={`page-item ${currentPage === 1 && \"disabled\"}`}>\n          <button\n            type=\"button\"\n            className={`page-link`}\n            onClick={onPrevious}\n            tabIndex=\"-1\"\n            aria-disabled=\"true\"\n          >\n            <FontAwesomeIcon icon={faArrowLeft} />\n          </button>\n        </li>\n        <li\n          className={`page-item ${\n            currentPage === Math.ceil(totalCount / perPage) && \"disabled\"\n          }`}\n        >\n          <button type=\"button\" className={`page-link`} onClick={onNext}>\n          <FontAwesomeIcon icon={faArrowRight} />\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nPagination.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nPagination.defaultProps = {\n  totalCount: 0,\n  currentPage: 1,\n};\n\nexport default Pagination;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faEye,\n  faRedo,\n  faSearch,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./List.scss\";\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\nimport Table from \"../../../components/common/table/Table\";\nimport {\n  initFormData,\n  deleteData,\n  fetchList,\n  handleListFormDataChange,\n  selectIllness,\n} from \"../../../store/redux/Page/Illness\";\nimport { Link } from \"react-router-dom\";\nimport { utcToLocalTime } from \"../../../utils/timeHelper\";\nimport { statuses } from \"../../../utils/appConstants\";\nimport Pagination from \"../../../components/common/pagination/Pagination\";\n\nfunction IllnessList() {\n  const store = useSelector(selectIllness);\n  const dispatch = useDispatch();\n  const pageName = \"Illnesses\";\n  const routeStart = \"/illness\";\n  const breadCrumbs = [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n    {\n      name: \"Illnesses\",\n      link: \"\",\n    },\n  ];\n\n  const tableHeads = [\"Name\", \"Added Date\", \"Status\", \"\"];\n\n  const _handleOnChange = (e) => {\n    dispatch(\n      handleListFormDataChange({\n        key: e.currentTarget.name,\n        value: e.currentTarget.value,\n      })\n    );\n  };\n\n  const _handlePageChange = (page = 1) => {\n    dispatch(\n      handleListFormDataChange({\n        key: \"page\",\n        value: page,\n      })\n    );\n    dispatch(fetchList({ ...store.listFormData, page }));\n  };\n\n  const _handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(fetchList(store.listFormData));\n  };\n\n  const _deleteListData = (e, id) => {\n    e.preventDefault();\n    dispatch(deleteData({ id }));\n    dispatch(fetchList(store.listFormData));\n  };\n\n  const _refreshListing = (e) => {\n    const form = e.currentTarget.closest(\"form\");\n    const inputs = form.getElementsByTagName(\"input\");\n    for (let i = 0; i < inputs.length; i++) {\n      dispatch(handleListFormDataChange({ key: inputs[i].name, value: \"\" }));\n    }\n    _handleFormSubmit(e);\n  };\n\n  useEffect(() => {\n    document.title = `${process.env.REACT_APP_NAME} | ${pageName}`;\n    dispatch(initFormData());\n    dispatch(fetchList(store.listFormData));\n  }, []);\n\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <div className=\"col-12 p-0 content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0\">\n                  {pageName}&nbsp;\n                  <Link\n                    type=\"button\"\n                    to={`${routeStart}/create`}\n                    className=\"btn btn-sm btn-app ms-3\"\n                  >\n                    Add New\n                  </Link>\n                </h1>\n              </div>\n              <div className=\"col-sm-6\">\n                <Breadcrumb breadCrumbs={breadCrumbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-transparent\">\n                    <div className={\"row\"}>\n                      <form\n                        name={`${pageName}ListFilter`}\n                        onSubmit={_handleFormSubmit}\n                      >\n                        <div className=\"input-group mt-3 mb-3\">\n                          <input\n                            name=\"keyword\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={store.listFormData.keyword}\n                            placeholder=\"Enter keyword to search\"\n                            onChange={_handleOnChange}\n                          />\n                          <button className=\"btn btn-outline-app\" type=\"submit\">\n                            <FontAwesomeIcon icon={faSearch} />\n                          </button>\n                          <button\n                            className=\"btn btn-outline-app\"\n                            type=\"reset\"\n                            onClick={_refreshListing}\n                          >\n                            <FontAwesomeIcon icon={faRedo} />\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n\n                  <div className=\"card-body p-0\">\n                    <Table\n                      data={store.list.map((listData, index) => ({\n                        name: listData.name,\n                        createdAt: utcToLocalTime(listData.createdAt),\n                        status: statuses[listData.status],\n                        actions: (\n                          <div className=\"dropdown\">\n                            <button\n                              className=\"btn btn-outline-app dropdown-toggle\"\n                              type=\"button\"\n                              id={`action-drop-${index}`}\n                              data-bs-toggle=\"dropdown\"\n                              aria-expanded=\"false\"\n                            >\n                              Actions\n                            </button>\n                            <ul\n                              className=\"dropdown-menu\"\n                              aria-labelledby={`action-drop-${index}`}\n                            >\n                              <li>\n                                <Link\n                                  className=\"dropdown-item\"\n                                  to={`${routeStart}/${listData.id}/view`}\n                                >\n                                  <FontAwesomeIcon icon={faEye} /> View\n                                </Link>\n                              </li>\n                              <li>\n                                <Link\n                                  className=\"dropdown-item\"\n                                  to={`${routeStart}/${listData.id}/edit`}\n                                >\n                                  <FontAwesomeIcon icon={faEdit} /> Edit\n                                </Link>\n                              </li>\n                              <li>\n                                <a\n                                  className=\"dropdown-item\"\n                                  href=\"#\"\n                                  onClick={(e) =>\n                                    _deleteListData(e, listData.id)\n                                  }\n                                >\n                                  <FontAwesomeIcon icon={faTrash} /> Delete\n                                </a>\n                              </li>\n                            </ul>\n                          </div>\n                        ),\n                      }))}\n                      header={tableHeads}\n                    />\n                  </div>\n\n                  <div className=\"card-footer clearfix\">\n                    <Pagination\n                      totalCount={parseInt(store.listCount)}\n                      currentPage={parseInt(store.listFormData.page)}\n                      onPageChange={_handlePageChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default IllnessList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Breadcrumb.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Breadcrumb({ breadCrumbs }) {\n  return (\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadCrumbs.map((value, index) => {\n          const activeLink = value.link && value.link !== \"\";\n          return (\n            <li\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\n              key={index}\n            >\n              {activeLink ? (\n                <Link to={value.link}>{value.name}</Link>\n              ) : (\n                value.name\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\nBreadcrumb.propTypes = {\n  breadCrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      link: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nBreadcrumb.defaultProps = {\n  breadCrumbs: [\n    {\n      name: \"Dashboard\",\n      link: \"/dashboard\",\n    },\n  ],\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}