{"version":3,"sources":["components/common/table/Table.js","components/common/pagination/Pagination.js","pages/managepersons/list/List.js","components/common/breadcrumb/Breadcrumb.js","utils/timeHelper.js"],"names":["Table","header","data","className","length","map","element","i","colSpan","Object","keys","subElement","subI","Pagination","totalCount","currentPage","onPageChange","type","onClick","tabIndex","icon","faArrowLeft","Math","ceil","perPage","faArrowRight","defaultProps","PersonList","useHistory","useState","person","setInfo","searchKey","setSearchKey","page","setPage","tCount","setTCount","pageName","getPerson","a","axios","get","process","headers","localStorage","getItem","then","response","personData","dbData","dbCount","catch","error","console","log","removeById","e","id","preventDefault","delete","personList","filter","item","resetList","useEffect","document","title","to","breadCrumbs","name","link","placeholder","value","onChange","target","faRedo","listData","index","firstName","lastName","email","phone","createdAt","utcToLocalTime","status","statuses","actions","faEye","faEdit","href","faTrash","breakLabel","nextLabel","selected","pageCount","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","Breadcrumb","activeLink","dateTimeString","format","moment"],"mappings":"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","file":"static/js/33.47de5e8b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Table.scss\";\r\n\r\nfunction Table({ header, data }) {\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table m-0\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">#</th>\r\n            {header.length > 0\r\n              ? header.map((element, i) => <th className=\"text-center\" key={i}>{element}</th>)\r\n              : \"\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length === 0 ? (\r\n            <tr>\r\n              <td colSpan={1 + header.length} className=\"text-center\">\r\n                No Record found\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            data.map((element, i) => (\r\n              <tr key={i}>\r\n                <td className=\"text-center\">{i + 1}</td>\r\n                {Object.keys(element).map((subElement, subI) => (\r\n                  <td className=\"text-center\" key={subI}>{element[subElement]}</td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nTable.propTypes = {\r\n  header: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\nimport { perPage } from \"../../../utils/appConstants\";\r\nimport {\r\n  \r\n  faArrowLeft,\r\n  faArrowRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Pagination({ totalCount, currentPage, onPageChange }) {\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul className=\"pagination justify-content-end\">\r\n        <li className={`page-item ${currentPage === 1 && \"disabled\"}`}>\r\n          <button\r\n            type=\"button\"\r\n            className={`page-link`}\r\n            onClick={onPrevious}\r\n            tabIndex=\"-1\"\r\n            aria-disabled=\"true\"\r\n          >\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={`page-item ${\r\n            currentPage === Math.ceil(totalCount / perPage) && \"disabled\"\r\n          }`}\r\n        >\r\n          <button type=\"button\" className={`page-link`} onClick={onNext}>\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faEye,\r\n  faRedo,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport Table from \"../../../components/common/table/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { utcToLocalTime } from \"../../../utils/timeHelper\";\r\nimport { personRoles, statuses } from \"../../../utils/appConstants\";\r\nimport Pagination from \"../../../components/common/pagination/Pagination\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction PersonList() {\r\n  const history = useHistory();\r\n\r\n  var [person, setInfo] = useState([]);\r\n  var [searchKey, setSearchKey] = useState(\"\");\r\n\r\n  const [page,setPage] = useState(1);\r\n  const [tCount,setTCount] = useState(0);\r\n\r\n  const pageName = \"Persons\";\r\n  const breadCrumbs = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n    {\r\n      name: \"Persons\",\r\n      link: \"\",\r\n    },\r\n  ];\r\n  const tableHeads = [\r\n    \"Name\",\r\n    \"Email\",\r\n    \"Phone\",\r\n    \"Added Date\",\r\n    \"Status\",\r\n    \"\",\r\n  ];\r\n\r\n  let getPerson = async (searchKey,page) => {\r\n    await axios.get(`${process.env.REACT_APP_API_URL}/persons?keyword=${searchKey}&page=${page}`,\r\n      { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } }).then((response) => {\r\n        const personData = response.data.data.dbData;\r\n        setInfo(personData);\r\n        setTCount(response.data.data.dbCount);\r\n      }).catch(error => {\r\n        console.log(error.response)\r\n      });\r\n\r\n\r\n  };\r\n\r\n  \r\n\r\n  const removeById = async (e, id) => {\r\n    e.preventDefault();\r\n    await axios.delete(`${process.env.REACT_APP_API_URL}/person/${id}/delete`,\r\n      { headers: { \"authorization\": localStorage.getItem(process.env.REACT_APP_AUTH_KEY_NAME) } });\r\n      var personList = person.filter((item) => {\r\n        return item.id !== id;\r\n      });\r\n      setInfo(personList);\r\n\r\n  }\r\n\r\n  const resetList = async(e) => {\r\n    searchKey = \"\";\r\n    setSearchKey(searchKey)\r\n    getPerson(searchKey,page)\r\n  }\r\n\r\n  const handlePageClick = (e) =>{\r\n    setPage(e.selected + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME}`;\r\n    getPerson(searchKey,page);\r\n  }, [searchKey,page]);\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">\r\n                  {pageName}&nbsp;\r\n                  <Link\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-app ms-3\"\r\n                    to={'/person/create'}>\r\n                    Add New\r\n                  </Link>\r\n                </h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>\r\n                      <form\r\n                        name={`${pageName}ListFilter`}>\r\n\r\n                        <div className=\"input-group mt-3 mb-3\">\r\n                          <input\r\n                            name=\"keyword\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Search Person\"\r\n                            value={searchKey}\r\n                            onChange={(e) => setSearchKey(e.target.value)}\r\n\r\n                          />\r\n                          <button\r\n                            className=\"btn btn-outline-app\"\r\n                            type=\"reset\"\r\n                            onClick={(e) => resetList(e)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faRedo} />\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card-body p-0\">\r\n                    <Table\r\n                      data={person.map((listData, index) => ({\r\n                        name: `${listData.firstName} ${listData.lastName}`,\r\n                        email: listData.email,\r\n                        phone: listData.phone,\r\n                        // role: personRoles[listData.role],\r\n                        createdAt: utcToLocalTime(listData.createdAt),\r\n                        status: statuses[listData.status],\r\n                        actions: (\r\n                          <div className=\"dropdown\">\r\n                            <button\r\n                              className=\"btn btn-outline-app dropdown-toggle\"\r\n                              type=\"button\"\r\n                              id={`action-drop-${index}`}\r\n                              data-bs-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"\r\n                            >\r\n                              Actions\r\n                            </button>\r\n                            <ul\r\n                              className=\"dropdown-menu\"\r\n                              aria-labelledby={`action-drop-${index}`}\r\n                            >\r\n                              <li>\r\n                                <Link\r\n                                  className=\"dropdown-item\"\r\n                                  to={`/person/${listData.id}/view`}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faEye} /> View\r\n                                </Link>\r\n                              </li>\r\n                              <li>\r\n                                <Link\r\n                                  className=\"dropdown-item\"\r\n                                  to={`/person/${listData.id}/edit`}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faEdit} /> Edit\r\n                                </Link>\r\n                              </li>\r\n                              <li>\r\n                                <a\r\n                                  className=\"dropdown-item\"\r\n                                  href=\"#\"\r\n                                  onClick={(e) => removeById(e, listData.id)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faTrash} /> Delete\r\n                                </a>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        ),\r\n                      }))}\r\n                      header={tableHeads}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-footer clearfix\">\r\n                    <ReactPaginate\r\n                      breakLabel=\"...\"\r\n                      nextLabel=\" >>\"\r\n                      onPageChange={handlePageClick}\r\n                      // pageRangeDisplayed={10}\r\n                      pageCount={ Math.ceil(tCount / 10)}\r\n                      previousLabel=\"<<\"\r\n                      renderOnZeroPageCount={null}\r\n                      containerClassName={\"pagination justify-content-center\"}\r\n                      pageClassName={\"page-item\"}\r\n                      pageLinkClassName={\"page-link\"}\r\n                      previousClassName={\"page-item\"}\r\n                      previousLinkClassName={\"page-link\"}\r\n                      nextClassName={\"page-item\"}\r\n                      nextLinkClassName={\"page-link\"}\r\n                      activeClassName={\"active\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nexport const utcToLocalTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).format(format);\r\n};\r\n\r\nexport const localToUtcTime = (\r\n  dateTimeString,\r\n  format = \"MM-DD-YYYY h:mm A\"\r\n) => {\r\n  return (dateTimeString ? moment(dateTimeString) : moment()).utc().format(format);\r\n};\r\n"],"sourceRoot":""}