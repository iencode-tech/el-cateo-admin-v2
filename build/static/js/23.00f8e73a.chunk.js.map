{"version":3,"sources":["components/common/inputLabel/InputLabel.js","utils/validationHelper.js","components/common/textInput/TextInput.js","components/common/pagination/Pagination.js","pages/comingsoon/Comingsoon.js","pages/managesectors/create/Create.js","components/common/breadcrumb/Breadcrumb.js"],"names":["InputLabel","props","htmlFor","inputId","className","labelText","isRequired","defaultProps","validatorRule","value","validationKeyword","validation","status","message","test","validator","isEmpty","ignore_whitespace","isFloat","isEmail","isAlpha","ignore","isAlphanumeric","isNumeric","valData","split","equals","validate","inputvalue","validationRules","validationResult","forEach","validationRule","runningValidation","trim","TextInput","_validate","validationData","validations","_handleFormValidation","name","useEffect","id","labelClassName","placeholder","type","inputClassName","formValidationData","rows","onChange","onBlur","e","currentTarget","indexOf","Pagination","totalCount","currentPage","onPageChange","onClick","tabIndex","icon","faArrowLeft","Math","ceil","perPage","faArrowRight","Comingsoon","document","title","process","style","boxShadow","to","SectorCreate","pageName","Breadcrumb","breadCrumbs","link","encType","map","index","activeLink"],"mappings":"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","file":"static/js/23.00f8e73a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./InputLabel.scss\";\r\n\r\nfunction InputLabel(props) {\r\n  return (\r\n    <label htmlFor={props.inputId} className={props.className}>\r\n      {props.labelText}{\" \"}\r\n      {props.isRequired && <span className=\"text-danger\">*</span>}\r\n    </label>\r\n  );\r\n}\r\n\r\nInputLabel.propTypes = {\r\n  inputId: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  labelText: PropTypes.string.isRequired,\r\n  isRequired: PropTypes.bool.isRequired\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n  className: \"form-label\",\r\n  isRequired: false,\r\n  labelText: \"\",\r\n};\r\n\r\nexport default InputLabel;\r\n","import validator from \"validator\";\r\n\r\nconst validatorRule = (value, validationKeyword) => {\r\n  let validation = { status: true, message: \"\" };\r\n  switch (true) {\r\n    case /required/i.test(validationKeyword):\r\n      validation.status = !validator.isEmpty(value, {\r\n        ignore_whitespace: true,\r\n      });\r\n      validation.message =\r\n        validation.status === false ? \"The value is required!\" : \"\";\r\n      break;\r\n    case /float/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isFloat(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be a float!\" : \"\";\r\n      }\r\n      break;\r\n    case /email/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isEmail(value);\r\n        validation.message =\r\n          validation.status === false ? \"The value needs to be an Email!\" : \"\";\r\n      }\r\n      break;\r\n    case /alpha/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlpha(value, \"en-US\", { ignore: \" \" });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Alphabetic!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /alphanumeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isAlphanumeric(value, \"en-US\", {\r\n          ignore: \" \",\r\n        });\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be AlphaNumeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /numeric/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        validation.status = validator.isNumeric(value);\r\n        validation.message =\r\n          validation.status === false\r\n            ? \"The value needs to be only Numeric!\"\r\n            : \"\";\r\n      }\r\n      break;\r\n    case /equals:*/i.test(validationKeyword):\r\n      if (value !== \"\") {\r\n        const valData = validationKeyword.split(\":\");\r\n        validation.status = validator.equals(value, valData[2]);\r\n        validation.message =\r\n          validation.status === false\r\n            ? `The value needs to be same as ${valData[1]}!`\r\n            : \"\";\r\n      }\r\n      break;\r\n    default:\r\n      validation.status = true;\r\n      validation.message = \"\";\r\n      break;\r\n  }\r\n  return validation;\r\n};\r\n\r\nexport const validate = (inputvalue, validationRules = []) => {\r\n  const validationResult = {\r\n    status: true,\r\n    message: \"\",\r\n  };\r\n  validationRules.forEach((validationRule) => {\r\n    const runningValidation = validatorRule(inputvalue, validationRule);\r\n    validationResult.status =\r\n      validationResult.status && runningValidation.status;\r\n    validationResult.message += \" \" + runningValidation.message;\r\n    validationResult.message = validationResult.message.trim();\r\n  });\r\n  return validationResult;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TextInput.scss\";\r\nimport InputLabel from \"../inputLabel/InputLabel\";\r\nimport { validate } from \"../../../utils/validationHelper\";\r\n\r\nfunction TextInput(props) {\r\n  const _validate = (value) => {\r\n    const validationData = validate(value || \"\", props.validations);\r\n    if (validationData.status === false) {\r\n      props._handleFormValidation(props.name, validationData);\r\n    } else {\r\n      props._handleFormValidation(props.name, null);\r\n    }\r\n  };\r\n\r\n  // Remove if Validation causes issue\r\n  useEffect(() => {\r\n    _validate();\r\n  });\r\n\r\n  return (\r\n    <div className=\"m-2\">\r\n      <InputLabel\r\n        inputId={props.id}\r\n        className={props.labelClassName}\r\n        labelText={props.placeholder}\r\n        isRequired={props.isRequired}\r\n      />\r\n      {props.type === \"textarea\" && (\r\n        <textarea\r\n          id={props.id}\r\n          className={`${props.inputClassName} ${\r\n            props.formValidationData[props.name] &&\r\n            props.formValidationData[props.name].status === false &&\r\n            \"is-invalid\"\r\n          }`}\r\n          rows=\"3\"\r\n          placeholder={props.placeholder}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          onBlur={(e) => _validate(e.currentTarget.value)}\r\n        />\r\n      )}\r\n\r\n      {[\"textarea\"].indexOf(props.type) === -1 && (\r\n        <input\r\n          id={props.id}\r\n          className={`${props.inputClassName} ${\r\n            props.formValidationData[props.name] &&\r\n            props.formValidationData[props.name].status === false &&\r\n            \"is-invalid\"\r\n          }`}\r\n          type={props.type}\r\n          placeholder={props.placeholder}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          onBlur={(e) => _validate(e.currentTarget.value)}\r\n        />\r\n      )}\r\n\r\n      {props.formValidationData[props.name] &&\r\n        props.formValidationData[props.name].status === false && (\r\n          <div className=\"invalid-feedback\">\r\n            {props.formValidationData[props.name].message}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  labelClassName: PropTypes.string.isRequired,\r\n  inputClassName: PropTypes.string.isRequired,\r\n  isRequired: PropTypes.bool.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  validations: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  labelClassName: \"form-label\",\r\n  inputClassName: \"form-control\",\r\n  isRequired: false,\r\n  validations: [],\r\n  value: \"\",\r\n  onChange: () => {},\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\nimport { perPage } from \"../../../utils/appConstants\";\r\nimport {\r\n  \r\n  faArrowLeft,\r\n  faArrowRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Pagination({ totalCount, currentPage, onPageChange }) {\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul className=\"pagination justify-content-end\">\r\n        <li className={`page-item ${currentPage === 1 && \"disabled\"}`}>\r\n          <button\r\n            type=\"button\"\r\n            className={`page-link`}\r\n            onClick={onPrevious}\r\n            tabIndex=\"-1\"\r\n            aria-disabled=\"true\"\r\n          >\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={`page-item ${\r\n            currentPage === Math.ceil(totalCount / perPage) && \"disabled\"\r\n          }`}\r\n        >\r\n          <button type=\"button\" className={`page-link`} onClick={onNext}>\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Comingsoon.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Comingsoon() {\r\n  useEffect(() => {\r\n    document.title = `${process.env.REACT_APP_NAME} | Coming Soon`;\r\n  });\r\n\r\n  return (\r\n    <div id=\"comingsoon\">\r\n      <div className=\"comingsoon\">\r\n        \r\n        <h2>Coming Soon</h2>\r\n        <p>\r\n          The page you are looking for might have been removed had its name\r\n          changed or is temporarily unavailable.\r\n        </p>\r\n        <Link\r\n          className={`btn btn-app`}\r\n          style={{ boxShadow: \"0px 4px 15px -5px #77BA33\" }}\r\n          to=\"/dashboard\"\r\n        >\r\n          Back To dashboard\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comingsoon;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Breadcrumb from \"../../../components/common/breadcrumb/Breadcrumb\";\r\nimport ComingSoonComponent from \"../../comingsoon/Comingsoon\";\r\n//form import\r\nimport SectorForm from \"../../../components/pageSpecific/sectors/form/Form\";\r\n\r\nfunction SectorCreate() {\r\n    const pageName = \"Add sector\";\r\n    const breadCrumbs = [\r\n        {\r\n          name: \"Dashboard\",\r\n          link: \"/dashboard\",\r\n        },\r\n        {\r\n          name: \"Sectors\",\r\n          link: \"/sectors\",\r\n        },\r\n        {\r\n          name: \"Add\",\r\n          link: \"\",\r\n        },\r\n      ];\r\n\r\n\r\n      return (\r\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n      <div className=\"col-12 p-0 content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">{pageName}</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <Breadcrumb breadCrumbs={breadCrumbs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-transparent\">\r\n                    <div className={\"row\"}>&nbsp;</div>\r\n                  </div>\r\n\r\n                  <form\r\n                    name={`${pageName}Create`}\r\n                    encType={`multipart/form-data`}\r\n                  >\r\n                    <div className=\"card-body\">\r\n                     <ComingSoonComponent/>\r\n            \r\n                    </div>\r\n\r\n                    <div className=\"card-footer clearfix\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-app float-end\"\r\n                      \r\n                      >\r\n                        \r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default SectorCreate;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Breadcrumb.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb({ breadCrumbs }) {\r\n  return (\r\n    <nav className=\"float-sm-end\" aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {breadCrumbs.map((value, index) => {\r\n          const activeLink = value.link && value.link !== \"\";\r\n          return (\r\n            <li\r\n              className={`breadcrumb-item ${activeLink ? \"active\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              {activeLink ? (\r\n                <Link to={value.link}>{value.name}</Link>\r\n              ) : (\r\n                value.name\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n  breadCrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  breadCrumbs: [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}